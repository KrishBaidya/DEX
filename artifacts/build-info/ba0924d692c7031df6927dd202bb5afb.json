{
	"id": "ba0924d692c7031df6927dd202bb5afb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"DEX.sol_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: MEME.sol\n\n\npragma solidity ^0.8.9;\n\n\n\n\n\ncontract MEME is ERC20, ERC20Burnable, Pausable, Ownable {\n    constructor() ERC20(\"MEME\", \"MEME\") {\n        _mint(msg.sender, 50000 * 10 ** decimals());\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal\n        whenNotPaused\n        override\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n\n// File: DEX.sol\n\n\npragma solidity ^0.8.19;\n\n\n\n\n\ncontract DEX is Pausable, Ownable {\n    struct Stack_Struct {\n        uint256 meme_amount;\n        uint256 eth_amount;\n        uint256 time;\n    }\n    ERC20 meme;\n\n    event Buy(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event Sell(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event Stack(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event UnStack(\n        address indexed from,\n        uint256 Meme_amount,\n        uint256 eth_amount\n    );\n\n    mapping(address => Stack_Struct[]) internal Stacked;\n\n    mapping(uint256 => uint256) public dailyTax;\n\n    uint256 public stackingRate;\n\n    uint256 public _k;\n    uint256 public _x;\n    uint256 public _y;\n\n    uint256 public precision = 10e18;\n\n    uint256 public taxRate = (3 * precision) / 10;\n\n    constructor(address addr) {\n        meme = MEME(addr);\n\n        //_stack(10000000, 10000000);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function _updateK() internal {\n        _k = _x * _y;\n    }\n\n    function getStacks() public view returns (Stack_Struct[] memory) {\n        return Stacked[msg.sender];\n    }\n\n    function stack(uint256 meme_amount) public payable {\n        require(meme_amount > 0, \"Send more MEME\");\n        require(msg.value > 0, \"Send more ETH\");\n        require(\n            stackingRate <= (msg.value * precision) / meme_amount,\n            \"Stacking Rate not met\"\n        );\n        _stack(meme_amount, msg.value);\n    }\n\n    function unstack(uint256 index) public {\n        require(index >= 0, \"Index can't be less then 0\");\n        _unstack(index);\n    }\n\n    function _stack(uint256 meme_amount, uint256 eth_amount) internal {\n        meme.transferFrom(msg.sender, address(this), meme_amount);\n        _x += meme_amount;\n        _y += eth_amount;\n\n        Stack_Struct memory ss = Stack_Struct(\n            meme_amount,\n            eth_amount,\n            block.timestamp\n        );\n        Stacked[msg.sender].push(ss);\n\n        stackingRate = ((_y * precision) / _x);\n\n        _updateK();\n        emit Stack(msg.sender, meme_amount, msg.value);\n    }\n\n    function _unstack(uint256 index) internal {\n        Stack_Struct memory ss = Stacked[msg.sender][index];\n        uint256 tax = _distributeTax();\n\n        uint256 meme_to_return = ss.meme_amount;\n        uint256 eth_to_return = ss.eth_amount + tax;\n\n        require(\n            meme.balanceOf(address(this)) >= meme_to_return,\n            \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\"\n        );\n        require(\n            address(this).balance >= eth_to_return,\n            \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\"\n        );\n\n        _x -= meme_to_return;\n        _y -= eth_to_return;\n\n        meme.transfer(msg.sender, meme_to_return);\n        payable(msg.sender).transfer(eth_to_return);\n\n        if (_x == 0) {\n            stackingRate = 0;\n        } else {\n            stackingRate = (_y * precision) / _x;\n        }\n\n        _removeArr(index);\n\n        _updateK();\n        emit UnStack(msg.sender, meme_to_return, eth_to_return);\n    }\n\n    function _removeArr(uint256 index) internal {\n        require(index < Stacked[msg.sender].length, \"Index out of bounds\");\n        for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {\n            Stacked[msg.sender][i] = Stacked[msg.sender][i + 1];\n        }\n        Stacked[msg.sender].pop();\n    }\n\n    function _distributeTax() internal view returns (uint256) {\n        uint256 taxShare = 0;\n        if (dailyTax[block.timestamp / 1 days] > 0) {\n            Stack_Struct[] storage stacks = Stacked[msg.sender];\n            uint256 numStacks = stacks.length;\n            uint256 totalStackTime = 0;\n            for (uint256 i = 0; i < numStacks; i++) {\n                Stack_Struct memory ss = stacks[i];\n                totalStackTime += (block.timestamp - ss.time);\n            }\n            for (uint256 i = 0; i < numStacks; i++) {\n                Stack_Struct memory ss = stacks[i];\n                uint256 poolShare = ((ss.meme_amount * precision) / _x);\n                uint256 stackTime = (block.timestamp - ss.time);\n                uint256 stackWeight = stackTime / totalStackTime;\n                taxShare +=\n                    (poolShare *\n                        dailyTax[block.timestamp / 1 days] *\n                        stackWeight) /\n                    _k;\n            }\n        }\n        return taxShare;\n    }\n\n    function getMemePrice(uint256 meme_amount) public view returns (uint256) {\n        require(_k > 0, \"Not enough liquidity\");\n        uint256 dx = 0;\n        uint256 dy = 0;\n        if (_y == 0) {\n            dx = _k / 1 - meme_amount;\n        } else {\n            dx = _k / _y - meme_amount;\n        }\n        if (dx == 0) {\n            dy = _k / 1;\n        } else {\n            dy = _k / dx;\n        }\n        uint256 eth_price_without_tax = dy - _y;\n        uint256 eth_tax = (eth_price_without_tax * taxRate) / precision;\n\n        uint256 eth_price_with_tax = eth_price_without_tax + eth_tax;\n        return eth_price_with_tax;\n    }\n\n    function getETHPrice(uint256 eth_amount) public view returns (uint256) {\n        require(_k > 0, \"Not enough liquidity\");\n        uint256 dx = 0;\n        uint256 dy = 0;\n        if (_x == 0) {\n            dy = _k / 1 - eth_amount;\n        } else {\n            dy = _k / _x - eth_amount;\n        }\n        if (dy == 0) {\n            dx = _k / 1;\n        } else {\n            dx = _k / dy;\n        }\n        uint256 meme_price_without_tax = dx - _x;\n        uint256 meme_tax = (meme_price_without_tax * taxRate) / precision;\n\n        uint256 meme_price_with_tax = meme_price_without_tax - meme_tax;\n\n        return meme_price_with_tax;\n    }\n\n    function buy(uint256 meme_amount) public payable {\n        require(meme_amount > 0, \"Send Some Meme\");\n        uint256 meme_price = getMemePrice(meme_amount);\n        require(meme_price <= msg.value, \"Send More ETH\");\n\n        meme.transfer(msg.sender, meme_amount);\n        payable(msg.sender).transfer(msg.value - meme_price);\n\n        dailyTax[block.timestamp / 1 days] +=\n            (meme_amount * (precision + taxRate)) /\n            precision;\n\n        _x -= meme_amount;\n        _y = (_k / _x);\n\n        emit Buy(msg.sender, meme_amount, meme_price);\n    }\n\n    function sell(uint256 eth_amount) public {\n        require(eth_amount > 0, \"Send Some ETH\");\n        uint256 eth_price = getETHPrice(eth_amount);\n\n        require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\");\n        meme.transferFrom(msg.sender, address(this), eth_price);\n        payable(msg.sender).transfer(eth_amount);\n\n        dailyTax[block.timestamp / 1 days] +=\n            (eth_price * (precision + taxRate)) /\n            precision;\n\n        _y -= eth_amount;\n        _x = (_k / _y);\n\n        emit Sell(msg.sender, eth_price, eth_amount);\n    }\n\n    // function secondsToDays(uint256 second) public pure returns (uint256) {\n    //     return second / 1 days;\n    // }\n\n    // function check(uint256 index) public view returns (uint256) {\n    //     Stack_Struct memory ss = Stacked[msg.sender][index];\n\n    //     uint256 timestamp = block.timestamp - ss.time;\n    //     uint256 poolShare = ((ss.meme_amount * taxRate * timestamp) / _x);\n\n    //     return poolShare;\n    // }\n}\n\n// pragma solidity ^0.8.9;\n\n// import \"@openzeppelin/contracts/security/Pausable.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// import \"MEME.sol\";\n\n// struct Stack_Struct {\n//     uint256 meme_amount;\n//     uint256 eth_amount;\n//     uint256 time;\n//     uint256 stackingRate;\n// }\n\n// contract DEX is Pausable, Ownable {\n//     ERC20 meme;\n\n//     mapping(address => Stack_Struct) public Stacked;\n\n//     uint256 public stackingRate;\n\n//     uint256 public _k;\n//     uint256 public _x;\n//     uint256 public _y;\n\n//     uint256 public precision = 10**18;\n\n//     constructor(address addr) {\n//         meme = MEME(addr);\n\n//         //_stack(10000000, 10000000);\n//     }\n\n//     function pause() public onlyOwner {\n//         _pause();\n//     }\n\n//     function unpause() public onlyOwner {\n//         _unpause();\n//     }\n\n//     function _updateK() internal {\n//         _k = _x * _y;\n//     }\n\n//     function stack(uint256 meme_amount) public payable {\n//         require(0 < msg.value , \"Eth can't be 0\");\n//         require(0 < meme_amount , \"Meme can't be 0\");\n//         // if(Stacked[msg.sender].stackingRate != 0){\n//         // }\n//         require(stackingRate <= ((msg.value * precision) / meme_amount));\n//         _stack(meme_amount);\n//     }\n\n//     function unstack(uint256 meme_amount) public {\n//         require(0 < meme_amount , \"Meme can't be 0\");\n\n//         uint256 eth_amount2 = ((Stacked[msg.sender].stackingRate * meme_amount) / precision);\n//         _unstack(meme_amount, eth_amount2, msg.sender);\n//     }\n\n//     function _stack(uint256 meme_amount) internal {\n//         meme.transferFrom(msg.sender, address(this), meme_amount);\n\n//         _x += meme_amount;\n//         _y += msg.value;\n\n//         Stacked[msg.sender].meme_amount += meme_amount;\n//         Stacked[msg.sender].eth_amount += msg.value;\n//         Stacked[msg.sender].time = block.timestamp;\n\n//         Stacked[msg.sender].stackingRate = ((_y * precision) / _x);\n//         stackingRate = Stacked[msg.sender].stackingRate;\n\n//         _updateK();\n//     }\n\n//     function _unstack(\n//         uint256 meme_amount,\n//         uint256 eth_amount,\n//         address to\n//     ) public {\n//         _x -= meme_amount;\n//         _y -= eth_amount;\n\n//         Stacked[to].meme_amount -= meme_amount;\n//         Stacked[to].eth_amount -= eth_amount;\n//         Stacked[to].time = block.timestamp;\n\n//         meme.transfer(to, meme_amount);\n//         payable(to).transfer(eth_amount);\n\n//         if (_x == 0) {\n//             Stacked[msg.sender].stackingRate = 0;\n//             stackingRate = 0;\n//         } else {\n//             Stacked[msg.sender].stackingRate = (_y * precision) / _x;\n//             stackingRate = Stacked[msg.sender].stackingRate;\n//         }\n\n//         _updateK();\n//     }\n\n//     // function _buy(uint128 meme_amount) public payable {\n//     //     uint dx = meme_amount;\n//     //     uint dy = _y;\n\n//     //     _x += dx;\n//     //     _y = _k / _x;\n\n//     //     dy -= _y;\n\n//     //     memeBalance += dx;\n//     //     ethBalance -= dy;\n//     // }\n\n//     // function _sell(uint128 meme_amount) public payable {\n//     //     uint256 dx = meme_amount;\n//     //     uint256 dy = _y;\n\n//     //     _x -= dx;\n//     //     _y = _k / _x;\n\n//     //     dy = _y - dy;\n\n//     //     memeBalance -= dx;\n//     //     ethBalance += dy;\n//     // }\n// }\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"DEX.sol_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Sell",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Stack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "UnStack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_k",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_y",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "dailyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "getMemePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStacks",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "meme_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "eth_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "time",
											"type": "uint256"
										}
									],
									"internalType": "struct DEX.Stack_Struct[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "precision",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "stack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stackingRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "unstack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DEX.sol_flattened.sol\":24286:31737  contract DEX is Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DEX.sol_flattened.sol\":25043:25048  10e18 */\n  0x8ac7230489e80000\n    /* \"DEX.sol_flattened.sol\":25016:25048  uint256 public precision = 10e18 */\n  0x08\n  sstore\n    /* \"DEX.sol_flattened.sol\":25098:25100  10 */\n  0x0a\n    /* \"DEX.sol_flattened.sol\":25085:25094  precision */\n  sload(0x08)\n    /* \"DEX.sol_flattened.sol\":25081:25082  3 */\n  0x03\n    /* \"DEX.sol_flattened.sol\":25081:25094  3 * precision */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"DEX.sol_flattened.sol\":25080:25100  (3 * precision) / 10 */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"DEX.sol_flattened.sol\":25055:25100  uint256 public taxRate = (3 * precision) / 10 */\n  0x09\n  sstore\n    /* \"DEX.sol_flattened.sol\":25107:25206  constructor(address addr) {... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"DEX.sol_flattened.sol\":22045:22050  false */\n  0x00\n    /* \"DEX.sol_flattened.sol\":22035:22050  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"DEX.sol_flattened.sol\":19357:19389  _transferOwnership(_msgSender()) */\n  tag_13\n    /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n  caller\n    /* \"DEX.sol_flattened.sol\":19357:19375  _transferOwnership */\n  tag_16\n    /* \"DEX.sol_flattened.sol\":19357:19389  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_13:\n    /* \"DEX.sol_flattened.sol\":25143:25147  meme */\n  0x01\n    /* \"DEX.sol_flattened.sol\":25143:25160  meme = MEME(addr) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"DEX.sol_flattened.sol\":24286:31737  contract DEX is Pausable, Ownable {... */\n  jump(tag_21)\n    /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"DEX.sol_flattened.sol\":20927:20943  address oldOwner */\n  0x00\n    /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n  0x0100\n    /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  dup6\n  sstore\n    /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n  swap4\n  div\n  swap2\n  swap1\n  swap2\n  and\n  swap3\n    /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n  swap1\n  swap2\n    /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n  dup4\n  swap2\n    /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n  log3\n    /* \"DEX.sol_flattened.sol\":20917:21041  {... */\n  pop\n    /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:279   */\ntag_2:\n    /* \"#utility.yul\":87:96   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":118:127   */\n  dup2\n  iszero\n    /* \"#utility.yul\":135:150   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":129:151   */\n  dup5\n  eq\n    /* \"#utility.yul\":115:152   */\n  or\n    /* \"#utility.yul\":105:273   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":195:205   */\n  0x4e487b71\n    /* \"#utility.yul\":190:193   */\n  0xe0\n    /* \"#utility.yul\":186:206   */\n  shl\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":176:207   */\n  mstore\n    /* \"#utility.yul\":230:234   */\n  0x11\n    /* \"#utility.yul\":227:228   */\n  0x04\n    /* \"#utility.yul\":220:235   */\n  mstore\n    /* \"#utility.yul\":258:262   */\n  0x24\n    /* \"#utility.yul\":255:256   */\n  0x00\n    /* \"#utility.yul\":248:263   */\n  revert\n    /* \"#utility.yul\":105:273   */\ntag_23:\n    /* \"#utility.yul\":14:279   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":284:501   */\ntag_4:\n    /* \"#utility.yul\":324:325   */\n  0x00\n    /* \"#utility.yul\":350:351   */\n  dup3\n    /* \"#utility.yul\":340:472   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":394:404   */\n  0x4e487b71\n    /* \"#utility.yul\":389:392   */\n  0xe0\n    /* \"#utility.yul\":385:405   */\n  shl\n    /* \"#utility.yul\":382:383   */\n  0x00\n    /* \"#utility.yul\":375:406   */\n  mstore\n    /* \"#utility.yul\":429:433   */\n  0x12\n    /* \"#utility.yul\":426:427   */\n  0x04\n    /* \"#utility.yul\":419:434   */\n  mstore\n    /* \"#utility.yul\":457:461   */\n  0x24\n    /* \"#utility.yul\":454:455   */\n  0x00\n    /* \"#utility.yul\":447:462   */\n  revert\n    /* \"#utility.yul\":340:472   */\ntag_25:\n  pop\n    /* \"#utility.yul\":486:495   */\n  div\n  swap1\n    /* \"#utility.yul\":284:501   */\n  jump\t// out\n    /* \"#utility.yul\":506:796   */\ntag_7:\n    /* \"#utility.yul\":576:582   */\n  0x00\n    /* \"#utility.yul\":629:631   */\n  0x20\n    /* \"#utility.yul\":617:626   */\n  dup3\n    /* \"#utility.yul\":608:615   */\n  dup5\n    /* \"#utility.yul\":604:627   */\n  sub\n    /* \"#utility.yul\":600:632   */\n  slt\n    /* \"#utility.yul\":597:649   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":645:646   */\n  0x00\n    /* \"#utility.yul\":642:643   */\n  dup1\n    /* \"#utility.yul\":635:647   */\n  revert\n    /* \"#utility.yul\":597:649   */\ntag_27:\n    /* \"#utility.yul\":671:687   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":716:747   */\n  dup2\n  and\n    /* \"#utility.yul\":706:748   */\n  dup2\n  eq\n    /* \"#utility.yul\":696:766   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":762:763   */\n  0x00\n    /* \"#utility.yul\":759:760   */\n  dup1\n    /* \"#utility.yul\":752:764   */\n  revert\n    /* \"#utility.yul\":696:766   */\ntag_28:\n    /* \"#utility.yul\":785:790   */\n  swap4\n    /* \"#utility.yul\":506:796   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_21:\n    /* \"DEX.sol_flattened.sol\":24286:31737  contract DEX is Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DEX.sol_flattened.sol\":24286:31737  contract DEX is Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x771a3a1d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd96a094a\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdc9031c4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe8bca8b8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x771a3a1d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9c74f05d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd3b5dc3b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x2ad9d559\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2ad9d559\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c572ed0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x1a753fed\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1b82c27f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200061df\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28726bda\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x29809703\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DEX.sol_flattened.sol\":29506:30145  function getETHPrice(uint256 eth_amount) public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"DEX.sol_flattened.sol\":29506:30145  function getETHPrice(uint256 eth_amount) public view returns (uint256) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DEX.sol_flattened.sol\":24946:24963  uint256 public _k */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_26\n      sload(0x05)\n      dup2\n      jump\n        /* \"DEX.sol_flattened.sol\":25860:25990  function unstack(uint256 index) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"DEX.sol_flattened.sol\":24992:25009  uint256 public _y */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_26\n      sload(0x07)\n      dup2\n      jump\n        /* \"DEX.sol_flattened.sol\":24969:24986  uint256 public _x */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_26\n      sload(0x06)\n      dup2\n      jump\n        /* \"DEX.sol_flattened.sol\":24862:24905  mapping(uint256 => uint256) public dailyTax */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_26\n      tag_50\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_50:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"DEX.sol_flattened.sol\":25277:25340  function unpause() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_37\n      tag_55\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":28865:29500  function getMemePrice(uint256 meme_amount) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_26\n      tag_58\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":22654:22738  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n        /* \"DEX.sol_flattened.sol\":22701:22705  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":22724:22731  _paused */\n      sload\n      0xff\n      and\n        /* \"DEX.sol_flattened.sol\":22654:22738  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":546:560   */\n      swap1\n      iszero\n        /* \"#utility.yul\":539:561   */\n      iszero\n        /* \"#utility.yul\":521:562   */\n      dup2\n      mstore\n        /* \"#utility.yul\":509:511   */\n      0x20\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"DEX.sol_flattened.sol\":22654:22738  function paused() public view virtual returns (bool) {... */\n      tag_30\n        /* \"#utility.yul\":381:568   */\n      jump\n        /* \"DEX.sol_flattened.sol\":20252:20353  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_37\n      tag_68\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":25055:25100  uint256 public taxRate = (3 * precision) / 10 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_26\n      sload(0x09)\n      dup2\n      jump\n        /* \"DEX.sol_flattened.sol\":25212:25271  function pause() public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_37\n      tag_75\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":19622:19707  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n        /* \"DEX.sol_flattened.sol\":19668:19675  address */\n      0x00\n        /* \"DEX.sol_flattened.sol\":19694:19700  _owner */\n      sload\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DEX.sol_flattened.sol\":19622:19707  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":737:769   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":719:770   */\n      dup2\n      mstore\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":692:710   */\n      add\n        /* \"DEX.sol_flattened.sol\":19622:19707  function owner() public view virtual returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":573:776   */\n      jump\n        /* \"DEX.sol_flattened.sol\":24912:24939  uint256 public stackingRate */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_26\n      sload(0x04)\n      dup2\n      jump\n        /* \"DEX.sol_flattened.sol\":25016:25048  uint256 public precision = 10e18 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_26\n      sload(0x08)\n      dup2\n      jump\n        /* \"DEX.sol_flattened.sol\":30151:30715  function buy(uint256 meme_amount) public payable {... */\n    tag_17:\n      tag_37\n      tag_90\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":25524:25854  function stack(uint256 meme_amount) public payable {... */\n    tag_18:\n      tag_37\n      tag_93\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":30721:31302  function sell(uint256 eth_amount) public {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_37\n      tag_97\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":25410:25518  function getStacks() public view returns (Stack_Struct[] memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":20502:20700  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_37\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":29506:30145  function getETHPrice(uint256 eth_amount) public view returns (uint256) {... */\n    tag_29:\n        /* \"DEX.sol_flattened.sol\":29568:29575  uint256 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29600:29601  0 */\n      dup1\n        /* \"DEX.sol_flattened.sol\":29595:29597  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29595:29601  _k > 0 */\n      gt\n        /* \"DEX.sol_flattened.sol\":29587:29626  require(_k > 0, \"Not enough liquidity\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2132:2134   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":29587:29626  require(_k > 0, \"Not enough liquidity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2114:2135   */\n      mstore\n        /* \"#utility.yul\":2171:2173   */\n      0x14\n        /* \"#utility.yul\":2151:2169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2144:2174   */\n      mstore\n      shl(0x60, 0x4e6f7420656e6f756768206c6971756964697479)\n        /* \"#utility.yul\":2190:2208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2183:2233   */\n      mstore\n        /* \"#utility.yul\":2250:2268   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":29587:29626  require(_k > 0, \"Not enough liquidity\") */\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"DEX.sol_flattened.sol\":29636:29646  uint256 dx */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29660:29670  uint256 dy */\n      dup1\n        /* \"DEX.sol_flattened.sol\":29688:29690  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":29694:29695  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29688:29695  _x == 0 */\n      sub\n        /* \"DEX.sol_flattened.sol\":29684:29802  if (_x == 0) {... */\n      tag_113\n      jumpi\n        /* \"DEX.sol_flattened.sol\":29725:29735  eth_amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":29721:29722  1 */\n      0x01\n        /* \"DEX.sol_flattened.sol\":29716:29718  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29716:29722  _k / 1 */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"DEX.sol_flattened.sol\":29716:29735  _k / 1 - eth_amount */\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"DEX.sol_flattened.sol\":29711:29735  dy = _k / 1 - eth_amount */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":29684:29802  if (_x == 0) {... */\n      jump(tag_118)\n    tag_113:\n        /* \"DEX.sol_flattened.sol\":29781:29791  eth_amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":29776:29778  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":29771:29773  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29771:29778  _k / _x */\n      tag_119\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_119:\n        /* \"DEX.sol_flattened.sol\":29771:29791  _k / _x - eth_amount */\n      tag_120\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_120:\n        /* \"DEX.sol_flattened.sol\":29766:29791  dy = _k / _x - eth_amount */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":29684:29802  if (_x == 0) {... */\n    tag_118:\n        /* \"DEX.sol_flattened.sol\":29815:29817  dy */\n      dup1\n        /* \"DEX.sol_flattened.sol\":29821:29822  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29815:29822  dy == 0 */\n      sub\n        /* \"DEX.sol_flattened.sol\":29811:29903  if (dy == 0) {... */\n      tag_121\n      jumpi\n        /* \"DEX.sol_flattened.sol\":29848:29849  1 */\n      0x01\n        /* \"DEX.sol_flattened.sol\":29843:29845  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29843:29849  _k / 1 */\n      tag_122\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_122:\n        /* \"DEX.sol_flattened.sol\":29838:29849  dx = _k / 1 */\n      swap2\n      pop\n        /* \"DEX.sol_flattened.sol\":29811:29903  if (dy == 0) {... */\n      jump(tag_123)\n    tag_121:\n        /* \"DEX.sol_flattened.sol\":29890:29892  dy */\n      dup1\n        /* \"DEX.sol_flattened.sol\":29885:29887  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29885:29892  _k / dy */\n      tag_124\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_124:\n        /* \"DEX.sol_flattened.sol\":29880:29892  dx = _k / dy */\n      swap2\n      pop\n        /* \"DEX.sol_flattened.sol\":29811:29903  if (dy == 0) {... */\n    tag_123:\n        /* \"DEX.sol_flattened.sol\":29912:29942  uint256 meme_price_without_tax */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29950:29952  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":29945:29947  dx */\n      dup4\n        /* \"DEX.sol_flattened.sol\":29945:29952  dx - _x */\n      tag_125\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_125:\n        /* \"DEX.sol_flattened.sol\":29912:29952  uint256 meme_price_without_tax = dx - _x */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":29962:29978  uint256 meme_tax */\n      0x00\n        /* \"DEX.sol_flattened.sol\":30018:30027  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":30007:30014  taxRate */\n      sload(0x09)\n        /* \"DEX.sol_flattened.sol\":29982:30004  meme_price_without_tax */\n      dup4\n        /* \"DEX.sol_flattened.sol\":29982:30014  meme_price_without_tax * taxRate */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"DEX.sol_flattened.sol\":29981:30027  (meme_price_without_tax * taxRate) / precision */\n      tag_128\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_128:\n        /* \"DEX.sol_flattened.sol\":29962:30027  uint256 meme_tax = (meme_price_without_tax * taxRate) / precision */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":30038:30065  uint256 meme_price_with_tax */\n      0x00\n        /* \"DEX.sol_flattened.sol\":30068:30101  meme_price_without_tax - meme_tax */\n      tag_129\n        /* \"DEX.sol_flattened.sol\":29962:30027  uint256 meme_tax = (meme_price_without_tax * taxRate) / precision */\n      dup3\n        /* \"DEX.sol_flattened.sol\":30068:30090  meme_price_without_tax */\n      dup5\n        /* \"DEX.sol_flattened.sol\":30068:30101  meme_price_without_tax - meme_tax */\n      tag_117\n      jump\t// in\n    tag_129:\n        /* \"DEX.sol_flattened.sol\":30038:30101  uint256 meme_price_with_tax = meme_price_without_tax - meme_tax */\n      swap8\n        /* \"DEX.sol_flattened.sol\":29506:30145  function getETHPrice(uint256 eth_amount) public view returns (uint256) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":25860:25990  function unstack(uint256 index) public {... */\n    tag_39:\n        /* \"DEX.sol_flattened.sol\":25968:25983  _unstack(index) */\n      tag_134\n        /* \"DEX.sol_flattened.sol\":25977:25982  index */\n      dup2\n        /* \"DEX.sol_flattened.sol\":25968:25976  _unstack */\n      tag_135\n        /* \"DEX.sol_flattened.sol\":25968:25983  _unstack(index) */\n      jump\t// in\n    tag_134:\n        /* \"DEX.sol_flattened.sol\":25860:25990  function unstack(uint256 index) public {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":25277:25340  function unpause() public onlyOwner {... */\n    tag_55:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_137\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_138\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"DEX.sol_flattened.sol\":25323:25333  _unpause() */\n      tag_140\n        /* \"DEX.sol_flattened.sol\":25323:25331  _unpause */\n      tag_141\n        /* \"DEX.sol_flattened.sol\":25323:25333  _unpause() */\n      jump\t// in\n    tag_140:\n        /* \"DEX.sol_flattened.sol\":25277:25340  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":28865:29500  function getMemePrice(uint256 meme_amount) public view returns (uint256) {... */\n    tag_59:\n        /* \"DEX.sol_flattened.sol\":28929:28936  uint256 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28961:28962  0 */\n      dup1\n        /* \"DEX.sol_flattened.sol\":28956:28958  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":28956:28962  _k > 0 */\n      gt\n        /* \"DEX.sol_flattened.sol\":28948:28987  require(_k > 0, \"Not enough liquidity\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2132:2134   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":28948:28987  require(_k > 0, \"Not enough liquidity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2114:2135   */\n      mstore\n        /* \"#utility.yul\":2171:2173   */\n      0x14\n        /* \"#utility.yul\":2151:2169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2144:2174   */\n      mstore\n      shl(0x60, 0x4e6f7420656e6f756768206c6971756964697479)\n        /* \"#utility.yul\":2190:2208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2183:2233   */\n      mstore\n        /* \"#utility.yul\":2250:2268   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":28948:28987  require(_k > 0, \"Not enough liquidity\") */\n      tag_111\n        /* \"#utility.yul\":1930:2274   */\n      jump\n        /* \"DEX.sol_flattened.sol\":28948:28987  require(_k > 0, \"Not enough liquidity\") */\n    tag_143:\n        /* \"DEX.sol_flattened.sol\":28997:29007  uint256 dx */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29021:29031  uint256 dy */\n      dup1\n        /* \"DEX.sol_flattened.sol\":29049:29051  _y */\n      sload(0x07)\n        /* \"DEX.sol_flattened.sol\":29055:29056  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29049:29056  _y == 0 */\n      sub\n        /* \"DEX.sol_flattened.sol\":29045:29165  if (_y == 0) {... */\n      tag_145\n      jumpi\n        /* \"DEX.sol_flattened.sol\":29086:29097  meme_amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":29082:29083  1 */\n      0x01\n        /* \"DEX.sol_flattened.sol\":29077:29079  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29077:29083  _k / 1 */\n      tag_146\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_146:\n        /* \"DEX.sol_flattened.sol\":29077:29097  _k / 1 - meme_amount */\n      tag_147\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_147:\n        /* \"DEX.sol_flattened.sol\":29072:29097  dx = _k / 1 - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol_flattened.sol\":29045:29165  if (_y == 0) {... */\n      jump(tag_148)\n    tag_145:\n        /* \"DEX.sol_flattened.sol\":29143:29154  meme_amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":29138:29140  _y */\n      sload(0x07)\n        /* \"DEX.sol_flattened.sol\":29133:29135  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29133:29140  _k / _y */\n      tag_149\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_149:\n        /* \"DEX.sol_flattened.sol\":29133:29154  _k / _y - meme_amount */\n      tag_150\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_150:\n        /* \"DEX.sol_flattened.sol\":29128:29154  dx = _k / _y - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol_flattened.sol\":29045:29165  if (_y == 0) {... */\n    tag_148:\n        /* \"DEX.sol_flattened.sol\":29178:29180  dx */\n      dup2\n        /* \"DEX.sol_flattened.sol\":29184:29185  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29178:29185  dx == 0 */\n      sub\n        /* \"DEX.sol_flattened.sol\":29174:29266  if (dx == 0) {... */\n      tag_151\n      jumpi\n        /* \"DEX.sol_flattened.sol\":29211:29212  1 */\n      0x01\n        /* \"DEX.sol_flattened.sol\":29206:29208  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29206:29212  _k / 1 */\n      tag_152\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_152:\n        /* \"DEX.sol_flattened.sol\":29201:29212  dy = _k / 1 */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":29174:29266  if (dx == 0) {... */\n      jump(tag_153)\n    tag_151:\n        /* \"DEX.sol_flattened.sol\":29253:29255  dx */\n      dup2\n        /* \"DEX.sol_flattened.sol\":29248:29250  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":29248:29255  _k / dx */\n      tag_154\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_154:\n        /* \"DEX.sol_flattened.sol\":29243:29255  dy = _k / dx */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":29174:29266  if (dx == 0) {... */\n    tag_153:\n        /* \"DEX.sol_flattened.sol\":29275:29304  uint256 eth_price_without_tax */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29312:29314  _y */\n      sload(0x07)\n        /* \"DEX.sol_flattened.sol\":29307:29309  dy */\n      dup3\n        /* \"DEX.sol_flattened.sol\":29307:29314  dy - _y */\n      tag_155\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_155:\n        /* \"DEX.sol_flattened.sol\":29275:29314  uint256 eth_price_without_tax = dy - _y */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":29324:29339  uint256 eth_tax */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29378:29387  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":29367:29374  taxRate */\n      sload(0x09)\n        /* \"DEX.sol_flattened.sol\":29343:29364  eth_price_without_tax */\n      dup4\n        /* \"DEX.sol_flattened.sol\":29343:29374  eth_price_without_tax * taxRate */\n      tag_156\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_156:\n        /* \"DEX.sol_flattened.sol\":29342:29387  (eth_price_without_tax * taxRate) / precision */\n      tag_157\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_157:\n        /* \"DEX.sol_flattened.sol\":29324:29387  uint256 eth_tax = (eth_price_without_tax * taxRate) / precision */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":29398:29424  uint256 eth_price_with_tax */\n      0x00\n        /* \"DEX.sol_flattened.sol\":29427:29458  eth_price_without_tax + eth_tax */\n      tag_129\n        /* \"DEX.sol_flattened.sol\":29324:29387  uint256 eth_tax = (eth_price_without_tax * taxRate) / precision */\n      dup3\n        /* \"DEX.sol_flattened.sol\":29427:29448  eth_price_without_tax */\n      dup5\n        /* \"DEX.sol_flattened.sol\":29427:29458  eth_price_without_tax + eth_tax */\n      tag_159\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":20252:20353  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_162\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_138\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"DEX.sol_flattened.sol\":20316:20346  _transferOwnership(address(0)) */\n      tag_140\n        /* \"DEX.sol_flattened.sol\":20343:20344  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":20316:20334  _transferOwnership */\n      tag_165\n        /* \"DEX.sol_flattened.sol\":20316:20346  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":25212:25271  function pause() public onlyOwner {... */\n    tag_75:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_167\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_138\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"DEX.sol_flattened.sol\":25256:25264  _pause() */\n      tag_140\n        /* \"DEX.sol_flattened.sol\":25256:25262  _pause */\n      tag_170\n        /* \"DEX.sol_flattened.sol\":25256:25264  _pause() */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":30151:30715  function buy(uint256 meme_amount) public payable {... */\n    tag_91:\n        /* \"DEX.sol_flattened.sol\":30232:30233  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":30218:30229  meme_amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":30218:30233  meme_amount > 0 */\n      gt\n        /* \"DEX.sol_flattened.sol\":30210:30252  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3626:3628   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":30210:30252  require(meme_amount > 0, \"Send Some Meme\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3608:3629   */\n      mstore\n        /* \"#utility.yul\":3665:3667   */\n      0x0e\n        /* \"#utility.yul\":3645:3663   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3638:3668   */\n      mstore\n      shl(0x90, 0x53656e6420536f6d65204d656d65)\n        /* \"#utility.yul\":3684:3702   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3677:3721   */\n      mstore\n        /* \"#utility.yul\":3738:3756   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":30210:30252  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_111\n        /* \"#utility.yul\":3424:3762   */\n      jump\n        /* \"DEX.sol_flattened.sol\":30210:30252  require(meme_amount > 0, \"Send Some Meme\") */\n    tag_173:\n        /* \"DEX.sol_flattened.sol\":30262:30280  uint256 meme_price */\n      0x00\n        /* \"DEX.sol_flattened.sol\":30283:30308  getMemePrice(meme_amount) */\n      tag_176\n        /* \"DEX.sol_flattened.sol\":30296:30307  meme_amount */\n      dup3\n        /* \"DEX.sol_flattened.sol\":30283:30295  getMemePrice */\n      tag_59\n        /* \"DEX.sol_flattened.sol\":30283:30308  getMemePrice(meme_amount) */\n      jump\t// in\n    tag_176:\n        /* \"DEX.sol_flattened.sol\":30262:30308  uint256 meme_price = getMemePrice(meme_amount) */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":30340:30349  msg.value */\n      callvalue\n        /* \"DEX.sol_flattened.sol\":30326:30336  meme_price */\n      dup2\n        /* \"DEX.sol_flattened.sol\":30326:30349  meme_price <= msg.value */\n      gt\n      iszero\n        /* \"DEX.sol_flattened.sol\":30318:30367  require(meme_price <= msg.value, \"Send More ETH\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3969:3971   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":30318:30367  require(meme_price <= msg.value, \"Send More ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:3972   */\n      mstore\n        /* \"#utility.yul\":4008:4010   */\n      0x0d\n        /* \"#utility.yul\":3988:4006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3981:4011   */\n      mstore\n      shl(0x9b, 0x0a6cadcc8409adee4ca408aa89)\n        /* \"#utility.yul\":4027:4045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4020:4063   */\n      mstore\n        /* \"#utility.yul\":4080:4098   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":30318:30367  require(meme_price <= msg.value, \"Send More ETH\") */\n      tag_111\n        /* \"#utility.yul\":3767:4104   */\n      jump\n        /* \"DEX.sol_flattened.sol\":30318:30367  require(meme_price <= msg.value, \"Send More ETH\") */\n    tag_177:\n        /* \"DEX.sol_flattened.sol\":30378:30382  meme */\n      sload(0x01)\n        /* \"DEX.sol_flattened.sol\":30378:30416  meme.transfer(msg.sender, meme_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":30392:30402  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":30378:30416  meme.transfer(msg.sender, meme_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4283:4334   */\n      mstore\n        /* \"#utility.yul\":4350:4368   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4343:4377   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":30378:30382  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol_flattened.sol\":30378:30391  meme.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4256:4274   */\n      0x44\n      add\n        /* \"DEX.sol_flattened.sol\":30378:30416  meme.transfer(msg.sender, meme_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      pop\n        /* \"DEX.sol_flattened.sol\":30434:30444  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":30426:30478  payable(msg.sender).transfer(msg.value - meme_price) */\n      0x08fc\n        /* \"DEX.sol_flattened.sol\":30455:30477  msg.value - meme_price */\n      tag_186\n        /* \"DEX.sol_flattened.sol\":30467:30477  meme_price */\n      dup4\n        /* \"DEX.sol_flattened.sol\":30455:30464  msg.value */\n      callvalue\n        /* \"DEX.sol_flattened.sol\":30455:30477  msg.value - meme_price */\n      tag_117\n      jump\t// in\n    tag_186:\n        /* \"DEX.sol_flattened.sol\":30426:30478  payable(msg.sender).transfer(msg.value - meme_price) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n        /* \"DEX.sol_flattened.sol\":30591:30600  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":30567:30574  taxRate */\n      sload(0x09)\n        /* \"DEX.sol_flattened.sol\":30555:30574  precision + taxRate */\n      tag_189\n      swap1\n        /* \"DEX.sol_flattened.sol\":30591:30600  precision */\n      dup3\n        /* \"DEX.sol_flattened.sol\":30555:30574  precision + taxRate */\n      tag_159\n      jump\t// in\n    tag_189:\n        /* \"DEX.sol_flattened.sol\":30540:30575  meme_amount * (precision + taxRate) */\n      tag_190\n      swap1\n        /* \"DEX.sol_flattened.sol\":30540:30551  meme_amount */\n      dup5\n        /* \"DEX.sol_flattened.sol\":30540:30575  meme_amount * (precision + taxRate) */\n      tag_127\n      jump\t// in\n    tag_190:\n        /* \"DEX.sol_flattened.sol\":30539:30600  (meme_amount * (precision + taxRate)) /... */\n      tag_191\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_191:\n        /* \"DEX.sol_flattened.sol\":30489:30497  dailyTax */\n      0x03\n        /* \"DEX.sol_flattened.sol\":30489:30523  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol_flattened.sol\":30498:30522  block.timestamp / 1 days */\n      tag_192\n        /* \"DEX.sol_flattened.sol\":30516:30522  1 days */\n      0x015180\n        /* \"DEX.sol_flattened.sol\":30498:30513  block.timestamp */\n      timestamp\n        /* \"DEX.sol_flattened.sol\":30498:30522  block.timestamp / 1 days */\n      tag_115\n      jump\t// in\n    tag_192:\n        /* \"DEX.sol_flattened.sol\":30489:30523  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DEX.sol_flattened.sol\":30489:30600  dailyTax[block.timestamp / 1 days] +=... */\n      dup3\n      dup3\n      sload\n      tag_193\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_193:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol_flattened.sol\":30617:30628  meme_amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":30611:30613  _x */\n      0x06\n      0x00\n        /* \"DEX.sol_flattened.sol\":30611:30628  _x -= meme_amount */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_194:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":30649:30651  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":30644:30646  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":30644:30651  _k / _x */\n      tag_195\n      swap2\n        /* \"DEX.sol_flattened.sol\":30649:30651  _x */\n      swap1\n        /* \"DEX.sol_flattened.sol\":30644:30651  _k / _x */\n      tag_115\n      jump\t// in\n    tag_195:\n        /* \"DEX.sol_flattened.sol\":30638:30640  _y */\n      0x07\n        /* \"DEX.sol_flattened.sol\":30638:30652  _y = (_k / _x) */\n      sstore\n        /* \"DEX.sol_flattened.sol\":30668:30708  Buy(msg.sender, meme_amount, meme_price) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4844:4869   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4885:4903   */\n      dup2\n      add\n        /* \"#utility.yul\":4878:4912   */\n      dup4\n      swap1\n      mstore\n        /* \"DEX.sol_flattened.sol\":30672:30682  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol_flattened.sol\":30668:30708  Buy(msg.sender, meme_amount, meme_price) */\n      0x1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed\n      swap2\n        /* \"#utility.yul\":4817:4835   */\n      add\n        /* \"DEX.sol_flattened.sol\":30668:30708  Buy(msg.sender, meme_amount, meme_price) */\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol_flattened.sol\":30200:30715  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":30151:30715  function buy(uint256 meme_amount) public payable {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":25524:25854  function stack(uint256 meme_amount) public payable {... */\n    tag_94:\n        /* \"DEX.sol_flattened.sol\":25607:25608  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":25593:25604  meme_amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":25593:25608  meme_amount > 0 */\n      gt\n        /* \"DEX.sol_flattened.sol\":25585:25627  require(meme_amount > 0, \"Send more MEME\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5125:5127   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":25585:25627  require(meme_amount > 0, \"Send more MEME\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5107:5128   */\n      mstore\n        /* \"#utility.yul\":5164:5166   */\n      0x0e\n        /* \"#utility.yul\":5144:5162   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5137:5167   */\n      mstore\n      shl(0x90, 0x53656e64206d6f7265204d454d45)\n        /* \"#utility.yul\":5183:5201   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5176:5220   */\n      mstore\n        /* \"#utility.yul\":5237:5255   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":25585:25627  require(meme_amount > 0, \"Send more MEME\") */\n      tag_111\n        /* \"#utility.yul\":4923:5261   */\n      jump\n        /* \"DEX.sol_flattened.sol\":25585:25627  require(meme_amount > 0, \"Send more MEME\") */\n    tag_199:\n        /* \"DEX.sol_flattened.sol\":25657:25658  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":25645:25654  msg.value */\n      callvalue\n        /* \"DEX.sol_flattened.sol\":25645:25658  msg.value > 0 */\n      gt\n        /* \"DEX.sol_flattened.sol\":25637:25676  require(msg.value > 0, \"Send more ETH\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5468:5470   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":25637:25676  require(msg.value > 0, \"Send more ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5450:5471   */\n      mstore\n        /* \"#utility.yul\":5507:5509   */\n      0x0d\n        /* \"#utility.yul\":5487:5505   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5480:5510   */\n      mstore\n      shl(0x9b, 0x0a6cadcc840dadee4ca408aa89)\n        /* \"#utility.yul\":5526:5544   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5519:5562   */\n      mstore\n        /* \"#utility.yul\":5579:5597   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":25637:25676  require(msg.value > 0, \"Send more ETH\") */\n      tag_111\n        /* \"#utility.yul\":5266:5603   */\n      jump\n        /* \"DEX.sol_flattened.sol\":25637:25676  require(msg.value > 0, \"Send more ETH\") */\n    tag_202:\n        /* \"DEX.sol_flattened.sol\":25749:25760  meme_amount */\n      dup1\n        /* \"DEX.sol_flattened.sol\":25736:25745  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":25724:25733  msg.value */\n      callvalue\n        /* \"DEX.sol_flattened.sol\":25724:25745  msg.value * precision */\n      tag_205\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_205:\n        /* \"DEX.sol_flattened.sol\":25723:25760  (msg.value * precision) / meme_amount */\n      tag_206\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_206:\n        /* \"DEX.sol_flattened.sol\":25707:25719  stackingRate */\n      sload(0x04)\n        /* \"DEX.sol_flattened.sol\":25707:25760  stackingRate <= (msg.value * precision) / meme_amount */\n      gt\n      iszero\n        /* \"DEX.sol_flattened.sol\":25686:25807  require(... */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":25686:25807  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5792:5813   */\n      mstore\n        /* \"#utility.yul\":5849:5851   */\n      0x15\n        /* \"#utility.yul\":5829:5847   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5822:5852   */\n      mstore\n      shl(0x5a, 0x14dd1858dada5b99c814985d19481b9bdd081b595d)\n        /* \"#utility.yul\":5868:5886   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5861:5912   */\n      mstore\n        /* \"#utility.yul\":5929:5947   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":25686:25807  require(... */\n      tag_111\n        /* \"#utility.yul\":5608:5953   */\n      jump\n        /* \"DEX.sol_flattened.sol\":25686:25807  require(... */\n    tag_207:\n        /* \"DEX.sol_flattened.sol\":25817:25847  _stack(meme_amount, msg.value) */\n      tag_134\n        /* \"DEX.sol_flattened.sol\":25824:25835  meme_amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":25837:25846  msg.value */\n      callvalue\n        /* \"DEX.sol_flattened.sol\":25817:25823  _stack */\n      tag_211\n        /* \"DEX.sol_flattened.sol\":25817:25847  _stack(meme_amount, msg.value) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":30721:31302  function sell(uint256 eth_amount) public {... */\n    tag_98:\n        /* \"DEX.sol_flattened.sol\":30793:30794  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":30780:30790  eth_amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":30780:30794  eth_amount > 0 */\n      gt\n        /* \"DEX.sol_flattened.sol\":30772:30812  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6160:6162   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":30772:30812  require(eth_amount > 0, \"Send Some ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6142:6163   */\n      mstore\n        /* \"#utility.yul\":6199:6201   */\n      0x0d\n        /* \"#utility.yul\":6179:6197   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6172:6202   */\n      mstore\n      shl(0x9b, 0x0a6cadcc840a6dedaca408aa89)\n        /* \"#utility.yul\":6218:6236   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6211:6254   */\n      mstore\n        /* \"#utility.yul\":6271:6289   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":30772:30812  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_111\n        /* \"#utility.yul\":5958:6295   */\n      jump\n        /* \"DEX.sol_flattened.sol\":30772:30812  require(eth_amount > 0, \"Send Some ETH\") */\n    tag_213:\n        /* \"DEX.sol_flattened.sol\":30822:30839  uint256 eth_price */\n      0x00\n        /* \"DEX.sol_flattened.sol\":30842:30865  getETHPrice(eth_amount) */\n      tag_216\n        /* \"DEX.sol_flattened.sol\":30854:30864  eth_amount */\n      dup3\n        /* \"DEX.sol_flattened.sol\":30842:30853  getETHPrice */\n      tag_29\n        /* \"DEX.sol_flattened.sol\":30842:30865  getETHPrice(eth_amount) */\n      jump\t// in\n    tag_216:\n        /* \"DEX.sol_flattened.sol\":30897:30901  meme */\n      sload(0x01)\n        /* \"DEX.sol_flattened.sol\":30897:30923  meme.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":30912:30922  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":30897:30923  meme.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":719:770   */\n      mstore\n        /* \"DEX.sol_flattened.sol\":30822:30865  uint256 eth_price = getETHPrice(eth_amount) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":30897:30901  meme */\n      and\n      swap1\n        /* \"DEX.sol_flattened.sol\":30897:30911  meme.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":692:710   */\n      0x24\n      add\n        /* \"DEX.sol_flattened.sol\":30897:30923  meme.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"DEX.sol_flattened.sol\":30884:30893  eth_price */\n      dup2\n        /* \"DEX.sol_flattened.sol\":30884:30923  eth_price <= meme.balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"DEX.sol_flattened.sol\":30876:30954  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6691:6693   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":30876:30954  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6673:6694   */\n      mstore\n        /* \"#utility.yul\":6730:6732   */\n      0x1a\n        /* \"#utility.yul\":6710:6728   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6703:6733   */\n      mstore\n        /* \"#utility.yul\":6769:6797   */\n      0x596f7520646f6e2774206861766520656e6f756768206d656d65000000000000\n        /* \"#utility.yul\":6749:6767   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6742:6798   */\n      mstore\n        /* \"#utility.yul\":6815:6833   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":30876:30954  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n      tag_111\n        /* \"#utility.yul\":6489:6839   */\n      jump\n        /* \"DEX.sol_flattened.sol\":30876:30954  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n    tag_222:\n        /* \"DEX.sol_flattened.sol\":30964:30968  meme */\n      sload(0x01)\n        /* \"DEX.sol_flattened.sol\":30964:31019  meme.transferFrom(msg.sender, address(this), eth_price) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":30982:30992  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":30964:31019  meme.transferFrom(msg.sender, address(this), eth_price) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7084:7118   */\n      mstore\n        /* \"DEX.sol_flattened.sol\":31002:31006  this */\n      address\n        /* \"#utility.yul\":7134:7152   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7127:7170   */\n      mstore\n        /* \"#utility.yul\":7186:7204   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7179:7213   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":30964:30968  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol_flattened.sol\":30964:30981  meme.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7019:7037   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":30964:31019  meme.transferFrom(msg.sender, address(this), eth_price) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_229:\n      pop\n        /* \"DEX.sol_flattened.sol\":31029:31069  payable(msg.sender).transfer(eth_amount) */\n      mload(0x40)\n        /* \"DEX.sol_flattened.sol\":31037:31047  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol_flattened.sol\":31029:31069  payable(msg.sender).transfer(eth_amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"DEX.sol_flattened.sol\":31058:31068  eth_amount */\n      dup5\n      swap1\n        /* \"DEX.sol_flattened.sol\":31029:31069  payable(msg.sender).transfer(eth_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"DEX.sol_flattened.sol\":31058:31068  eth_amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":31037:31047  msg.sender */\n      dup9\n        /* \"DEX.sol_flattened.sol\":31029:31069  payable(msg.sender).transfer(eth_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n        /* \"DEX.sol_flattened.sol\":31180:31189  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":31156:31163  taxRate */\n      sload(0x09)\n        /* \"DEX.sol_flattened.sol\":31144:31163  precision + taxRate */\n      tag_232\n      swap1\n        /* \"DEX.sol_flattened.sol\":31180:31189  precision */\n      dup3\n        /* \"DEX.sol_flattened.sol\":31144:31163  precision + taxRate */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"DEX.sol_flattened.sol\":31131:31164  eth_price * (precision + taxRate) */\n      tag_233\n      swap1\n        /* \"DEX.sol_flattened.sol\":31131:31140  eth_price */\n      dup4\n        /* \"DEX.sol_flattened.sol\":31131:31164  eth_price * (precision + taxRate) */\n      tag_127\n      jump\t// in\n    tag_233:\n        /* \"DEX.sol_flattened.sol\":31130:31189  (eth_price * (precision + taxRate)) /... */\n      tag_234\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_234:\n        /* \"DEX.sol_flattened.sol\":31080:31088  dailyTax */\n      0x03\n        /* \"DEX.sol_flattened.sol\":31080:31114  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol_flattened.sol\":31089:31113  block.timestamp / 1 days */\n      tag_235\n        /* \"DEX.sol_flattened.sol\":31107:31113  1 days */\n      0x015180\n        /* \"DEX.sol_flattened.sol\":31089:31104  block.timestamp */\n      timestamp\n        /* \"DEX.sol_flattened.sol\":31089:31113  block.timestamp / 1 days */\n      tag_115\n      jump\t// in\n    tag_235:\n        /* \"DEX.sol_flattened.sol\":31080:31114  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DEX.sol_flattened.sol\":31080:31189  dailyTax[block.timestamp / 1 days] +=... */\n      dup3\n      dup3\n      sload\n      tag_236\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_236:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol_flattened.sol\":31206:31216  eth_amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":31200:31202  _y */\n      0x07\n      0x00\n        /* \"DEX.sol_flattened.sol\":31200:31216  _y -= eth_amount */\n      dup3\n      dup3\n      sload\n      tag_237\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_237:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":31237:31239  _y */\n      sload(0x07)\n        /* \"DEX.sol_flattened.sol\":31232:31234  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":31232:31239  _k / _y */\n      tag_238\n      swap2\n        /* \"DEX.sol_flattened.sol\":31237:31239  _y */\n      swap1\n        /* \"DEX.sol_flattened.sol\":31232:31239  _k / _y */\n      tag_115\n      jump\t// in\n    tag_238:\n        /* \"DEX.sol_flattened.sol\":31226:31228  _x */\n      0x06\n        /* \"DEX.sol_flattened.sol\":31226:31240  _x = (_k / _y) */\n      sstore\n        /* \"DEX.sol_flattened.sol\":31256:31295  Sell(msg.sender, eth_price, eth_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4844:4869   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4885:4903   */\n      dup2\n      add\n        /* \"#utility.yul\":4878:4912   */\n      dup5\n      swap1\n      mstore\n        /* \"DEX.sol_flattened.sol\":31261:31271  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol_flattened.sol\":31256:31295  Sell(msg.sender, eth_price, eth_amount) */\n      0xed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a\n      swap2\n        /* \"#utility.yul\":4817:4835   */\n      add\n        /* \"DEX.sol_flattened.sol\":31256:31295  Sell(msg.sender, eth_price, eth_amount) */\n      tag_196\n        /* \"#utility.yul\":4670:4918   */\n      jump\n        /* \"DEX.sol_flattened.sol\":25410:25518  function getStacks() public view returns (Stack_Struct[] memory) {... */\n    tag_101:\n        /* \"DEX.sol_flattened.sol\":25500:25510  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":25492:25511  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":25492:25499  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":25492:25511  Stacked[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":25485:25511  return Stacked[msg.sender] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"DEX.sol_flattened.sol\":25452:25473  Stack_Struct[] memory */\n      0x60\n      swap5\n        /* \"DEX.sol_flattened.sol\":25485:25511  return Stacked[msg.sender] */\n      swap3\n      swap4\n        /* \"DEX.sol_flattened.sol\":25492:25511  Stacked[msg.sender] */\n      swap2\n      swap3\n        /* \"DEX.sol_flattened.sol\":25485:25511  return Stacked[msg.sender] */\n      swap1\n      swap2\n      dup5\n      add\n    tag_241:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_242\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_241)\n    tag_242:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":25410:25518  function getStacks() public view returns (Stack_Struct[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":20502:20700  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_108:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_245\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_138\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":20590:20612  newOwner != address(0) */\n      dup2\n      and\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7426:7428   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7408:7429   */\n      mstore\n        /* \"#utility.yul\":7465:7467   */\n      0x26\n        /* \"#utility.yul\":7445:7463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7438:7468   */\n      mstore\n        /* \"#utility.yul\":7504:7538   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7484:7502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7477:7539   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7555:7573   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7548:7584   */\n      mstore\n        /* \"#utility.yul\":7601:7620   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_111\n        /* \"#utility.yul\":7224:7626   */\n      jump\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_247:\n        /* \"DEX.sol_flattened.sol\":20665:20693  _transferOwnership(newOwner) */\n      tag_134\n        /* \"DEX.sol_flattened.sol\":20684:20692  newOwner */\n      dup2\n        /* \"DEX.sol_flattened.sol\":20665:20683  _transferOwnership */\n      tag_165\n        /* \"DEX.sol_flattened.sol\":20665:20693  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":26495:27507  function _unstack(uint256 index) internal {... */\n    tag_135:\n        /* \"DEX.sol_flattened.sol\":26580:26590  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":26547:26569  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol_flattened.sol\":26572:26591  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":26572:26579  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":26572:26591  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DEX.sol_flattened.sol\":26572:26598  Stacked[msg.sender][index] */\n      dup1\n      sload\n        /* \"DEX.sol_flattened.sol\":26592:26597  index */\n      dup4\n      swap1\n        /* \"DEX.sol_flattened.sol\":26572:26598  Stacked[msg.sender][index] */\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_253\n      tag_254\n      jump\t// in\n    tag_253:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol_flattened.sol\":26547:26598  Stack_Struct memory ss = Stacked[msg.sender][index] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":26608:26619  uint256 tax */\n      0x00\n        /* \"DEX.sol_flattened.sol\":26622:26638  _distributeTax() */\n      tag_256\n        /* \"DEX.sol_flattened.sol\":26622:26636  _distributeTax */\n      tag_257\n        /* \"DEX.sol_flattened.sol\":26622:26638  _distributeTax() */\n      jump\t// in\n    tag_256:\n        /* \"DEX.sol_flattened.sol\":26674:26688  ss.meme_amount */\n      dup3\n      mload\n        /* \"DEX.sol_flattened.sol\":26722:26735  ss.eth_amount */\n      0x20\n      dup5\n      add\n      mload\n        /* \"DEX.sol_flattened.sol\":26608:26638  uint256 tax = _distributeTax() */\n      swap2\n      swap3\n      pop\n        /* \"DEX.sol_flattened.sol\":26674:26688  ss.meme_amount */\n      swap1\n        /* \"DEX.sol_flattened.sol\":26649:26671  uint256 meme_to_return */\n      0x00\n      swap1\n        /* \"DEX.sol_flattened.sol\":26722:26741  ss.eth_amount + tax */\n      tag_258\n      swap1\n        /* \"DEX.sol_flattened.sol\":26608:26638  uint256 tax = _distributeTax() */\n      dup5\n      swap1\n        /* \"DEX.sol_flattened.sol\":26722:26741  ss.eth_amount + tax */\n      tag_159\n      jump\t// in\n    tag_258:\n        /* \"DEX.sol_flattened.sol\":26773:26777  meme */\n      sload(0x01)\n        /* \"DEX.sol_flattened.sol\":26773:26802  meme.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":26796:26800  this */\n      address\n        /* \"DEX.sol_flattened.sol\":26773:26802  meme.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":719:770   */\n      mstore\n        /* \"DEX.sol_flattened.sol\":26698:26741  uint256 eth_to_return = ss.eth_amount + tax */\n      swap2\n      swap3\n      pop\n        /* \"DEX.sol_flattened.sol\":26806:26820  meme_to_return */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":26773:26777  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol_flattened.sol\":26773:26787  meme.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":692:710   */\n      0x24\n      add\n        /* \"DEX.sol_flattened.sol\":26773:26802  meme.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_262:\n        /* \"DEX.sol_flattened.sol\":26773:26820  meme.balanceOf(address(this)) >= meme_to_return */\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":26752:26921  require(... */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7965:7967   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":26752:26921  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7947:7968   */\n      mstore\n        /* \"#utility.yul\":8004:8006   */\n      0x4b\n        /* \"#utility.yul\":7984:8002   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7977:8007   */\n      mstore\n        /* \"#utility.yul\":8043:8077   */\n      0x536f7272792043757272656e746c79207468697320636f6e747261637420646f\n        /* \"#utility.yul\":8023:8041   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8016:8078   */\n      mstore\n        /* \"#utility.yul\":8114:8148   */\n      0x65736e27742068617665204d656d6520746f2072657475726e2c20436865636b\n        /* \"#utility.yul\":8094:8112   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8087:8149   */\n      mstore\n      shl(0xa8, 0x206261636b20536f6f6e21)\n        /* \"#utility.yul\":8165:8184   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8158:8200   */\n      mstore\n        /* \"#utility.yul\":8217:8236   */\n      0xa4\n      add\n        /* \"DEX.sol_flattened.sol\":26752:26921  require(... */\n      tag_111\n        /* \"#utility.yul\":7763:8242   */\n      jump\n        /* \"DEX.sol_flattened.sol\":26752:26921  require(... */\n    tag_263:\n        /* \"DEX.sol_flattened.sol\":26977:26990  eth_to_return */\n      dup1\n        /* \"DEX.sol_flattened.sol\":26952:26973  address(this).balance */\n      selfbalance\n        /* \"DEX.sol_flattened.sol\":26952:26990  address(this).balance >= eth_to_return */\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":26931:27090  require(... */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8449:8451   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":26931:27090  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8431:8452   */\n      mstore\n        /* \"#utility.yul\":8488:8490   */\n      0x4a\n        /* \"#utility.yul\":8468:8486   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8461:8491   */\n      mstore\n        /* \"#utility.yul\":8527:8561   */\n      0x536f7272792043757272656e746c79207468697320636f6e747261637420646f\n        /* \"#utility.yul\":8507:8525   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8500:8562   */\n      mstore\n        /* \"#utility.yul\":8598:8632   */\n      0x65736e277420686176652045746820746f2072657475726e2c20436865636b20\n        /* \"#utility.yul\":8578:8596   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8571:8633   */\n      mstore\n      shl(0xb0, 0x6261636b20536f6f6e21)\n        /* \"#utility.yul\":8649:8668   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8642:8683   */\n      mstore\n        /* \"#utility.yul\":8700:8719   */\n      0xa4\n      add\n        /* \"DEX.sol_flattened.sol\":26931:27090  require(... */\n      tag_111\n        /* \"#utility.yul\":8247:8725   */\n      jump\n        /* \"DEX.sol_flattened.sol\":26931:27090  require(... */\n    tag_266:\n        /* \"DEX.sol_flattened.sol\":27107:27121  meme_to_return */\n      dup2\n        /* \"DEX.sol_flattened.sol\":27101:27103  _x */\n      0x06\n      0x00\n        /* \"DEX.sol_flattened.sol\":27101:27121  _x -= meme_to_return */\n      dup3\n      dup3\n      sload\n      tag_269\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_269:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol_flattened.sol\":27137:27150  eth_to_return */\n      dup1\n        /* \"DEX.sol_flattened.sol\":27131:27133  _y */\n      0x07\n      0x00\n        /* \"DEX.sol_flattened.sol\":27131:27150  _y -= eth_to_return */\n      dup3\n      dup3\n      sload\n      tag_270\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_270:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":27161:27165  meme */\n      sload(0x01)\n        /* \"DEX.sol_flattened.sol\":27161:27202  meme.transfer(msg.sender, meme_to_return) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":27175:27185  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":27161:27202  meme.transfer(msg.sender, meme_to_return) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4283:4334   */\n      mstore\n        /* \"#utility.yul\":4350:4368   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4343:4377   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":27161:27165  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol_flattened.sol\":27161:27174  meme.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4256:4274   */\n      0x44\n      add\n        /* \"DEX.sol_flattened.sol\":27161:27202  meme.transfer(msg.sender, meme_to_return) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_274\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_274:\n      pop\n        /* \"DEX.sol_flattened.sol\":27212:27255  payable(msg.sender).transfer(eth_to_return) */\n      mload(0x40)\n        /* \"DEX.sol_flattened.sol\":27220:27230  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol_flattened.sol\":27212:27255  payable(msg.sender).transfer(eth_to_return) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"DEX.sol_flattened.sol\":27241:27254  eth_to_return */\n      dup4\n      swap1\n        /* \"DEX.sol_flattened.sol\":27212:27255  payable(msg.sender).transfer(eth_to_return) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"DEX.sol_flattened.sol\":27241:27254  eth_to_return */\n      dup6\n        /* \"DEX.sol_flattened.sol\":27220:27230  msg.sender */\n      dup9\n        /* \"DEX.sol_flattened.sol\":27212:27255  payable(msg.sender).transfer(eth_to_return) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n        /* \"DEX.sol_flattened.sol\":27270:27272  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":27276:27277  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":27270:27277  _x == 0 */\n      sub\n        /* \"DEX.sol_flattened.sol\":27266:27387  if (_x == 0) {... */\n      tag_277\n      jumpi\n        /* \"DEX.sol_flattened.sol\":27308:27309  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":27293:27305  stackingRate */\n      0x04\n        /* \"DEX.sol_flattened.sol\":27293:27309  stackingRate = 0 */\n      sstore\n        /* \"DEX.sol_flattened.sol\":27266:27387  if (_x == 0) {... */\n      jump(tag_278)\n    tag_277:\n        /* \"DEX.sol_flattened.sol\":27374:27376  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":27361:27370  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":27356:27358  _y */\n      sload(0x07)\n        /* \"DEX.sol_flattened.sol\":27356:27370  _y * precision */\n      tag_279\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_279:\n        /* \"DEX.sol_flattened.sol\":27355:27376  (_y * precision) / _x */\n      tag_280\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_280:\n        /* \"DEX.sol_flattened.sol\":27340:27352  stackingRate */\n      0x04\n        /* \"DEX.sol_flattened.sol\":27340:27376  stackingRate = (_y * precision) / _x */\n      sstore\n        /* \"DEX.sol_flattened.sol\":27266:27387  if (_x == 0) {... */\n    tag_278:\n        /* \"DEX.sol_flattened.sol\":27397:27414  _removeArr(index) */\n      tag_281\n        /* \"DEX.sol_flattened.sol\":27408:27413  index */\n      dup6\n        /* \"DEX.sol_flattened.sol\":27397:27407  _removeArr */\n      tag_282\n        /* \"DEX.sol_flattened.sol\":27397:27414  _removeArr(index) */\n      jump\t// in\n    tag_281:\n        /* \"DEX.sol_flattened.sol\":27425:27435  _updateK() */\n      tag_283\n        /* \"DEX.sol_flattened.sol\":27425:27433  _updateK */\n      tag_284\n        /* \"DEX.sol_flattened.sol\":27425:27435  _updateK() */\n      jump\t// in\n    tag_283:\n        /* \"DEX.sol_flattened.sol\":27450:27500  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4844:4869   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4885:4903   */\n      dup2\n      add\n        /* \"#utility.yul\":4878:4912   */\n      dup4\n      swap1\n      mstore\n        /* \"DEX.sol_flattened.sol\":27458:27468  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol_flattened.sol\":27450:27500  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      0xbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4\n      swap2\n        /* \"#utility.yul\":4817:4835   */\n      add\n        /* \"DEX.sol_flattened.sol\":27450:27500  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol_flattened.sol\":26537:27507  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":26495:27507  function _unstack(uint256 index) internal {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":19780:19910  function _checkOwner() internal view virtual {... */\n    tag_138:\n        /* \"DEX.sol_flattened.sol\":19668:19675  address */\n      0x00\n        /* \"DEX.sol_flattened.sol\":19694:19700  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":19843:19866  owner() == _msgSender() */\n      eq\n        /* \"DEX.sol_flattened.sol\":19835:19903  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8932:8934   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":19835:19903  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8914:8935   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8951:8969   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8944:8974   */\n      mstore\n        /* \"#utility.yul\":9010:9044   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8990:9008   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8983:9045   */\n      mstore\n        /* \"#utility.yul\":9062:9080   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":19835:19903  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_111\n        /* \"#utility.yul\":8730:9086   */\n      jump\n        /* \"DEX.sol_flattened.sol\":23472:23589  function _unpause() internal virtual whenPaused {... */\n    tag_141:\n        /* \"DEX.sol_flattened.sol\":22525:22541  _requirePaused() */\n      tag_294\n        /* \"DEX.sol_flattened.sol\":22525:22539  _requirePaused */\n      tag_295\n        /* \"DEX.sol_flattened.sol\":22525:22541  _requirePaused() */\n      jump\t// in\n    tag_294:\n        /* \"DEX.sol_flattened.sol\":23540:23545  false */\n      0x00\n        /* \"DEX.sol_flattened.sol\":23530:23545  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":23560:23582  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":23569:23581  _msgSender() */\n    tag_297:\n        /* \"DEX.sol_flattened.sol\":23560:23582  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":737:769   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":719:770   */\n      dup2\n      mstore\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":692:710   */\n      add\n        /* \"DEX.sol_flattened.sol\":23560:23582  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DEX.sol_flattened.sol\":23472:23589  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_165:\n        /* \"DEX.sol_flattened.sol\":20927:20943  address oldOwner */\n      0x00\n        /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n      0x0100\n        /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      dup6\n      sstore\n        /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n      swap4\n      div\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n      swap1\n      swap2\n        /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n      dup4\n      swap2\n        /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"DEX.sol_flattened.sol\":20917:21041  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":23225:23340  function _pause() internal virtual whenNotPaused {... */\n    tag_170:\n        /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n      tag_301\n        /* \"DEX.sol_flattened.sol\":22278:22295  _requireNotPaused */\n      tag_302\n        /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n      jump\t// in\n    tag_301:\n        /* \"DEX.sol_flattened.sol\":23284:23291  _paused */\n      0x00\n        /* \"DEX.sol_flattened.sol\":23284:23298  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DEX.sol_flattened.sol\":23294:23298  true */\n      0x01\n        /* \"DEX.sol_flattened.sol\":23284:23298  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":23313:23333  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"DEX.sol_flattened.sol\":23320:23332  _msgSender() */\n      tag_297\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol_flattened.sol\":4161:4257  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"DEX.sol_flattened.sol\":25996:26489  function _stack(uint256 meme_amount, uint256 eth_amount) internal {... */\n    tag_211:\n        /* \"DEX.sol_flattened.sol\":26072:26076  meme */\n      sload(0x01)\n        /* \"DEX.sol_flattened.sol\":26072:26129  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":26090:26100  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":26072:26129  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7084:7118   */\n      mstore\n        /* \"DEX.sol_flattened.sol\":26110:26114  this */\n      address\n        /* \"#utility.yul\":7134:7152   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7127:7170   */\n      mstore\n        /* \"#utility.yul\":7186:7204   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7179:7213   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":26072:26076  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol_flattened.sol\":26072:26089  meme.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7019:7037   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":26072:26129  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_310\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_310:\n      pop\n        /* \"DEX.sol_flattened.sol\":26145:26156  meme_amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":26139:26141  _x */\n      0x06\n      0x00\n        /* \"DEX.sol_flattened.sol\":26139:26156  _x += meme_amount */\n      dup3\n      dup3\n      sload\n      tag_311\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_311:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol_flattened.sol\":26172:26182  eth_amount */\n      dup1\n        /* \"DEX.sol_flattened.sol\":26166:26168  _y */\n      0x07\n      0x00\n        /* \"DEX.sol_flattened.sol\":26166:26182  _y += eth_amount */\n      dup3\n      dup3\n      sload\n      tag_312\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_312:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":26218:26318  Stack_Struct(... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":26293:26308  block.timestamp */\n      timestamp\n        /* \"DEX.sol_flattened.sol\":26218:26318  Stack_Struct(... */\n      dup4\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":26336:26346  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":26193:26215  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol_flattened.sol\":26328:26347  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":26328:26335  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":26328:26347  Stacked[msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap6\n      dup2\n      keccak256\n        /* \"DEX.sol_flattened.sol\":26328:26356  Stacked[msg.sender].push(ss) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup4\n      mstore\n      swap5\n      swap1\n      swap2\n      keccak256\n      dup6\n      mload\n      0x03\n      swap1\n      swap6\n      mul\n      add\n      swap4\n      dup5\n      sstore\n      swap2\n      mload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      mload\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DEX.sol_flattened.sol\":26402:26404  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":26389:26398  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":26384:26386  _y */\n      sload(0x07)\n        /* \"DEX.sol_flattened.sol\":26384:26398  _y * precision */\n      tag_314\n      swap2\n        /* \"DEX.sol_flattened.sol\":26389:26398  precision */\n      swap1\n        /* \"DEX.sol_flattened.sol\":26384:26398  _y * precision */\n      tag_127\n      jump\t// in\n    tag_314:\n        /* \"DEX.sol_flattened.sol\":26383:26404  (_y * precision) / _x */\n      tag_315\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_315:\n        /* \"DEX.sol_flattened.sol\":26367:26379  stackingRate */\n      0x04\n        /* \"DEX.sol_flattened.sol\":26367:26405  stackingRate = ((_y * precision) / _x) */\n      sstore\n        /* \"DEX.sol_flattened.sol\":26416:26426  _updateK() */\n      tag_316\n        /* \"DEX.sol_flattened.sol\":26416:26424  _updateK */\n      tag_284\n        /* \"DEX.sol_flattened.sol\":26416:26426  _updateK() */\n      jump\t// in\n    tag_316:\n        /* \"DEX.sol_flattened.sol\":26441:26482  Stack(msg.sender, meme_amount, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4844:4869   */\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":26472:26481  msg.value */\n      callvalue\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4885:4903   */\n      dup3\n      add\n        /* \"#utility.yul\":4878:4912   */\n      mstore\n        /* \"DEX.sol_flattened.sol\":26447:26457  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol_flattened.sol\":26441:26482  Stack(msg.sender, meme_amount, msg.value) */\n      0x5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6\n      swap2\n        /* \"#utility.yul\":4817:4835   */\n      add\n        /* \"DEX.sol_flattened.sol\":26441:26482  Stack(msg.sender, meme_amount, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol_flattened.sol\":26062:26489  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":25996:26489  function _stack(uint256 meme_amount, uint256 eth_amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":27831:28859  function _distributeTax() internal view returns (uint256) {... */\n    tag_257:\n        /* \"DEX.sol_flattened.sol\":27880:27887  uint256 */\n      0x00\n      dup1\n      dup1\n        /* \"DEX.sol_flattened.sol\":27933:27941  dailyTax */\n      0x03\n        /* \"DEX.sol_flattened.sol\":27880:27887  uint256 */\n      dup2\n        /* \"DEX.sol_flattened.sol\":27942:27966  block.timestamp / 1 days */\n      tag_319\n        /* \"DEX.sol_flattened.sol\":27960:27966  1 days */\n      0x015180\n        /* \"DEX.sol_flattened.sol\":27942:27957  block.timestamp */\n      timestamp\n        /* \"DEX.sol_flattened.sol\":27942:27966  block.timestamp / 1 days */\n      tag_115\n      jump\t// in\n    tag_319:\n        /* \"DEX.sol_flattened.sol\":27933:27967  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DEX.sol_flattened.sol\":27933:27971  dailyTax[block.timestamp / 1 days] > 0 */\n      gt\n        /* \"DEX.sol_flattened.sol\":27929:28828  if (dailyTax[block.timestamp / 1 days] > 0) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"DEX.sol_flattened.sol\":28027:28037  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":27987:28016  Stack_Struct[] storage stacks */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28019:28038  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":28019:28026  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":28019:28038  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DEX.sol_flattened.sol\":28072:28085  stacks.length */\n      dup1\n      sload\n        /* \"DEX.sol_flattened.sol\":28019:28038  Stacked[msg.sender] */\n      swap1\n      swap2\n        /* \"DEX.sol_flattened.sol\":27987:28016  Stack_Struct[] storage stacks */\n      dup1\n        /* \"DEX.sol_flattened.sol\":28139:28309  for (uint256 i = 0; i < numStacks; i++) {... */\n    tag_321:\n        /* \"DEX.sol_flattened.sol\":28163:28172  numStacks */\n      dup3\n        /* \"DEX.sol_flattened.sol\":28159:28160  i */\n      dup2\n        /* \"DEX.sol_flattened.sol\":28159:28172  i < numStacks */\n      lt\n        /* \"DEX.sol_flattened.sol\":28139:28309  for (uint256 i = 0; i < numStacks; i++) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"DEX.sol_flattened.sol\":28197:28219  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28222:28228  stacks */\n      dup5\n        /* \"DEX.sol_flattened.sol\":28229:28230  i */\n      dup3\n        /* \"DEX.sol_flattened.sol\":28222:28231  stacks[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_254\n      jump\t// in\n    tag_325:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol_flattened.sol\":28197:28231  Stack_Struct memory ss = stacks[i] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":28286:28288  ss */\n      dup1\n        /* \"DEX.sol_flattened.sol\":28286:28293  ss.time */\n      0x40\n      add\n      mload\n        /* \"DEX.sol_flattened.sol\":28268:28283  block.timestamp */\n      timestamp\n        /* \"DEX.sol_flattened.sol\":28268:28293  block.timestamp - ss.time */\n      tag_327\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_327:\n        /* \"DEX.sol_flattened.sol\":28249:28294  totalStackTime += (block.timestamp - ss.time) */\n      tag_328\n      swap1\n      dup5\n      tag_159\n      jump\t// in\n    tag_328:\n      swap3\n      pop\n        /* \"DEX.sol_flattened.sol\":28179:28309  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":28174:28177  i++ */\n      dup1\n      dup1\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":28139:28309  for (uint256 i = 0; i < numStacks; i++) {... */\n      jump(tag_321)\n    tag_322:\n      pop\n        /* \"DEX.sol_flattened.sol\":28327:28336  uint256 i */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28322:28818  for (uint256 i = 0; i < numStacks; i++) {... */\n    tag_331:\n        /* \"DEX.sol_flattened.sol\":28346:28355  numStacks */\n      dup3\n        /* \"DEX.sol_flattened.sol\":28342:28343  i */\n      dup2\n        /* \"DEX.sol_flattened.sol\":28342:28355  i < numStacks */\n      lt\n        /* \"DEX.sol_flattened.sol\":28322:28818  for (uint256 i = 0; i < numStacks; i++) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"DEX.sol_flattened.sol\":28380:28402  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28405:28411  stacks */\n      dup5\n        /* \"DEX.sol_flattened.sol\":28412:28413  i */\n      dup3\n        /* \"DEX.sol_flattened.sol\":28405:28414  stacks[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_335\n      jumpi\n      tag_335\n      tag_254\n      jump\t// in\n    tag_335:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":28380:28414  Stack_Struct memory ss = stacks[i] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"DEX.sol_flattened.sol\":28405:28414  stacks[i] */\n      0x03\n      swap1\n      swap5\n      mul\n      swap1\n      swap2\n      add\n        /* \"DEX.sol_flattened.sol\":28380:28414  Stack_Struct memory ss = stacks[i] */\n      dup1\n      sload\n      dup1\n      dup6\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      add\n      sload\n      swap1\n      dup4\n      add\n      mstore\n        /* \"DEX.sol_flattened.sol\":28484:28486  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":28471:28480  precision */\n      sload(0x08)\n        /* \"DEX.sol_flattened.sol\":28380:28414  Stack_Struct memory ss = stacks[i] */\n      swap3\n      swap5\n      pop\n        /* \"DEX.sol_flattened.sol\":28484:28486  _x */\n      swap2\n        /* \"DEX.sol_flattened.sol\":28454:28480  ss.meme_amount * precision */\n      tag_337\n      swap2\n      tag_127\n      jump\t// in\n    tag_337:\n        /* \"DEX.sol_flattened.sol\":28453:28486  (ss.meme_amount * precision) / _x */\n      tag_338\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_338:\n        /* \"DEX.sol_flattened.sol\":28432:28487  uint256 poolShare = ((ss.meme_amount * precision) / _x) */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":28505:28522  uint256 stackTime */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28544:28546  ss */\n      dup3\n        /* \"DEX.sol_flattened.sol\":28544:28551  ss.time */\n      0x40\n      add\n      mload\n        /* \"DEX.sol_flattened.sol\":28526:28541  block.timestamp */\n      timestamp\n        /* \"DEX.sol_flattened.sol\":28526:28551  block.timestamp - ss.time */\n      tag_339\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_339:\n        /* \"DEX.sol_flattened.sol\":28505:28552  uint256 stackTime = (block.timestamp - ss.time) */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":28570:28589  uint256 stackWeight */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28592:28618  stackTime / totalStackTime */\n      tag_340\n        /* \"DEX.sol_flattened.sol\":28604:28618  totalStackTime */\n      dup7\n        /* \"DEX.sol_flattened.sol\":28505:28552  uint256 stackTime = (block.timestamp - ss.time) */\n      dup4\n        /* \"DEX.sol_flattened.sol\":28592:28618  stackTime / totalStackTime */\n      tag_115\n      jump\t// in\n    tag_340:\n        /* \"DEX.sol_flattened.sol\":28801:28803  _k */\n      sload(0x05)\n        /* \"DEX.sol_flattened.sol\":28570:28618  uint256 stackWeight = stackTime / totalStackTime */\n      swap1\n      swap2\n      pop\n      dup2\n        /* \"DEX.sol_flattened.sol\":28705:28713  dailyTax */\n      0x03\n        /* \"DEX.sol_flattened.sol\":28705:28739  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol_flattened.sol\":28714:28738  block.timestamp / 1 days */\n      tag_341\n        /* \"DEX.sol_flattened.sol\":28732:28738  1 days */\n      0x015180\n        /* \"DEX.sol_flattened.sol\":28714:28729  block.timestamp */\n      timestamp\n        /* \"DEX.sol_flattened.sol\":28714:28738  block.timestamp / 1 days */\n      tag_115\n      jump\t// in\n    tag_341:\n        /* \"DEX.sol_flattened.sol\":28705:28739  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DEX.sol_flattened.sol\":28669:28678  poolShare */\n      dup6\n        /* \"DEX.sol_flattened.sol\":28669:28739  poolShare *... */\n      tag_342\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_342:\n        /* \"DEX.sol_flattened.sol\":28669:28777  poolShare *... */\n      tag_343\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_343:\n        /* \"DEX.sol_flattened.sol\":28668:28803  (poolShare *... */\n      tag_344\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_344:\n        /* \"DEX.sol_flattened.sol\":28636:28803  taxShare +=... */\n      tag_345\n      swap1\n      dup11\n      tag_159\n      jump\t// in\n    tag_345:\n      swap9\n      pop\n        /* \"DEX.sol_flattened.sol\":28362:28818  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":28357:28360  i++ */\n      dup1\n      dup1\n      tag_346\n      swap1\n      tag_330\n      jump\t// in\n    tag_346:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":28322:28818  for (uint256 i = 0; i < numStacks; i++) {... */\n      jump(tag_331)\n    tag_332:\n      pop\n        /* \"DEX.sol_flattened.sol\":27973:28828  {... */\n      pop\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":27929:28828  if (dailyTax[block.timestamp / 1 days] > 0) {... */\n    tag_320:\n        /* \"DEX.sol_flattened.sol\":28844:28852  taxShare */\n      swap2\n        /* \"DEX.sol_flattened.sol\":27831:28859  function _distributeTax() internal view returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":27513:27825  function _removeArr(uint256 index) internal {... */\n    tag_282:\n        /* \"DEX.sol_flattened.sol\":27591:27601  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":27583:27602  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":27583:27590  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":27583:27602  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":27583:27609  Stacked[msg.sender].length */\n      sload\n        /* \"DEX.sol_flattened.sol\":27575:27609  index < Stacked[msg.sender].length */\n      dup2\n      lt\n        /* \"DEX.sol_flattened.sol\":27567:27633  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9433:9435   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":27567:27633  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9415:9436   */\n      mstore\n        /* \"#utility.yul\":9472:9474   */\n      0x13\n        /* \"#utility.yul\":9452:9470   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9445:9475   */\n      mstore\n      shl(0x68, 0x496e646578206f7574206f6620626f756e6473)\n        /* \"#utility.yul\":9491:9509   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9484:9533   */\n      mstore\n        /* \"#utility.yul\":9550:9568   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":27567:27633  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_111\n        /* \"#utility.yul\":9231:9574   */\n      jump\n        /* \"DEX.sol_flattened.sol\":27567:27633  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n    tag_348:\n        /* \"DEX.sol_flattened.sol\":27660:27665  index */\n      dup1\n        /* \"DEX.sol_flattened.sol\":27643:27784  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n    tag_351:\n        /* \"DEX.sol_flattened.sol\":27679:27689  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":27671:27690  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":27671:27678  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":27671:27690  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":27671:27697  Stacked[msg.sender].length */\n      sload\n        /* \"DEX.sol_flattened.sol\":27671:27701  Stacked[msg.sender].length - 1 */\n      tag_354\n      swap1\n        /* \"DEX.sol_flattened.sol\":27700:27701  1 */\n      0x01\n      swap1\n        /* \"DEX.sol_flattened.sol\":27671:27701  Stacked[msg.sender].length - 1 */\n      tag_117\n      jump\t// in\n    tag_354:\n        /* \"DEX.sol_flattened.sol\":27667:27668  i */\n      dup2\n        /* \"DEX.sol_flattened.sol\":27667:27701  i < Stacked[msg.sender].length - 1 */\n      lt\n        /* \"DEX.sol_flattened.sol\":27643:27784  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n      iszero\n      tag_352\n      jumpi\n        /* \"DEX.sol_flattened.sol\":27755:27765  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":27747:27766  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":27747:27754  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":27747:27766  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":27767:27772  i + 1 */\n      tag_355\n        /* \"DEX.sol_flattened.sol\":27767:27768  i */\n      dup3\n        /* \"DEX.sol_flattened.sol\":27771:27772  1 */\n      0x01\n        /* \"DEX.sol_flattened.sol\":27767:27772  i + 1 */\n      tag_159\n      jump\t// in\n    tag_355:\n        /* \"DEX.sol_flattened.sol\":27747:27773  Stacked[msg.sender][i + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_357\n      jumpi\n      tag_357\n      tag_254\n      jump\t// in\n    tag_357:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol_flattened.sol\":27722:27729  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":27722:27741  Stacked[msg.sender] */\n      0x00\n        /* \"DEX.sol_flattened.sol\":27730:27740  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":27722:27741  Stacked[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DEX.sol_flattened.sol\":27742:27743  i */\n      dup3\n        /* \"DEX.sol_flattened.sol\":27722:27744  Stacked[msg.sender][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_360\n      jumpi\n      tag_360\n      tag_254\n      jump\t// in\n    tag_360:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"DEX.sol_flattened.sol\":27722:27773  Stacked[msg.sender][i] = Stacked[msg.sender][i + 1] */\n      dup3\n      sload\n        /* \"DEX.sol_flattened.sol\":27722:27744  Stacked[msg.sender][i] */\n      0x03\n      swap1\n      swap3\n      mul\n      add\n        /* \"DEX.sol_flattened.sol\":27722:27773  Stacked[msg.sender][i] = Stacked[msg.sender][i + 1] */\n      swap1\n      dup2\n      sstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n      0x02\n      swap2\n      dup3\n      add\n      sload\n      swap2\n      add\n      sstore\n        /* \"DEX.sol_flattened.sol\":27703:27706  i++ */\n      dup1\n      tag_362\n      dup2\n      tag_330\n      jump\t// in\n    tag_362:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":27643:27784  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n      jump(tag_351)\n    tag_352:\n      pop\n        /* \"DEX.sol_flattened.sol\":27801:27811  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":27793:27812  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":27793:27800  Stacked */\n      0x02\n        /* \"DEX.sol_flattened.sol\":27793:27812  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":27793:27818  Stacked[msg.sender].pop() */\n      dup1\n      sload\n      dup1\n      tag_364\n      jumpi\n      tag_364\n      tag_365\n      jump\t// in\n    tag_364:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      0x03\n      not(0x00)\n      swap1\n      swap4\n      add\n      swap3\n      dup4\n      mul\n      add\n      dup2\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x02\n      add\n      sstore\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol_flattened.sol\":27513:27825  function _removeArr(uint256 index) internal {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":25346:25404  function _updateK() internal {... */\n    tag_284:\n        /* \"DEX.sol_flattened.sol\":25395:25397  _y */\n      sload(0x07)\n        /* \"DEX.sol_flattened.sol\":25390:25392  _x */\n      sload(0x06)\n        /* \"DEX.sol_flattened.sol\":25390:25397  _x * _y */\n      tag_368\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_368:\n        /* \"DEX.sol_flattened.sol\":25385:25387  _k */\n      0x05\n        /* \"DEX.sol_flattened.sol\":25385:25397  _k = _x * _y */\n      sstore\n        /* \"DEX.sol_flattened.sol\":25346:25404  function _updateK() internal {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":22984:23090  function _requirePaused() internal view virtual {... */\n    tag_295:\n        /* \"DEX.sol_flattened.sol\":22701:22705  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":22724:22731  _paused */\n      sload\n      0xff\n      and\n        /* \"DEX.sol_flattened.sol\":23042:23083  require(paused(), \"Pausable: not paused\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9913:9915   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":23042:23083  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9895:9916   */\n      mstore\n        /* \"#utility.yul\":9952:9954   */\n      0x14\n        /* \"#utility.yul\":9932:9950   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9925:9955   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9971:9989   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9964:10014   */\n      mstore\n        /* \"#utility.yul\":10031:10049   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":23042:23083  require(paused(), \"Pausable: not paused\") */\n      tag_111\n        /* \"#utility.yul\":9711:10055   */\n      jump\n        /* \"DEX.sol_flattened.sol\":22806:22912  function _requireNotPaused() internal view virtual {... */\n    tag_302:\n        /* \"DEX.sol_flattened.sol\":22701:22705  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":22724:22731  _paused */\n      sload\n      0xff\n      and\n        /* \"DEX.sol_flattened.sol\":22875:22884  !paused() */\n      iszero\n        /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10262:10264   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10244:10265   */\n      mstore\n        /* \"#utility.yul\":10301:10303   */\n      0x10\n        /* \"#utility.yul\":10281:10299   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10274:10304   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":10320:10338   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10313:10359   */\n      mstore\n        /* \"#utility.yul\":10376:10394   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n      tag_111\n        /* \"#utility.yul\":10060:10400   */\n      jump\n        /* \"#utility.yul\":14:194   */\n    tag_28:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_383:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1634   */\n    tag_103:\n        /* \"#utility.yul\":1012:1014   */\n      0x20\n        /* \"#utility.yul\":1064:1085   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1134:1147   */\n      dup3\n      mload\n        /* \"#utility.yul\":1037:1055   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1156:1178   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":983:987   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1012:1014   */\n      swap1\n        /* \"#utility.yul\":1197:1199   */\n      0x40\n      swap1\n        /* \"#utility.yul\":1215:1233   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1256:1271   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":983:987   */\n      dup6\n        /* \"#utility.yul\":1299:1608   */\n    tag_388:\n        /* \"#utility.yul\":1313:1319   */\n      dup3\n        /* \"#utility.yul\":1310:1311   */\n      dup2\n        /* \"#utility.yul\":1307:1320   */\n      lt\n        /* \"#utility.yul\":1299:1608   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":1372:1385   */\n      dup2\n      mload\n        /* \"#utility.yul\":1410:1419   */\n      dup1\n      mload\n        /* \"#utility.yul\":1398:1420   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1460:1471   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":1454:1472   */\n      mload\n        /* \"#utility.yul\":1440:1452   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":1433:1473   */\n      mstore\n        /* \"#utility.yul\":1513:1524   */\n      dup6\n      add\n        /* \"#utility.yul\":1507:1525   */\n      mload\n        /* \"#utility.yul\":1493:1505   */\n      dup6\n      dup6\n      add\n        /* \"#utility.yul\":1486:1526   */\n      mstore\n        /* \"#utility.yul\":1555:1559   */\n      0x60\n        /* \"#utility.yul\":1546:1560   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1583:1598   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1335:1336   */\n      0x01\n        /* \"#utility.yul\":1328:1337   */\n      add\n        /* \"#utility.yul\":1299:1608   */\n      jump(tag_388)\n    tag_390:\n      pop\n        /* \"#utility.yul\":1625:1628   */\n      swap2\n      swap8\n        /* \"#utility.yul\":781:1634   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1639:1925   */\n    tag_107:\n        /* \"#utility.yul\":1698:1704   */\n      0x00\n        /* \"#utility.yul\":1751:1753   */\n      0x20\n        /* \"#utility.yul\":1739:1748   */\n      dup3\n        /* \"#utility.yul\":1730:1737   */\n      dup5\n        /* \"#utility.yul\":1726:1749   */\n      sub\n        /* \"#utility.yul\":1722:1754   */\n      slt\n        /* \"#utility.yul\":1719:1771   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":1767:1768   */\n      0x00\n        /* \"#utility.yul\":1764:1765   */\n      dup1\n        /* \"#utility.yul\":1757:1769   */\n      revert\n        /* \"#utility.yul\":1719:1771   */\n    tag_392:\n        /* \"#utility.yul\":1793:1816   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1845:1876   */\n      dup2\n      and\n        /* \"#utility.yul\":1835:1877   */\n      dup2\n      eq\n        /* \"#utility.yul\":1825:1895   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":1891:1892   */\n      0x00\n        /* \"#utility.yul\":1888:1889   */\n      dup1\n        /* \"#utility.yul\":1881:1893   */\n      revert\n        /* \"#utility.yul\":1825:1895   */\n    tag_393:\n        /* \"#utility.yul\":1914:1919   */\n      swap4\n        /* \"#utility.yul\":1639:1925   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2279:2406   */\n    tag_380:\n        /* \"#utility.yul\":2340:2350   */\n      0x4e487b71\n        /* \"#utility.yul\":2335:2338   */\n      0xe0\n        /* \"#utility.yul\":2331:2351   */\n      shl\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2321:2352   */\n      mstore\n        /* \"#utility.yul\":2371:2375   */\n      0x11\n        /* \"#utility.yul\":2368:2369   */\n      0x04\n        /* \"#utility.yul\":2361:2376   */\n      mstore\n        /* \"#utility.yul\":2395:2399   */\n      0x24\n        /* \"#utility.yul\":2392:2393   */\n      0x00\n        /* \"#utility.yul\":2385:2400   */\n      revert\n        /* \"#utility.yul\":2411:2628   */\n    tag_115:\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2477:2478   */\n      dup3\n        /* \"#utility.yul\":2467:2599   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":2521:2531   */\n      0x4e487b71\n        /* \"#utility.yul\":2516:2519   */\n      0xe0\n        /* \"#utility.yul\":2512:2532   */\n      shl\n        /* \"#utility.yul\":2509:2510   */\n      0x00\n        /* \"#utility.yul\":2502:2533   */\n      mstore\n        /* \"#utility.yul\":2556:2560   */\n      0x12\n        /* \"#utility.yul\":2553:2554   */\n      0x04\n        /* \"#utility.yul\":2546:2561   */\n      mstore\n        /* \"#utility.yul\":2584:2588   */\n      0x24\n        /* \"#utility.yul\":2581:2582   */\n      0x00\n        /* \"#utility.yul\":2574:2589   */\n      revert\n        /* \"#utility.yul\":2467:2599   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":2613:2622   */\n      div\n      swap1\n        /* \"#utility.yul\":2411:2628   */\n      jump\t// out\n        /* \"#utility.yul\":2633:2761   */\n    tag_117:\n        /* \"#utility.yul\":2700:2709   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2721:2732   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2718:2755   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2735:2753   */\n      tag_400\n      tag_380\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2633:2761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2766:2934   */\n    tag_127:\n        /* \"#utility.yul\":2839:2848   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2870:2879   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2887:2902   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2881:2903   */\n      dup5\n      eq\n        /* \"#utility.yul\":2867:2904   */\n      or\n        /* \"#utility.yul\":2857:2928   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2908:2926   */\n      tag_400\n      tag_380\n      jump\t// in\n        /* \"#utility.yul\":3294:3419   */\n    tag_159:\n        /* \"#utility.yul\":3359:3368   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3380:3390   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3377:3413   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":3393:3411   */\n      tag_400\n      tag_380\n      jump\t// in\n        /* \"#utility.yul\":4388:4665   */\n    tag_185:\n        /* \"#utility.yul\":4455:4461   */\n      0x00\n        /* \"#utility.yul\":4508:4510   */\n      0x20\n        /* \"#utility.yul\":4496:4505   */\n      dup3\n        /* \"#utility.yul\":4487:4494   */\n      dup5\n        /* \"#utility.yul\":4483:4506   */\n      sub\n        /* \"#utility.yul\":4479:4511   */\n      slt\n        /* \"#utility.yul\":4476:4528   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":4524:4525   */\n      0x00\n        /* \"#utility.yul\":4521:4522   */\n      dup1\n        /* \"#utility.yul\":4514:4526   */\n      revert\n        /* \"#utility.yul\":4476:4528   */\n    tag_412:\n        /* \"#utility.yul\":4556:4565   */\n      dup2\n        /* \"#utility.yul\":4550:4566   */\n      mload\n        /* \"#utility.yul\":4609:4614   */\n      dup1\n        /* \"#utility.yul\":4602:4615   */\n      iszero\n        /* \"#utility.yul\":4595:4616   */\n      iszero\n        /* \"#utility.yul\":4588:4593   */\n      dup2\n        /* \"#utility.yul\":4585:4617   */\n      eq\n        /* \"#utility.yul\":4575:4635   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4631:4632   */\n      0x00\n        /* \"#utility.yul\":4628:4629   */\n      dup1\n        /* \"#utility.yul\":4621:4633   */\n      revert\n        /* \"#utility.yul\":6300:6484   */\n    tag_221:\n        /* \"#utility.yul\":6370:6376   */\n      0x00\n        /* \"#utility.yul\":6423:6425   */\n      0x20\n        /* \"#utility.yul\":6411:6420   */\n      dup3\n        /* \"#utility.yul\":6402:6409   */\n      dup5\n        /* \"#utility.yul\":6398:6421   */\n      sub\n        /* \"#utility.yul\":6394:6426   */\n      slt\n        /* \"#utility.yul\":6391:6443   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":6439:6440   */\n      0x00\n        /* \"#utility.yul\":6436:6437   */\n      dup1\n        /* \"#utility.yul\":6429:6441   */\n      revert\n        /* \"#utility.yul\":6391:6443   */\n    tag_420:\n      pop\n        /* \"#utility.yul\":6462:6478   */\n      mload\n      swap2\n        /* \"#utility.yul\":6300:6484   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7631:7758   */\n    tag_254:\n        /* \"#utility.yul\":7692:7702   */\n      0x4e487b71\n        /* \"#utility.yul\":7687:7690   */\n      0xe0\n        /* \"#utility.yul\":7683:7703   */\n      shl\n        /* \"#utility.yul\":7680:7681   */\n      0x00\n        /* \"#utility.yul\":7673:7704   */\n      mstore\n        /* \"#utility.yul\":7723:7727   */\n      0x32\n        /* \"#utility.yul\":7720:7721   */\n      0x04\n        /* \"#utility.yul\":7713:7728   */\n      mstore\n        /* \"#utility.yul\":7747:7751   */\n      0x24\n        /* \"#utility.yul\":7744:7745   */\n      0x00\n        /* \"#utility.yul\":7737:7752   */\n      revert\n        /* \"#utility.yul\":9091:9226   */\n    tag_330:\n        /* \"#utility.yul\":9130:9133   */\n      0x00\n        /* \"#utility.yul\":9151:9168   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9148:9191   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":9171:9189   */\n      tag_430\n      tag_380\n      jump\t// in\n    tag_430:\n      pop\n        /* \"#utility.yul\":9218:9219   */\n      0x01\n        /* \"#utility.yul\":9207:9220   */\n      add\n      swap1\n        /* \"#utility.yul\":9091:9226   */\n      jump\t// out\n        /* \"#utility.yul\":9579:9706   */\n    tag_365:\n        /* \"#utility.yul\":9640:9650   */\n      0x4e487b71\n        /* \"#utility.yul\":9635:9638   */\n      0xe0\n        /* \"#utility.yul\":9631:9651   */\n      shl\n        /* \"#utility.yul\":9628:9629   */\n      0x00\n        /* \"#utility.yul\":9621:9652   */\n      mstore\n        /* \"#utility.yul\":9671:9675   */\n      0x31\n        /* \"#utility.yul\":9668:9669   */\n      0x04\n        /* \"#utility.yul\":9661:9676   */\n      mstore\n        /* \"#utility.yul\":9695:9699   */\n      0x24\n        /* \"#utility.yul\":9692:9693   */\n      0x00\n        /* \"#utility.yul\":9685:9700   */\n      revert\n\n    auxdata: 0xa2646970667358221220ce58bcc8980097a92633e41d16c08fb6b2e7262fdb42bb9bf6f114125554963e64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1133": {
									"entryPoint": null,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_881": {
									"entryPoint": null,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_855": {
									"entryPoint": 157,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:798:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:213:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "76:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "91:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "94:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "87:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "76:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "162:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "190:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "195:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "186:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "186:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "176:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "176:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "176:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "227:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "230:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "220:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "220:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "220:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "255:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "258:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "248:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "248:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "248:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "125:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "118:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "118:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "132:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "139:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "148:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "135:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "135:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "129:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "129:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "115:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "115:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:45:1"
															},
															"nodeType": "YulIf",
															"src": "105:168:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "45:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "48:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "54:7:1",
														"type": ""
													}
												],
												"src": "14:265:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "330:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "361:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "382:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "389:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "394:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "385:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "385:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "375:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "375:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "426:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "429:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "419:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "419:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "419:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "454:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "350:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:9:1"
															},
															"nodeType": "YulIf",
															"src": "340:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "481:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "490:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "481:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "315:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "318:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "324:1:1",
														"type": ""
													}
												],
												"src": "284:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "633:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "642:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "645:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "635:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "635:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "635:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "608:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "617:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "604:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:32:1"
															},
															"nodeType": "YulIf",
															"src": "597:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "658:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "677:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "671:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "662:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "750:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "759:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "762:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "752:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "752:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "709:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "720:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "735:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "740:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "731:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "731:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "744:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "727:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "727:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "716:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "716:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "706:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "706:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:50:1"
															},
															"nodeType": "YulIf",
															"src": "696:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "775:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "785:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "553:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "564:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "576:6:1",
														"type": ""
													}
												],
												"src": "506:290:1"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052678ac7230489e80000600855600a6008546003620000239190620000f6565b6200002f919062000122565b6009553480156200003f57600080fd5b506040516200194e3803806200194e833981016040819052620000629162000145565b6000805460ff1916905562000077336200009d565b600180546001600160a01b0319166001600160a01b039290921691909117905562000177565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80820281158282048414176200011c57634e487b7160e01b600052601160045260246000fd5b92915050565b6000826200014057634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200015857600080fd5b81516001600160a01b03811681146200017057600080fd5b9392505050565b6117c780620001876000396000f3fe60806040526004361061011f5760003560e01c8063771a3a1d116100a0578063d96a094a11610064578063d96a094a146102e2578063dc9031c4146102f5578063e4849b3214610308578063e8bca8b814610328578063f2fde38b1461034a57600080fd5b8063771a3a1d146102555780638456cb591461026b5780638da5cb5b146102805780639c74f05d146102b6578063d3b5dc3b146102cc57600080fd5b80632ad9d559116100e75780632ad9d559146101bb5780633f4ba83a146101e85780635c572ed0146101fd5780635c975abb1461021d578063715018a61461024057600080fd5b80631a753fed146101245780631b82c27f14610157578063200061df1461016d57806328726bda1461018f57806329809703146101a5575b600080fd5b34801561013057600080fd5b5061014461013f3660046115f4565b61036a565b6040519081526020015b60405180910390f35b34801561016357600080fd5b5061014460055481565b34801561017957600080fd5b5061018d6101883660046115f4565b61047c565b005b34801561019b57600080fd5b5061014460075481565b3480156101b157600080fd5b5061014460065481565b3480156101c757600080fd5b506101446101d63660046115f4565b60036020526000908152604090205481565b3480156101f457600080fd5b5061018d610488565b34801561020957600080fd5b506101446102183660046115f4565b61049a565b34801561022957600080fd5b5060005460ff16604051901515815260200161014e565b34801561024c57600080fd5b5061018d61059c565b34801561026157600080fd5b5061014460095481565b34801561027757600080fd5b5061018d6105ae565b34801561028c57600080fd5b5060005461010090046001600160a01b03166040516001600160a01b03909116815260200161014e565b3480156102c257600080fd5b5061014460045481565b3480156102d857600080fd5b5061014460085481565b61018d6102f03660046115f4565b6105be565b61018d6103033660046115f4565b6107bc565b34801561031457600080fd5b5061018d6103233660046115f4565b6108a9565b34801561033457600080fd5b5061033d610b15565b60405161014e919061160d565b34801561035657600080fd5b5061018d610365366004611666565b610b9d565b600080600554116103b95760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064015b60405180910390fd5b6000806006546000036103e7578360016005546103d691906116ac565b6103e091906116ce565b9050610405565b836006546005546103f891906116ac565b61040291906116ce565b90505b8060000361042357600160055461041c91906116ac565b9150610434565b8060055461043191906116ac565b91505b60006006548361044491906116ce565b905060006008546009548361045991906116e7565b61046391906116ac565b9050600061047182846116ce565b979650505050505050565b61048581610c13565b50565b610490610f6e565b610498610fce565b565b600080600554116104e45760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064016103b0565b6000806007546000036105125783600160055461050191906116ac565b61050b91906116ce565b9150610530565b8360075460055461052391906116ac565b61052d91906116ce565b91505b8160000361054e57600160055461054791906116ac565b905061055f565b8160055461055c91906116ac565b90505b60006007548261056f91906116ce565b905060006008546009548361058491906116e7565b61058e91906116ac565b9050600061047182846116fe565b6105a4610f6e565b6104986000611020565b6105b6610f6e565b610498611079565b600081116105ff5760405162461bcd60e51b815260206004820152600e60248201526d53656e6420536f6d65204d656d6560901b60448201526064016103b0565b600061060a8261049a565b90503481111561064c5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc8409adee4ca408aa89609b1b60448201526064016103b0565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190611711565b50336108fc6106d083346116ce565b6040518115909202916000818181858888f193505050501580156106f8573d6000803e3d6000fd5b5060085460095461070990826116fe565b61071390846116e7565b61071d91906116ac565b6003600061072e62015180426116ac565b8152602001908152602001600020600082825461074b91906116fe565b92505081905550816006600082825461076491906116ce565b909155505060065460055461077991906116ac565b600755604080518381526020810183905233917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed91015b60405180910390a25050565b600081116107fd5760405162461bcd60e51b815260206004820152600e60248201526d53656e64206d6f7265204d454d4560901b60448201526064016103b0565b6000341161083d5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840dadee4ca408aa89609b1b60448201526064016103b0565b806008543461084c91906116e7565b61085691906116ac565b600454111561089f5760405162461bcd60e51b815260206004820152601560248201527414dd1858dada5b99c814985d19481b9bdd081b595d605a1b60448201526064016103b0565b61048581346110b6565b600081116108e95760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840a6dedaca408aa89609b1b60448201526064016103b0565b60006108f48261036a565b6001546040516370a0823160e01b81523360048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa15801561093d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109619190611733565b8111156109b05760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f6e2774206861766520656e6f756768206d656d6500000000000060448201526064016103b0565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611711565b50604051339083156108fc029084906000818181858888f19350505050158015610a59573d6000803e3d6000fd5b50600854600954610a6a90826116fe565b610a7490836116e7565b610a7e91906116ac565b60036000610a8f62015180426116ac565b81526020019081526020016000206000828254610aac91906116fe565b925050819055508160076000828254610ac591906116ce565b9091555050600754600554610ada91906116ac565b600655604080518281526020810184905233917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a91016107b0565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610b945783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610b44565b50505050905090565b610ba5610f6e565b6001600160a01b038116610c0a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b0565b61048581611020565b336000908152600260205260408120805483908110610c3457610c3461174c565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090506000610c7761121e565b8251602084015191925090600090610c909084906116fe565b6001546040516370a0823160e01b815230600482015291925083916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d019190611733565b1015610d895760405162461bcd60e51b815260206004820152604b60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b60648201526a206261636b20536f6f6e2160a81b608482015260a4016103b0565b80471015610e125760405162461bcd60e51b815260206004820152604a60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e277420686176652045746820746f2072657475726e2c20436865636b206064820152696261636b20536f6f6e2160b01b608482015260a4016103b0565b8160066000828254610e2491906116ce565b925050819055508060076000828254610e3d91906116ce565b909155505060015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb79190611711565b50604051339082156108fc029083906000818181858888f19350505050158015610ee5573d6000803e3d6000fd5b50600654600003610efa576000600455610f1b565b600654600854600754610f0d91906116e7565b610f1791906116ac565b6004555b610f24856113e8565b610f2c611550565b604080518381526020810183905233917fbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4910160405180910390a25050505050565b6000546001600160a01b036101009091041633146104985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b0565b610fd6611565565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6110816115ae565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110033390565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561110d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111319190611711565b50816006600082825461114491906116fe565b92505081905550806007600082825461115d91906116fe565b9091555050604080516060810182528381526020808201848152428385019081523360009081526002808552958120805460018181018355918352949091208551600390950201938455915191830191909155519201919091556006546008546007546111ca91906116e7565b6111d491906116ac565b6004556111df611550565b6040805184815234602082015233917f5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6910160405180910390a2505050565b6000808060038161123262015180426116ac565b81526020019081526020016000205411156113e35733600090815260026020526040812080549091805b828110156112e15760008482815481106112785761127861174c565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090508060400151426112c191906116ce565b6112cb90846116fe565b92505080806112d990611762565b91505061125c565b5060005b828110156113de5760008482815481106113015761130161174c565b600091825260208083206040805160608101825260039094029091018054808552600182015493850193909352600201549083015260065460085492945091611349916116e7565b61135391906116ac565b9050600082604001514261136791906116ce565b9050600061137586836116ac565b600554909150816003600061138d62015180426116ac565b815260200190815260200160002054856113a791906116e7565b6113b191906116e7565b6113bb91906116ac565b6113c5908a6116fe565b98505050505080806113d690611762565b9150506112e5565b505050505b919050565b33600090815260026020526040902054811061143c5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016103b0565b805b3360009081526002602052604090205461145a906001906116ce565b8110156115095733600090815260026020526040902061147b8260016116fe565b8154811061148b5761148b61174c565b906000526020600020906003020160026000336001600160a01b03166001600160a01b0316815260200190815260200160002082815481106114cf576114cf61174c565b600091825260209091208254600390920201908155600180830154908201556002918201549101558061150181611762565b91505061143e565b503360009081526002602052604090208054806115285761152861177b565b6000828152602081206003600019909301928302018181556001810182905560020155905550565b60075460065461156091906116e7565b600555565b60005460ff166104985760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103b0565b60005460ff16156104985760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103b0565b60006020828403121561160657600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015611659578151805185528681015187860152850151858501526060909301929085019060010161162a565b5091979650505050505050565b60006020828403121561167857600080fd5b81356001600160a01b038116811461168f57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000826116c957634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156116e1576116e1611696565b92915050565b80820281158282048414176116e1576116e1611696565b808201808211156116e1576116e1611696565b60006020828403121561172357600080fd5b8151801515811461168f57600080fd5b60006020828403121561174557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161177457611774611696565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ce58bcc8980097a92633e41d16c08fb6b2e7262fdb42bb9bf6f114125554963e64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x8 SSTORE PUSH1 0xA PUSH1 0x8 SLOAD PUSH1 0x3 PUSH3 0x23 SWAP2 SWAP1 PUSH3 0xF6 JUMP JUMPDEST PUSH3 0x2F SWAP2 SWAP1 PUSH3 0x122 JUMP JUMPDEST PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x194E CODESIZE SUB DUP1 PUSH3 0x194E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x62 SWAP2 PUSH3 0x145 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x77 CALLER PUSH3 0x9D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x177 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x11C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x140 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17C7 DUP1 PUSH3 0x187 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771A3A1D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD96A094A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xDC9031C4 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE8BCA8B8 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x9C74F05D EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xD3B5DC3B EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AD9D559 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2AD9D559 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x5C572ED0 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A753FED EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x1B82C27F EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x200061DF EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x28726BDA EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x29809703 EQ PUSH2 0x1A5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x488 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x18D PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x3E7 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH2 0x405 JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x423 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP2 POP PUSH2 0x434 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x471 DUP3 DUP5 PUSH2 0x16CE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0xC13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x490 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x498 PUSH2 0xFCE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x0 SUB PUSH2 0x512 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP PUSH2 0x530 JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x54E JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH2 0x55F JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x471 DUP3 DUP5 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x498 PUSH1 0x0 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x5B6 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x498 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A DUP3 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP CALLER PUSH2 0x8FC PUSH2 0x6D0 DUP4 CALLVALUE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x709 SWAP1 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x713 SWAP1 DUP5 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x72E PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E64206D6F7265204D454D45 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840DADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD1858DADA5B99C814985D19481B9BDD081B595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x485 DUP2 CALLVALUE PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 DUP3 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0xA6A SWAP1 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0xA74 SWAP1 DUP4 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0xA8F PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD PUSH2 0x7B0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB94 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB44 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x1020 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xC34 JUMPI PUSH2 0xC34 PUSH2 0x174C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xC77 PUSH2 0x121E JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC90 SWAP1 DUP5 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST LT ISZERO PUSH2 0xD89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E27742068617665204D656D6520746F2072657475726E2C20436865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x206261636B20536F6F6E21 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E277420686176652045746820746F2072657475726E2C20436865636B20 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x6261636B20536F6F6E21 PUSH1 0xB0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE3D SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0xEFA JUMPI PUSH1 0x0 PUSH1 0x4 SSTORE PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF0D SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0xF24 DUP6 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xF2C PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0xFD6 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1081 PUSH2 0x15AE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1003 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP6 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH1 0x3 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x11CA SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x11DF PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x3 DUP2 PUSH2 0x1232 PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x13E3 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1278 JUMPI PUSH2 0x1278 PUSH2 0x174C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x12C1 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x12CB SWAP1 DUP5 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x12D9 SWAP1 PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1301 JUMPI PUSH2 0x1301 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD SWAP3 SWAP5 POP SWAP2 PUSH2 0x1349 SWAP2 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x1353 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1375 DUP7 DUP4 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x138D PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x13B1 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x13C5 SWAP1 DUP11 PUSH2 0x16FE JUMP JUMPDEST SWAP9 POP POP POP POP POP DUP1 DUP1 PUSH2 0x13D6 SWAP1 PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12E5 JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x143C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x145A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16CE JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1509 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x147B DUP3 PUSH1 0x1 PUSH2 0x16FE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x148B JUMPI PUSH2 0x148B PUSH2 0x174C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14CF JUMPI PUSH2 0x14CF PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x1501 DUP2 PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x143E JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1528 JUMPI PUSH2 0x1528 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x3 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x1560 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1659 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x162A JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x168F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x16E1 JUMPI PUSH2 0x16E1 PUSH2 0x1696 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x168F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1774 JUMPI PUSH2 0x1774 PUSH2 0x1696 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PC 0xBC 0xC8 SWAP9 STOP SWAP8 0xA9 0x26 CALLER 0xE4 SAR AND 0xC0 DUP16 0xB6 0xB2 0xE7 0x26 0x2F 0xDB TIMESTAMP 0xBB SWAP12 0xF6 CALL EQ SLT SSTORE SLOAD SWAP7 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "24286:7451:0:-:0;;;25043:5;25016:32;;25098:2;25085:9;;25081:1;:13;;;;:::i;:::-;25080:20;;;;:::i;:::-;25055:45;;25107:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22045:5;22035:15;;-1:-1:-1;;22035:15:0;;;19357:32;4240:10;19357:18;:32::i;:::-;25143:4;:17;;-1:-1:-1;;;;;;25143:17:0;-1:-1:-1;;;;;25143:17:0;;;;;;;;;;24286:7451;;20854:187;20927:16;20946:6;;-1:-1:-1;;;;;20962:17:0;;;20946:6;20962:17;;;-1:-1:-1;;;;;;20962:17:0;;;;;20994:40;;20946:6;;;;;;;20962:17;;20946:6;;20994:40;;;20917:124;20854:187;:::o;14:265:1:-;87:9;;;118;;135:15;;;129:22;;115:37;105:168;;195:10;190:3;186:20;183:1;176:31;230:4;227:1;220:15;258:4;255:1;248:15;105:168;14:265;;;;:::o;284:217::-;324:1;350;340:132;;394:10;389:3;385:20;382:1;375:31;429:4;426:1;419:15;457:4;454:1;447:15;340:132;-1:-1:-1;486:9:1;;284:217::o;506:290::-;576:6;629:2;617:9;608:7;604:23;600:32;597:52;;;645:1;642;635:12;597:52;671:16;;-1:-1:-1;;;;;716:31:1;;706:42;;696:70;;762:1;759;752:12;696:70;785:5;506:290;-1:-1:-1;;;506:290:1:o;:::-;24286:7451:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_798": {
									"entryPoint": 3950,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distributeTax_1601": {
									"entryPoint": 4638,
									"id": 1601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_k_1106": {
									"entryPoint": null,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_945": {
									"entryPoint": 4217,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_removeArr_1471": {
									"entryPoint": 5096,
									"id": 1471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_requireNotPaused_918": {
									"entryPoint": 5550,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_929": {
									"entryPoint": 5477,
									"id": 929,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_stack_1298": {
									"entryPoint": 4278,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_855": {
									"entryPoint": 4128,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_961": {
									"entryPoint": 4046,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_unstack_1413": {
									"entryPoint": 3091,
									"id": 1413,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateK_1161": {
									"entryPoint": 5456,
									"id": 1161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_x_1108": {
									"entryPoint": null,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_y_1110": {
									"entryPoint": null,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_1855": {
									"entryPoint": 1470,
									"id": 1855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@dailyTax_1102": {
									"entryPoint": null,
									"id": 1102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getETHPrice_1773": {
									"entryPoint": 874,
									"id": 1773,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMemePrice_1687": {
									"entryPoint": 1178,
									"id": 1687,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStacks_1174": {
									"entryPoint": 2837,
									"id": 1174,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_784": {
									"entryPoint": null,
									"id": 784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1142": {
									"entryPoint": 1454,
									"id": 1142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_906": {
									"entryPoint": null,
									"id": 906,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@precision_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_812": {
									"entryPoint": 1436,
									"id": 812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sell_1941": {
									"entryPoint": 2217,
									"id": 1941,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stack_1214": {
									"entryPoint": 1980,
									"id": 1214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stackingRate_1104": {
									"entryPoint": null,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@taxRate_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_835": {
									"entryPoint": 2973,
									"id": 835,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1151": {
									"entryPoint": 1160,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstack_1231": {
									"entryPoint": 1148,
									"id": 1231,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$1057_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$1057_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10402:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:1",
														"type": ""
													}
												],
												"src": "199:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "486:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "486:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "528:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "553:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "539:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "521:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "445:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "456:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "467:4:1",
														"type": ""
													}
												],
												"src": "381:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "674:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "684:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "692:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "684:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "726:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "741:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "757:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "762:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "753:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "753:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "766:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "749:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "719:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "643:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "654:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "665:4:1",
														"type": ""
													}
												],
												"src": "573:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "992:642:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1012:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1006:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1023:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1041:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1052:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1037:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1027:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1071:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1082:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1064:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1094:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1105:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1098:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1120:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1140:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1134:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1124:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1163:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1171:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1156:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1187:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1197:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1191:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1208:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1230:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1215:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1242:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1260:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1268:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1246:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1280:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1289:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1284:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1348:260:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1362:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1378:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1372:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "1366:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1405:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1416:2:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1410:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1410:9:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:22:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1444:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1449:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1440:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1440:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1464:2:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1468:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1460:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1460:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1454:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1454:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1433:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1497:3:1"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1502:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1493:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1493:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1517:2:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1521:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1513:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1513:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1507:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1507:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1486:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1486:40:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1539:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1550:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1555:4:1",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1546:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1546:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1539:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1573:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1587:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1595:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1583:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1583:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1573:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1310:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1313:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1307:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1321:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1323:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1332:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1335:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1328:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1323:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1303:3:1",
																"statements": []
															},
															"src": "1299:309:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1617:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1625:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1617:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$1057_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$1057_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "961:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "972:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "983:4:1",
														"type": ""
													}
												],
												"src": "781:853:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1755:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1767:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1757:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1730:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1739:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1726:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1751:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:32:1"
															},
															"nodeType": "YulIf",
															"src": "1719:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1780:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1793:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1784:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1879:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1888:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1881:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1881:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1881:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1838:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1849:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1864:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1869:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1860:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1860:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1873:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1856:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1856:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1845:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1845:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1835:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1835:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:50:1"
															},
															"nodeType": "YulIf",
															"src": "1825:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1904:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1914:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1675:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1686:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1698:6:1",
														"type": ""
													}
												],
												"src": "1639:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2104:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2155:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2166:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2151:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2144:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2194:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2205:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2190:18:1"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206c6971756964697479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2210:22:1",
																		"type": "",
																		"value": "Not enough liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2242:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2254:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2265:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2250:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2242:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2081:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2095:4:1",
														"type": ""
													}
												],
												"src": "1930:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2328:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2335:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2340:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2331:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2321:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2321:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2321:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2371:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2361:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2361:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2385:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2279:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2457:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2488:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2509:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2516:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2521:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2512:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2512:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2502:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2502:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2502:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2556:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2546:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2546:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2546:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2581:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2584:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2574:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2574:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2574:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2477:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:9:1"
															},
															"nodeType": "YulIf",
															"src": "2467:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2617:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2620:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2608:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2442:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2445:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2451:1:1",
														"type": ""
													}
												],
												"src": "2411:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2682:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2692:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2704:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2707:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2692:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2733:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2735:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2735:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2735:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2724:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2730:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:11:1"
															},
															"nodeType": "YulIf",
															"src": "2718:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2664:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2667:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2673:4:1",
														"type": ""
													}
												],
												"src": "2633:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2818:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2828:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2843:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2846:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2828:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2906:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2908:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2908:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2908:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2877:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2870:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2870:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2884:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2891:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2900:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2887:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2887:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2881:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2881:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:45:1"
															},
															"nodeType": "YulIf",
															"src": "2857:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2797:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2800:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2806:7:1",
														"type": ""
													}
												],
												"src": "2766:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3113:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3130:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3141:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3123:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3164:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3175:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3160:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3160:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3153:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3214:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3199:18:1"
																	},
																	{
																		"hexValue": "496e6465782063616e2774206265206c657373207468656e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3219:28:1",
																		"type": "",
																		"value": "Index can't be less then 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3192:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3257:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3090:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3104:4:1",
														"type": ""
													}
												],
												"src": "2939:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3342:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3352:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3363:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3366:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3359:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3393:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3393:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3393:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3383:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3386:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3380:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:10:1"
															},
															"nodeType": "YulIf",
															"src": "3377:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3325:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3328:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3334:3:1",
														"type": ""
													}
												],
												"src": "3294:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3598:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3615:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3608:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3608:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3649:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3660:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3645:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3665:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3638:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3699:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3684:18:1"
																	},
																	{
																		"hexValue": "53656e6420536f6d65204d656d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3704:16:1",
																		"type": "",
																		"value": "Send Some Meme"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3677:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3677:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3730:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3742:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3738:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3730:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3589:4:1",
														"type": ""
													}
												],
												"src": "3424:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3951:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4042:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4027:18:1"
																	},
																	{
																		"hexValue": "53656e64204d6f726520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4047:15:1",
																		"type": "",
																		"value": "Send More ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4072:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4084:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4095:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4080:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4072:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3932:4:1",
														"type": ""
													}
												],
												"src": "3767:337:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4238:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4248:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4260:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4248:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4290:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4305:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4321:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4326:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4317:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4317:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4330:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4313:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4313:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4301:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4283:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4354:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4365:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4350:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4350:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4370:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4199:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4210:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4218:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4229:4:1",
														"type": ""
													}
												],
												"src": "4109:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4512:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4521:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4524:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4514:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4514:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4514:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4487:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4496:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4483:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:32:1"
															},
															"nodeType": "YulIf",
															"src": "4476:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4537:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4556:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4550:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4541:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4619:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4628:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4631:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4621:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4621:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4621:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4588:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4609:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4602:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4602:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4595:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4595:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4585:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4585:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:40:1"
															},
															"nodeType": "YulIf",
															"src": "4575:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4644:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4654:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4644:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4455:6:1",
														"type": ""
													}
												],
												"src": "4388:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4799:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4809:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4821:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4832:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4809:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4851:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4862:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4844:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4889:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4900:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4885:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4905:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4878:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4760:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4771:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4779:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													}
												],
												"src": "4670:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5097:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5114:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5107:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5159:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5164:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5137:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5187:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5198:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:18:1"
																	},
																	{
																		"hexValue": "53656e64206d6f7265204d454d45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5203:16:1",
																		"type": "",
																		"value": "Send more MEME"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5176:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5176:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5176:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5229:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5241:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5252:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5229:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5074:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5088:4:1",
														"type": ""
													}
												],
												"src": "4923:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5440:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5457:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5468:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5450:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5502:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5530:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5541:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5526:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:18:1"
																	},
																	{
																		"hexValue": "53656e64206d6f726520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5546:15:1",
																		"type": "",
																		"value": "Send more ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5519:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5519:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5583:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5594:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5571:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5417:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5431:4:1",
														"type": ""
													}
												],
												"src": "5266:337:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5782:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5799:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5792:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5849:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5872:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5883:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5868:18:1"
																	},
																	{
																		"hexValue": "537461636b696e672052617465206e6f74206d6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5888:23:1",
																		"type": "",
																		"value": "Stacking Rate not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5861:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5921:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5933:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5929:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5929:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5921:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5759:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5773:4:1",
														"type": ""
													}
												],
												"src": "5608:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6132:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6149:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6160:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6142:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6183:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6194:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6179:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6199:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6172:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6222:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6233:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6218:18:1"
																	},
																	{
																		"hexValue": "53656e6420536f6d6520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6238:15:1",
																		"type": "",
																		"value": "Send Some ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6211:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6211:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6263:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6275:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6286:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6271:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6263:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6109:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6123:4:1",
														"type": ""
													}
												],
												"src": "5958:337:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6381:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6427:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6436:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6429:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6429:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6429:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6402:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6411:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6398:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6423:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6394:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6394:32:1"
															},
															"nodeType": "YulIf",
															"src": "6391:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6452:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6468:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6462:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6462:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6452:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6347:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6358:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6370:6:1",
														"type": ""
													}
												],
												"src": "6300:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6663:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6680:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6691:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6673:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6714:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6725:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6710:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6730:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6703:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520656e6f756768206d656d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6769:28:1",
																		"type": "",
																		"value": "You don't have enough meme"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6742:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6807:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6819:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6830:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6807:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6640:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6654:4:1",
														"type": ""
													}
												],
												"src": "6489:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7001:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7011:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7023:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7034:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7011:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7046:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7064:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7069:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7060:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7073:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7050:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7091:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7106:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7114:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7102:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7149:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7134:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7158:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7166:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7154:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7201:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7186:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7206:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7179:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7179:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6954:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6965:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6973:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6981:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6992:4:1",
														"type": ""
													}
												],
												"src": "6844:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7398:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7426:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7408:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7408:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7449:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7460:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7445:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7445:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7465:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7488:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7499:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7484:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7504:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7477:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7570:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7575:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7593:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7605:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7616:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7601:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7601:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7593:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7375:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7389:4:1",
														"type": ""
													}
												],
												"src": "7224:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7663:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7680:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7687:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7692:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7683:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7683:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7673:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7673:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7720:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7723:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7713:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7744:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7747:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7737:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7737:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7631:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7937:305:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7954:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7965:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7947:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7988:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7999:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7984:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8004:2:1",
																		"type": "",
																		"value": "75"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7977:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7977:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8038:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8023:18:1"
																	},
																	{
																		"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8043:34:1",
																		"type": "",
																		"value": "Sorry Currently this contract do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8016:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8016:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8109:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8094:18:1"
																	},
																	{
																		"hexValue": "65736e27742068617665204d656d6520746f2072657475726e2c20436865636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8114:34:1",
																		"type": "",
																		"value": "esn't have Meme to return, Check"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8087:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8087:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8169:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8180:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8165:19:1"
																	},
																	{
																		"hexValue": "206261636b20536f6f6e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8186:13:1",
																		"type": "",
																		"value": " back Soon!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8158:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8158:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8209:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8221:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8232:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8217:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8209:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7914:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7928:4:1",
														"type": ""
													}
												],
												"src": "7763:479:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8421:304:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8438:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8449:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8431:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8431:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8472:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8483:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8468:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8488:2:1",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8461:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8461:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8511:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8522:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8507:18:1"
																	},
																	{
																		"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8527:34:1",
																		"type": "",
																		"value": "Sorry Currently this contract do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8500:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8500:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8578:18:1"
																	},
																	{
																		"hexValue": "65736e277420686176652045746820746f2072657475726e2c20436865636b20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8598:34:1",
																		"type": "",
																		"value": "esn't have Eth to return, Check "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8571:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8571:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8653:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8664:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8649:19:1"
																	},
																	{
																		"hexValue": "6261636b20536f6f6e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8670:12:1",
																		"type": "",
																		"value": "back Soon!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8642:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8692:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8715:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8692:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8398:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8412:4:1",
														"type": ""
													}
												],
												"src": "8247:478:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8904:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8921:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8932:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8914:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8914:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8966:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8951:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8971:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8944:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8994:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9005:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8990:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8990:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9010:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8983:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9054:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9066:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9062:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9062:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9054:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8881:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8895:4:1",
														"type": ""
													}
												],
												"src": "8730:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9138:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9169:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9171:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9171:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9171:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9154:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9165:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9161:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9151:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9151:17:1"
															},
															"nodeType": "YulIf",
															"src": "9148:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9200:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9211:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9218:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9207:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9200:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9120:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9130:3:1",
														"type": ""
													}
												],
												"src": "9091:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9405:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9422:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9433:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9415:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9415:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9456:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9467:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9452:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9472:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9445:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9445:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9445:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9506:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9491:18:1"
																	},
																	{
																		"hexValue": "496e646578206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9511:21:1",
																		"type": "",
																		"value": "Index out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9484:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9542:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9554:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9565:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9542:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9382:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9396:4:1",
														"type": ""
													}
												],
												"src": "9231:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9611:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9628:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9635:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9640:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9631:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9621:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9668:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9671:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9661:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9692:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9695:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9685:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "9579:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9885:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9902:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9913:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9895:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9895:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9936:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9947:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9932:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9952:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9925:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9925:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9975:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9986:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9971:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9971:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9991:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9964:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10023:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10035:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10046:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10031:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10031:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10023:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9862:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9876:4:1",
														"type": ""
													}
												],
												"src": "9711:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10234:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10244:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10285:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10296:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10281:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10301:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10274:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10274:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10324:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10335:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10320:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10340:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10313:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10313:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10368:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10380:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10391:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10376:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10368:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10211:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10225:4:1",
														"type": ""
													}
												],
												"src": "10060:340:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$1057_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$1057_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not enough liquidity\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Index can't be less then 0\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Send Some Meme\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send More ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Send more MEME\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send more ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Stacking Rate not met\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send Some ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"You don't have enough meme\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"Sorry Currently this contract do\")\n        mstore(add(headStart, 96), \"esn't have Meme to return, Check\")\n        mstore(add(headStart, 128), \" back Soon!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Sorry Currently this contract do\")\n        mstore(add(headStart, 96), \"esn't have Eth to return, Check \")\n        mstore(add(headStart, 128), \"back Soon!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061011f5760003560e01c8063771a3a1d116100a0578063d96a094a11610064578063d96a094a146102e2578063dc9031c4146102f5578063e4849b3214610308578063e8bca8b814610328578063f2fde38b1461034a57600080fd5b8063771a3a1d146102555780638456cb591461026b5780638da5cb5b146102805780639c74f05d146102b6578063d3b5dc3b146102cc57600080fd5b80632ad9d559116100e75780632ad9d559146101bb5780633f4ba83a146101e85780635c572ed0146101fd5780635c975abb1461021d578063715018a61461024057600080fd5b80631a753fed146101245780631b82c27f14610157578063200061df1461016d57806328726bda1461018f57806329809703146101a5575b600080fd5b34801561013057600080fd5b5061014461013f3660046115f4565b61036a565b6040519081526020015b60405180910390f35b34801561016357600080fd5b5061014460055481565b34801561017957600080fd5b5061018d6101883660046115f4565b61047c565b005b34801561019b57600080fd5b5061014460075481565b3480156101b157600080fd5b5061014460065481565b3480156101c757600080fd5b506101446101d63660046115f4565b60036020526000908152604090205481565b3480156101f457600080fd5b5061018d610488565b34801561020957600080fd5b506101446102183660046115f4565b61049a565b34801561022957600080fd5b5060005460ff16604051901515815260200161014e565b34801561024c57600080fd5b5061018d61059c565b34801561026157600080fd5b5061014460095481565b34801561027757600080fd5b5061018d6105ae565b34801561028c57600080fd5b5060005461010090046001600160a01b03166040516001600160a01b03909116815260200161014e565b3480156102c257600080fd5b5061014460045481565b3480156102d857600080fd5b5061014460085481565b61018d6102f03660046115f4565b6105be565b61018d6103033660046115f4565b6107bc565b34801561031457600080fd5b5061018d6103233660046115f4565b6108a9565b34801561033457600080fd5b5061033d610b15565b60405161014e919061160d565b34801561035657600080fd5b5061018d610365366004611666565b610b9d565b600080600554116103b95760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064015b60405180910390fd5b6000806006546000036103e7578360016005546103d691906116ac565b6103e091906116ce565b9050610405565b836006546005546103f891906116ac565b61040291906116ce565b90505b8060000361042357600160055461041c91906116ac565b9150610434565b8060055461043191906116ac565b91505b60006006548361044491906116ce565b905060006008546009548361045991906116e7565b61046391906116ac565b9050600061047182846116ce565b979650505050505050565b61048581610c13565b50565b610490610f6e565b610498610fce565b565b600080600554116104e45760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064016103b0565b6000806007546000036105125783600160055461050191906116ac565b61050b91906116ce565b9150610530565b8360075460055461052391906116ac565b61052d91906116ce565b91505b8160000361054e57600160055461054791906116ac565b905061055f565b8160055461055c91906116ac565b90505b60006007548261056f91906116ce565b905060006008546009548361058491906116e7565b61058e91906116ac565b9050600061047182846116fe565b6105a4610f6e565b6104986000611020565b6105b6610f6e565b610498611079565b600081116105ff5760405162461bcd60e51b815260206004820152600e60248201526d53656e6420536f6d65204d656d6560901b60448201526064016103b0565b600061060a8261049a565b90503481111561064c5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc8409adee4ca408aa89609b1b60448201526064016103b0565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190611711565b50336108fc6106d083346116ce565b6040518115909202916000818181858888f193505050501580156106f8573d6000803e3d6000fd5b5060085460095461070990826116fe565b61071390846116e7565b61071d91906116ac565b6003600061072e62015180426116ac565b8152602001908152602001600020600082825461074b91906116fe565b92505081905550816006600082825461076491906116ce565b909155505060065460055461077991906116ac565b600755604080518381526020810183905233917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed91015b60405180910390a25050565b600081116107fd5760405162461bcd60e51b815260206004820152600e60248201526d53656e64206d6f7265204d454d4560901b60448201526064016103b0565b6000341161083d5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840dadee4ca408aa89609b1b60448201526064016103b0565b806008543461084c91906116e7565b61085691906116ac565b600454111561089f5760405162461bcd60e51b815260206004820152601560248201527414dd1858dada5b99c814985d19481b9bdd081b595d605a1b60448201526064016103b0565b61048581346110b6565b600081116108e95760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840a6dedaca408aa89609b1b60448201526064016103b0565b60006108f48261036a565b6001546040516370a0823160e01b81523360048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa15801561093d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109619190611733565b8111156109b05760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f6e2774206861766520656e6f756768206d656d6500000000000060448201526064016103b0565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611711565b50604051339083156108fc029084906000818181858888f19350505050158015610a59573d6000803e3d6000fd5b50600854600954610a6a90826116fe565b610a7490836116e7565b610a7e91906116ac565b60036000610a8f62015180426116ac565b81526020019081526020016000206000828254610aac91906116fe565b925050819055508160076000828254610ac591906116ce565b9091555050600754600554610ada91906116ac565b600655604080518281526020810184905233917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a91016107b0565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610b945783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610b44565b50505050905090565b610ba5610f6e565b6001600160a01b038116610c0a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b0565b61048581611020565b336000908152600260205260408120805483908110610c3457610c3461174c565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090506000610c7761121e565b8251602084015191925090600090610c909084906116fe565b6001546040516370a0823160e01b815230600482015291925083916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d019190611733565b1015610d895760405162461bcd60e51b815260206004820152604b60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b60648201526a206261636b20536f6f6e2160a81b608482015260a4016103b0565b80471015610e125760405162461bcd60e51b815260206004820152604a60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e277420686176652045746820746f2072657475726e2c20436865636b206064820152696261636b20536f6f6e2160b01b608482015260a4016103b0565b8160066000828254610e2491906116ce565b925050819055508060076000828254610e3d91906116ce565b909155505060015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb79190611711565b50604051339082156108fc029083906000818181858888f19350505050158015610ee5573d6000803e3d6000fd5b50600654600003610efa576000600455610f1b565b600654600854600754610f0d91906116e7565b610f1791906116ac565b6004555b610f24856113e8565b610f2c611550565b604080518381526020810183905233917fbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4910160405180910390a25050505050565b6000546001600160a01b036101009091041633146104985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b0565b610fd6611565565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6110816115ae565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110033390565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561110d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111319190611711565b50816006600082825461114491906116fe565b92505081905550806007600082825461115d91906116fe565b9091555050604080516060810182528381526020808201848152428385019081523360009081526002808552958120805460018181018355918352949091208551600390950201938455915191830191909155519201919091556006546008546007546111ca91906116e7565b6111d491906116ac565b6004556111df611550565b6040805184815234602082015233917f5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6910160405180910390a2505050565b6000808060038161123262015180426116ac565b81526020019081526020016000205411156113e35733600090815260026020526040812080549091805b828110156112e15760008482815481106112785761127861174c565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090508060400151426112c191906116ce565b6112cb90846116fe565b92505080806112d990611762565b91505061125c565b5060005b828110156113de5760008482815481106113015761130161174c565b600091825260208083206040805160608101825260039094029091018054808552600182015493850193909352600201549083015260065460085492945091611349916116e7565b61135391906116ac565b9050600082604001514261136791906116ce565b9050600061137586836116ac565b600554909150816003600061138d62015180426116ac565b815260200190815260200160002054856113a791906116e7565b6113b191906116e7565b6113bb91906116ac565b6113c5908a6116fe565b98505050505080806113d690611762565b9150506112e5565b505050505b919050565b33600090815260026020526040902054811061143c5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016103b0565b805b3360009081526002602052604090205461145a906001906116ce565b8110156115095733600090815260026020526040902061147b8260016116fe565b8154811061148b5761148b61174c565b906000526020600020906003020160026000336001600160a01b03166001600160a01b0316815260200190815260200160002082815481106114cf576114cf61174c565b600091825260209091208254600390920201908155600180830154908201556002918201549101558061150181611762565b91505061143e565b503360009081526002602052604090208054806115285761152861177b565b6000828152602081206003600019909301928302018181556001810182905560020155905550565b60075460065461156091906116e7565b600555565b60005460ff166104985760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103b0565b60005460ff16156104985760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103b0565b60006020828403121561160657600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015611659578151805185528681015187860152850151858501526060909301929085019060010161162a565b5091979650505050505050565b60006020828403121561167857600080fd5b81356001600160a01b038116811461168f57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000826116c957634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156116e1576116e1611696565b92915050565b80820281158282048414176116e1576116e1611696565b808201808211156116e1576116e1611696565b60006020828403121561172357600080fd5b8151801515811461168f57600080fd5b60006020828403121561174557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161177457611774611696565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ce58bcc8980097a92633e41d16c08fb6b2e7262fdb42bb9bf6f114125554963e64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771A3A1D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD96A094A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xDC9031C4 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE8BCA8B8 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x9C74F05D EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xD3B5DC3B EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AD9D559 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2AD9D559 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x5C572ED0 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A753FED EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x1B82C27F EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x200061DF EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x28726BDA EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x29809703 EQ PUSH2 0x1A5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x488 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x18D PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x3E7 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH2 0x405 JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x423 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP2 POP PUSH2 0x434 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x471 DUP3 DUP5 PUSH2 0x16CE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0xC13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x490 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x498 PUSH2 0xFCE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x0 SUB PUSH2 0x512 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP PUSH2 0x530 JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x54E JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH2 0x55F JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x471 DUP3 DUP5 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x498 PUSH1 0x0 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x5B6 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x498 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A DUP3 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP CALLER PUSH2 0x8FC PUSH2 0x6D0 DUP4 CALLVALUE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x709 SWAP1 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x713 SWAP1 DUP5 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x72E PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E64206D6F7265204D454D45 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840DADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD1858DADA5B99C814985D19481B9BDD081B595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x485 DUP2 CALLVALUE PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 DUP3 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0xA6A SWAP1 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0xA74 SWAP1 DUP4 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0xA8F PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD PUSH2 0x7B0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB94 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB44 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x1020 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xC34 JUMPI PUSH2 0xC34 PUSH2 0x174C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xC77 PUSH2 0x121E JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC90 SWAP1 DUP5 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST LT ISZERO PUSH2 0xD89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E27742068617665204D656D6520746F2072657475726E2C20436865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x206261636B20536F6F6E21 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E277420686176652045746820746F2072657475726E2C20436865636B20 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x6261636B20536F6F6E21 PUSH1 0xB0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE3D SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0xEFA JUMPI PUSH1 0x0 PUSH1 0x4 SSTORE PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF0D SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0xF24 DUP6 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xF2C PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0xFD6 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1081 PUSH2 0x15AE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1003 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP6 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH1 0x3 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x11CA SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x11DF PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x3 DUP2 PUSH2 0x1232 PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x13E3 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1278 JUMPI PUSH2 0x1278 PUSH2 0x174C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x12C1 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x12CB SWAP1 DUP5 PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x12D9 SWAP1 PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1301 JUMPI PUSH2 0x1301 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD SWAP3 SWAP5 POP SWAP2 PUSH2 0x1349 SWAP2 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x1353 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1375 DUP7 DUP4 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x138D PUSH3 0x15180 TIMESTAMP PUSH2 0x16AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x13B1 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x13C5 SWAP1 DUP11 PUSH2 0x16FE JUMP JUMPDEST SWAP9 POP POP POP POP POP DUP1 DUP1 PUSH2 0x13D6 SWAP1 PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12E5 JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x143C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x145A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16CE JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1509 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x147B DUP3 PUSH1 0x1 PUSH2 0x16FE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x148B JUMPI PUSH2 0x148B PUSH2 0x174C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14CF JUMPI PUSH2 0x14CF PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x1501 DUP2 PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x143E JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1528 JUMPI PUSH2 0x1528 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x3 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x1560 SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1659 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x162A JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x168F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x16E1 JUMPI PUSH2 0x16E1 PUSH2 0x1696 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x168F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1774 JUMPI PUSH2 0x1774 PUSH2 0x1696 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PC 0xBC 0xC8 SWAP9 STOP SWAP8 0xA9 0x26 CALLER 0xE4 SAR AND 0xC0 DUP16 0xB6 0xB2 0xE7 0x26 0x2F 0xDB TIMESTAMP 0xBB SWAP12 0xF6 CALL EQ SLT SSTORE SLOAD SWAP7 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "24286:7451:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29506:639;;;;;;;;;;-1:-1:-1;29506:639:0;;;;;:::i;:::-;;:::i;:::-;;;345:25:1;;;333:2;318:18;29506:639:0;;;;;;;;24946:17;;;;;;;;;;;;;;;;25860:130;;;;;;;;;;-1:-1:-1;25860:130:0;;;;;:::i;:::-;;:::i;:::-;;24992:17;;;;;;;;;;;;;;;;24969;;;;;;;;;;;;;;;;24862:43;;;;;;;;;;-1:-1:-1;24862:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;25277:63;;;;;;;;;;;;;:::i;28865:635::-;;;;;;;;;;-1:-1:-1;28865:635:0;;;;;:::i;:::-;;:::i;22654:84::-;;;;;;;;;;-1:-1:-1;22701:4:0;22724:7;;;22654:84;;546:14:1;;539:22;521:41;;509:2;494:18;22654:84:0;381:187:1;20252:101:0;;;;;;;;;;;;;:::i;25055:45::-;;;;;;;;;;;;;;;;25212:59;;;;;;;;;;;;;:::i;19622:85::-;;;;;;;;;;-1:-1:-1;19668:7:0;19694:6;;;;-1:-1:-1;;;;;19694:6:0;19622:85;;-1:-1:-1;;;;;737:32:1;;;719:51;;707:2;692:18;19622:85:0;573:203:1;24912:27:0;;;;;;;;;;;;;;;;25016:32;;;;;;;;;;;;;;;;30151:564;;;;;;:::i;:::-;;:::i;25524:330::-;;;;;;:::i;:::-;;:::i;30721:581::-;;;;;;;;;;-1:-1:-1;30721:581:0;;;;;:::i;:::-;;:::i;25410:108::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;20502:198::-;;;;;;;;;;-1:-1:-1;20502:198:0;;;;;:::i;:::-;;:::i;29506:639::-;29568:7;29600:1;29595:2;;:6;29587:39;;;;-1:-1:-1;;;29587:39:0;;2132:2:1;29587:39:0;;;2114:21:1;2171:2;2151:18;;;2144:30;-1:-1:-1;;;2190:18:1;;;2183:50;2250:18;;29587:39:0;;;;;;;;;29636:10;29660;29688:2;;29694:1;29688:7;29684:118;;29725:10;29721:1;29716:2;;:6;;;;:::i;:::-;:19;;;;:::i;:::-;29711:24;;29684:118;;;29781:10;29776:2;;29771;;:7;;;;:::i;:::-;:20;;;;:::i;:::-;29766:25;;29684:118;29815:2;29821:1;29815:7;29811:92;;29848:1;29843:2;;:6;;;;:::i;:::-;29838:11;;29811:92;;;29890:2;29885;;:7;;;;:::i;:::-;29880:12;;29811:92;29912:30;29950:2;;29945;:7;;;;:::i;:::-;29912:40;;29962:16;30018:9;;30007:7;;29982:22;:32;;;;:::i;:::-;29981:46;;;;:::i;:::-;29962:65;-1:-1:-1;30038:27:0;30068:33;29962:65;30068:22;:33;:::i;:::-;30038:63;29506:639;-1:-1:-1;;;;;;;29506:639:0:o;25860:130::-;25968:15;25977:5;25968:8;:15::i;:::-;25860:130;:::o;25277:63::-;19515:13;:11;:13::i;:::-;25323:10:::1;:8;:10::i;:::-;25277:63::o:0;28865:635::-;28929:7;28961:1;28956:2;;:6;28948:39;;;;-1:-1:-1;;;28948:39:0;;2132:2:1;28948:39:0;;;2114:21:1;2171:2;2151:18;;;2144:30;-1:-1:-1;;;2190:18:1;;;2183:50;2250:18;;28948:39:0;1930:344:1;28948:39:0;28997:10;29021;29049:2;;29055:1;29049:7;29045:120;;29086:11;29082:1;29077:2;;:6;;;;:::i;:::-;:20;;;;:::i;:::-;29072:25;;29045:120;;;29143:11;29138:2;;29133;;:7;;;;:::i;:::-;:21;;;;:::i;:::-;29128:26;;29045:120;29178:2;29184:1;29178:7;29174:92;;29211:1;29206:2;;:6;;;;:::i;:::-;29201:11;;29174:92;;;29253:2;29248;;:7;;;;:::i;:::-;29243:12;;29174:92;29275:29;29312:2;;29307;:7;;;;:::i;:::-;29275:39;;29324:15;29378:9;;29367:7;;29343:21;:31;;;;:::i;:::-;29342:45;;;;:::i;:::-;29324:63;-1:-1:-1;29398:26:0;29427:31;29324:63;29427:21;:31;:::i;20252:101::-;19515:13;:11;:13::i;:::-;20316:30:::1;20343:1;20316:18;:30::i;25212:59::-:0;19515:13;:11;:13::i;:::-;25256:8:::1;:6;:8::i;30151:564::-:0;30232:1;30218:11;:15;30210:42;;;;-1:-1:-1;;;30210:42:0;;3626:2:1;30210:42:0;;;3608:21:1;3665:2;3645:18;;;3638:30;-1:-1:-1;;;3684:18:1;;;3677:44;3738:18;;30210:42:0;3424:338:1;30210:42:0;30262:18;30283:25;30296:11;30283:12;:25::i;:::-;30262:46;;30340:9;30326:10;:23;;30318:49;;;;-1:-1:-1;;;30318:49:0;;3969:2:1;30318:49:0;;;3951:21:1;4008:2;3988:18;;;3981:30;-1:-1:-1;;;4027:18:1;;;4020:43;4080:18;;30318:49:0;3767:337:1;30318:49:0;30378:4;;:38;;-1:-1:-1;;;30378:38:0;;30392:10;30378:38;;;4283:51:1;4350:18;;;4343:34;;;-1:-1:-1;;;;;30378:4:0;;;;:13;;4256:18:1;;30378:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;30434:10:0;30426:52;30455:22;30467:10;30455:9;:22;:::i;:::-;30426:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30591:9:0;;30567:7;;30555:19;;30591:9;30555:19;:::i;:::-;30540:35;;:11;:35;:::i;:::-;30539:61;;;;:::i;:::-;30489:8;:34;30498:24;30516:6;30498:15;:24;:::i;:::-;30489:34;;;;;;;;;;;;:111;;;;;;;:::i;:::-;;;;;;;;30617:11;30611:2;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;30649:2:0;;30644;;:7;;30649:2;30644:7;:::i;:::-;30638:2;:14;30668:40;;;4844:25:1;;;4900:2;4885:18;;4878:34;;;30672:10:0;;30668:40;;4817:18:1;30668:40:0;;;;;;;;30200:515;30151:564;:::o;25524:330::-;25607:1;25593:11;:15;25585:42;;;;-1:-1:-1;;;25585:42:0;;5125:2:1;25585:42:0;;;5107:21:1;5164:2;5144:18;;;5137:30;-1:-1:-1;;;5183:18:1;;;5176:44;5237:18;;25585:42:0;4923:338:1;25585:42:0;25657:1;25645:9;:13;25637:39;;;;-1:-1:-1;;;25637:39:0;;5468:2:1;25637:39:0;;;5450:21:1;5507:2;5487:18;;;5480:30;-1:-1:-1;;;5526:18:1;;;5519:43;5579:18;;25637:39:0;5266:337:1;25637:39:0;25749:11;25736:9;;25724;:21;;;;:::i;:::-;25723:37;;;;:::i;:::-;25707:12;;:53;;25686:121;;;;-1:-1:-1;;;25686:121:0;;5810:2:1;25686:121:0;;;5792:21:1;5849:2;5829:18;;;5822:30;-1:-1:-1;;;5868:18:1;;;5861:51;5929:18;;25686:121:0;5608:345:1;25686:121:0;25817:30;25824:11;25837:9;25817:6;:30::i;30721:581::-;30793:1;30780:10;:14;30772:40;;;;-1:-1:-1;;;30772:40:0;;6160:2:1;30772:40:0;;;6142:21:1;6199:2;6179:18;;;6172:30;-1:-1:-1;;;6218:18:1;;;6211:43;6271:18;;30772:40:0;5958:337:1;30772:40:0;30822:17;30842:23;30854:10;30842:11;:23::i;:::-;30897:4;;:26;;-1:-1:-1;;;30897:26:0;;30912:10;30897:26;;;719:51:1;30822:43:0;;-1:-1:-1;;;;;;30897:4:0;;:14;;692:18:1;;30897:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30884:9;:39;;30876:78;;;;-1:-1:-1;;;30876:78:0;;6691:2:1;30876:78:0;;;6673:21:1;6730:2;6710:18;;;6703:30;6769:28;6749:18;;;6742:56;6815:18;;30876:78:0;6489:350:1;30876:78:0;30964:4;;:55;;-1:-1:-1;;;30964:55:0;;30982:10;30964:55;;;7084:34:1;31002:4:0;7134:18:1;;;7127:43;7186:18;;;7179:34;;;-1:-1:-1;;;;;30964:4:0;;;;:17;;7019:18:1;;30964:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;31029:40:0;;31037:10;;31029:40;;;;;31058:10;;31029:40;;;;31058:10;31037;31029:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31180:9:0;;31156:7;;31144:19;;31180:9;31144:19;:::i;:::-;31131:33;;:9;:33;:::i;:::-;31130:59;;;;:::i;:::-;31080:8;:34;31089:24;31107:6;31089:15;:24;:::i;:::-;31080:34;;;;;;;;;;;;:109;;;;;;;:::i;:::-;;;;;;;;31206:10;31200:2;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;;31237:2:0;;31232;;:7;;31237:2;31232:7;:::i;:::-;31226:2;:14;31256:39;;;4844:25:1;;;4900:2;4885:18;;4878:34;;;31261:10:0;;31256:39;;4817:18:1;31256:39:0;4670:248:1;25410:108:0;25500:10;25492:19;;;;:7;:19;;;;;;;;25485:26;;;;;;;;;;;;;;;;;25452:21;;25485:26;;25492:19;;25485:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25410:108;:::o;20502:198::-;19515:13;:11;:13::i;:::-;-1:-1:-1;;;;;20590:22:0;::::1;20582:73;;;::::0;-1:-1:-1;;;20582:73:0;;7426:2:1;20582:73:0::1;::::0;::::1;7408:21:1::0;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:1;;;7548:36;7601:19;;20582:73:0::1;7224:402:1::0;20582:73:0::1;20665:28;20684:8;20665:18;:28::i;26495:1012::-:0;26580:10;26547:22;26572:19;;;:7;:19;;;;;:26;;26592:5;;26572:26;;;;;;:::i;:::-;;;;;;;;;;;26547:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26608:11;26622:16;:14;:16::i;:::-;26674:14;;26722:13;;;;26608:30;;-1:-1:-1;26674:14:0;26649:22;;26722:19;;26608:30;;26722:19;:::i;:::-;26773:4;;:29;;-1:-1:-1;;;26773:29:0;;26796:4;26773:29;;;719:51:1;26698:43:0;;-1:-1:-1;26806:14:0;;-1:-1:-1;;;;;26773:4:0;;;;:14;;692:18:1;;26773:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;26752:169;;;;-1:-1:-1;;;26752:169:0;;7965:2:1;26752:169:0;;;7947:21:1;8004:2;7984:18;;;7977:30;8043:34;8023:18;;;8016:62;8114:34;8094:18;;;8087:62;-1:-1:-1;;;8165:19:1;;;8158:42;8217:19;;26752:169:0;7763:479:1;26752:169:0;26977:13;26952:21;:38;;26931:159;;;;-1:-1:-1;;;26931:159:0;;8449:2:1;26931:159:0;;;8431:21:1;8488:2;8468:18;;;8461:30;8527:34;8507:18;;;8500:62;8598:34;8578:18;;;8571:62;-1:-1:-1;;;8649:19:1;;;8642:41;8700:19;;26931:159:0;8247:478:1;26931:159:0;27107:14;27101:2;;:20;;;;;;;:::i;:::-;;;;;;;;27137:13;27131:2;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;27161:4:0;;:41;;-1:-1:-1;;;27161:41:0;;27175:10;27161:41;;;4283:51:1;4350:18;;;4343:34;;;-1:-1:-1;;;;;27161:4:0;;;;:13;;4256:18:1;;27161:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27212:43:0;;27220:10;;27212:43;;;;;27241:13;;27212:43;;;;27241:13;27220:10;27212:43;;;;;;;;;;;;;;;;;;;;;27270:2;;27276:1;27270:7;27266:121;;27308:1;27293:12;:16;27266:121;;;27374:2;;27361:9;;27356:2;;:14;;;;:::i;:::-;27355:21;;;;:::i;:::-;27340:12;:36;27266:121;27397:17;27408:5;27397:10;:17::i;:::-;27425:10;:8;:10::i;:::-;27450:50;;;4844:25:1;;;4900:2;4885:18;;4878:34;;;27458:10:0;;27450:50;;4817:18:1;27450:50:0;;;;;;;26537:970;;;;26495:1012;:::o;19780:130::-;19668:7;19694:6;-1:-1:-1;;;;;19694:6:0;;;;;4240:10;19843:23;19835:68;;;;-1:-1:-1;;;19835:68:0;;8932:2:1;19835:68:0;;;8914:21:1;;;8951:18;;;8944:30;9010:34;8990:18;;;8983:62;9062:18;;19835:68:0;8730:356:1;23472:117:0;22525:16;:14;:16::i;:::-;23540:5:::1;23530:15:::0;;-1:-1:-1;;23530:15:0::1;::::0;;23560:22:::1;4240:10:::0;23569:12:::1;23560:22;::::0;-1:-1:-1;;;;;737:32:1;;;719:51;;707:2;692:18;23560:22:0::1;;;;;;;23472:117::o:0;20854:187::-;20927:16;20946:6;;-1:-1:-1;;;;;20962:17:0;;;20946:6;20962:17;;;-1:-1:-1;;;;;;20962:17:0;;;;;20994:40;;20946:6;;;;;;;20962:17;;20946:6;;20994:40;;;20917:124;20854:187;:::o;23225:115::-;22278:19;:17;:19::i;:::-;23284:7:::1;:14:::0;;-1:-1:-1;;23284:14:0::1;23294:4;23284:14;::::0;;23313:20:::1;23320:12;4240:10:::0;;4161:96;25996:493;26072:4;;:57;;-1:-1:-1;;;26072:57:0;;26090:10;26072:57;;;7084:34:1;26110:4:0;7134:18:1;;;7127:43;7186:18;;;7179:34;;;-1:-1:-1;;;;;26072:4:0;;;;:17;;7019:18:1;;26072:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;26145:11;26139:2;;:17;;;;;;;:::i;:::-;;;;;;;;26172:10;26166:2;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;;26218:100:0;;;;;;;;;;;;;;;;;;26293:15;26218:100;;;;;;26336:10;26193:22;26328:19;;;:7;:19;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26402:2;;26389:9;;26384:2;;:14;;26389:9;26384:14;:::i;:::-;26383:21;;;;:::i;:::-;26367:12;:38;26416:10;:8;:10::i;:::-;26441:41;;;4844:25:1;;;26472:9:0;4900:2:1;4885:18;;4878:34;26447:10:0;;26441:41;;4817:18:1;26441:41:0;;;;;;;26062:427;25996:493;;:::o;27831:1028::-;27880:7;;;27933:8;27880:7;27942:24;27960:6;27942:15;:24;:::i;:::-;27933:34;;;;;;;;;;;;:38;27929:899;;;28027:10;27987:29;28019:19;;;:7;:19;;;;;28072:13;;28019:19;;27987:29;28139:170;28163:9;28159:1;:13;28139:170;;;28197:22;28222:6;28229:1;28222:9;;;;;;;;:::i;:::-;;;;;;;;;;;28197:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28286:2;:7;;;28268:15;:25;;;;:::i;:::-;28249:45;;;;:::i;:::-;;;28179:130;28174:3;;;;;:::i;:::-;;;;28139:170;;;;28327:9;28322:496;28346:9;28342:1;:13;28322:496;;;28380:22;28405:6;28412:1;28405:9;;;;;;;;:::i;:::-;;;;;;;;;28380:34;;;;;;;;28405:9;;;;;;;28380:34;;;;;;;;;;;;;;;;;;;;;;;28484:2;;28471:9;;28380:34;;-1:-1:-1;28484:2:0;28454:26;;;:::i;:::-;28453:33;;;;:::i;:::-;28432:55;;28505:17;28544:2;:7;;;28526:15;:25;;;;:::i;:::-;28505:47;-1:-1:-1;28570:19:0;28592:26;28604:14;28505:47;28592:26;:::i;:::-;28801:2;;28570:48;;-1:-1:-1;28570:48:0;28705:8;:34;28714:24;28732:6;28714:15;:24;:::i;:::-;28705:34;;;;;;;;;;;;28669:9;:70;;;;:::i;:::-;:108;;;;:::i;:::-;28668:135;;;;:::i;:::-;28636:167;;;;:::i;:::-;;;28362:456;;;;28357:3;;;;;:::i;:::-;;;;28322:496;;;;27973:855;;;27929:899;28844:8;27831:1028;-1:-1:-1;27831:1028:0:o;27513:312::-;27591:10;27583:19;;;;:7;:19;;;;;:26;27575:34;;27567:66;;;;-1:-1:-1;;;27567:66:0;;9433:2:1;27567:66:0;;;9415:21:1;9472:2;9452:18;;;9445:30;-1:-1:-1;;;9491:18:1;;;9484:49;9550:18;;27567:66:0;9231:343:1;27567:66:0;27660:5;27643:141;27679:10;27671:19;;;;:7;:19;;;;;:26;:30;;27700:1;;27671:30;:::i;:::-;27667:1;:34;27643:141;;;27755:10;27747:19;;;;:7;:19;;;;;27767:5;:1;27771;27767:5;:::i;:::-;27747:26;;;;;;;;:::i;:::-;;;;;;;;;;;27722:7;:19;27730:10;-1:-1:-1;;;;;27722:19:0;-1:-1:-1;;;;;27722:19:0;;;;;;;;;;;;27742:1;27722:22;;;;;;;;:::i;:::-;;;;;;;;;:51;;:22;;;;;:51;;;;;;;;;;;;;;;;;;;;27703:3;;;;:::i;:::-;;;;27643:141;;;-1:-1:-1;27801:10:0;27793:19;;;;:7;:19;;;;;:25;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;27793:25:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27513:312:0:o;25346:58::-;25395:2;;25390;;:7;;;;:::i;:::-;25385:2;:12;25346:58::o;22984:106::-;22701:4;22724:7;;;23042:41;;;;-1:-1:-1;;;23042:41:0;;9913:2:1;23042:41:0;;;9895:21:1;9952:2;9932:18;;;9925:30;-1:-1:-1;;;9971:18:1;;;9964:50;10031:18;;23042:41:0;9711:344:1;22806:106:0;22701:4;22724:7;;;22875:9;22867:38;;;;-1:-1:-1;;;22867:38:0;;10262:2:1;22867:38:0;;;10244:21:1;10301:2;10281:18;;;10274:30;-1:-1:-1;;;10320:18:1;;;10313:46;10376:18;;22867:38:0;10060:340:1;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;781:853::-;1012:2;1064:21;;;1134:13;;1037:18;;;1156:22;;;983:4;;1012:2;1197;;1215:18;;;;1256:15;;;983:4;1299:309;1313:6;1310:1;1307:13;1299:309;;;1372:13;;1410:9;;1398:22;;1460:11;;;1454:18;1440:12;;;1433:40;1513:11;;1507:18;1493:12;;;1486:40;1555:4;1546:14;;;;1583:15;;;;1335:1;1328:9;1299:309;;;-1:-1:-1;1625:3:1;;781:853;-1:-1:-1;;;;;;;781:853:1:o;1639:286::-;1698:6;1751:2;1739:9;1730:7;1726:23;1722:32;1719:52;;;1767:1;1764;1757:12;1719:52;1793:23;;-1:-1:-1;;;;;1845:31:1;;1835:42;;1825:70;;1891:1;1888;1881:12;1825:70;1914:5;1639:286;-1:-1:-1;;;1639:286:1:o;2279:127::-;2340:10;2335:3;2331:20;2328:1;2321:31;2371:4;2368:1;2361:15;2395:4;2392:1;2385:15;2411:217;2451:1;2477;2467:132;;2521:10;2516:3;2512:20;2509:1;2502:31;2556:4;2553:1;2546:15;2584:4;2581:1;2574:15;2467:132;-1:-1:-1;2613:9:1;;2411:217::o;2633:128::-;2700:9;;;2721:11;;;2718:37;;;2735:18;;:::i;:::-;2633:128;;;;:::o;2766:168::-;2839:9;;;2870;;2887:15;;;2881:22;;2867:37;2857:71;;2908:18;;:::i;3294:125::-;3359:9;;;3380:10;;;3377:36;;;3393:18;;:::i;4388:277::-;4455:6;4508:2;4496:9;4487:7;4483:23;4479:32;4476:52;;;4524:1;4521;4514:12;4476:52;4556:9;4550:16;4609:5;4602:13;4595:21;4588:5;4585:32;4575:60;;4631:1;4628;4621:12;6300:184;6370:6;6423:2;6411:9;6402:7;6398:23;6394:32;6391:52;;;6439:1;6436;6429:12;6391:52;-1:-1:-1;6462:16:1;;6300:184;-1:-1:-1;6300:184:1:o;7631:127::-;7692:10;7687:3;7683:20;7680:1;7673:31;7723:4;7720:1;7713:15;7747:4;7744:1;7737:15;9091:135;9130:3;9151:17;;;9148:43;;9171:18;;:::i;:::-;-1:-1:-1;9218:1:1;9207:13;;9091:135::o;9579:127::-;9640:10;9635:3;9631:20;9628:1;9621:31;9671:4;9668:1;9661:15;9695:4;9692:1;9685:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1217400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_k()": "2330",
								"_x()": "2396",
								"_y()": "2374",
								"buy(uint256)": "infinite",
								"dailyTax(uint256)": "2450",
								"getETHPrice(uint256)": "infinite",
								"getMemePrice(uint256)": "infinite",
								"getStacks()": "infinite",
								"owner()": "2397",
								"pause()": "infinite",
								"paused()": "2381",
								"precision()": "2395",
								"renounceOwnership()": "infinite",
								"sell(uint256)": "infinite",
								"stack(uint256)": "infinite",
								"stackingRate()": "2373",
								"taxRate()": "2307",
								"transferOwnership(address)": "28444",
								"unpause()": "infinite",
								"unstack(uint256)": "infinite"
							},
							"internal": {
								"_distributeTax()": "infinite",
								"_removeArr(uint256)": "infinite",
								"_stack(uint256,uint256)": "infinite",
								"_unstack(uint256)": "infinite",
								"_updateK()": "26409"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24286,
									"end": 31737,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25043,
									"end": 25048,
									"name": "PUSH",
									"source": 0,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 25016,
									"end": 25048,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25016,
									"end": 25048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25098,
									"end": 25100,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 25085,
									"end": 25094,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25085,
									"end": 25094,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25081,
									"end": 25082,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25081,
									"end": 25094,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25081,
									"end": 25094,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25081,
									"end": 25094,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25081,
									"end": 25094,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25081,
									"end": 25094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25081,
									"end": 25094,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25081,
									"end": 25094,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25080,
									"end": 25100,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25080,
									"end": 25100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25100,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25080,
									"end": 25100,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25055,
									"end": 25100,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25055,
									"end": 25100,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25107,
									"end": 25206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25107,
									"end": 25206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22045,
									"end": 22050,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 4240,
									"end": 4250,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19375,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 19357,
									"end": 19389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19389,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 19357,
									"end": 19389,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25143,
									"end": 25160,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20854,
									"end": 21041,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 20854,
									"end": 21041,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20927,
									"end": 20943,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 20917,
									"end": 21041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20854,
									"end": 21041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20854,
									"end": 21041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 279,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 279,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 87,
									"end": 96,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 96,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 87,
									"end": 96,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 118,
									"end": 127,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 127,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 129,
									"end": 151,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 129,
									"end": 151,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 152,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 105,
									"end": 273,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 273,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 195,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 190,
									"end": 193,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 186,
									"end": 206,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 207,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 230,
									"end": 234,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 227,
									"end": 228,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 235,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 258,
									"end": 262,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 255,
									"end": 256,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 263,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 273,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 273,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 279,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 14,
									"end": 279,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 279,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 279,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 284,
									"end": 501,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 284,
									"end": 501,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 324,
									"end": 325,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 351,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 340,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 340,
									"end": 472,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 394,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 389,
									"end": 392,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 385,
									"end": 405,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 382,
									"end": 383,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 429,
									"end": 433,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 426,
									"end": 427,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 419,
									"end": 434,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 457,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 454,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 462,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 340,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 340,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 486,
									"end": 495,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 486,
									"end": 495,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 284,
									"end": 501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 506,
									"end": 796,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 506,
									"end": 796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 576,
									"end": 582,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 631,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 617,
									"end": 626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 608,
									"end": 615,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 604,
									"end": 627,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 600,
									"end": 632,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 597,
									"end": 649,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 597,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 597,
									"end": 649,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 645,
									"end": 646,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 642,
									"end": 643,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 635,
									"end": 647,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 597,
									"end": 649,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 597,
									"end": 649,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 671,
									"end": 687,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 671,
									"end": 687,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 716,
									"end": 747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 716,
									"end": 747,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 706,
									"end": 748,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 706,
									"end": 748,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 696,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 766,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 762,
									"end": 763,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 759,
									"end": 760,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 752,
									"end": 764,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 696,
									"end": 766,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 766,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 785,
									"end": 790,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 506,
									"end": 796,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 506,
									"end": 796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 506,
									"end": 796,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 506,
									"end": 796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24286,
									"end": 31737,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce58bcc8980097a92633e41d16c08fb6b2e7262fdb42bb9bf6f114125554963e64736f6c63430008130033",
									".code": [
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "771A3A1D"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "D96A094A"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "D96A094A"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "DC9031C4"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "E4849B32"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "E8BCA8B8"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "771A3A1D"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "9C74F05D"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "D3B5DC3B"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "2AD9D559"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "2AD9D559"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "5C572ED0"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "1A753FED"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "1B82C27F"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "200061DF"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "28726BDA"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "29809703"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 31737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29506,
											"end": 30145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29506,
											"end": 30145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24946,
											"end": 24963,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25860,
											"end": 25990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25860,
											"end": 25990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25009,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24969,
											"end": 24986,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24862,
											"end": 24905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25277,
											"end": 25340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28865,
											"end": 29500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28865,
											"end": 29500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22701,
											"end": 22705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 560,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 521,
											"end": 562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 381,
											"end": 568,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 20252,
											"end": 20353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25100,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25212,
											"end": 25271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19668,
											"end": 19675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 573,
											"end": 776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24912,
											"end": 24939,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25048,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30151,
											"end": 30715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30151,
											"end": 30715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25524,
											"end": 25854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25524,
											"end": 25854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30721,
											"end": 31302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30721,
											"end": 31302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 25410,
											"end": 25518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 25410,
											"end": 25518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20502,
											"end": 20700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20502,
											"end": 20700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29600,
											"end": 29601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29595,
											"end": 29597,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29595,
											"end": 29597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29595,
											"end": 29601,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2114,
											"end": 2135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F756768206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29587,
											"end": 29626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29636,
											"end": 29646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29660,
											"end": 29670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29688,
											"end": 29690,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29688,
											"end": 29690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29688,
											"end": 29695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29721,
											"end": 29722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29716,
											"end": 29718,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29716,
											"end": 29718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29716,
											"end": 29722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29716,
											"end": 29722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29722,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29716,
											"end": 29722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29716,
											"end": 29735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29716,
											"end": 29735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29735,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29716,
											"end": 29735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29711,
											"end": 29735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29711,
											"end": 29735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29781,
											"end": 29791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29778,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29776,
											"end": 29778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29773,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29771,
											"end": 29773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29771,
											"end": 29778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29771,
											"end": 29778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29778,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29771,
											"end": 29778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29771,
											"end": 29791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29771,
											"end": 29791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29791,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29771,
											"end": 29791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29766,
											"end": 29791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29766,
											"end": 29791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29684,
											"end": 29802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29815,
											"end": 29822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29848,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29843,
											"end": 29845,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29843,
											"end": 29845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29843,
											"end": 29849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 29849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29843,
											"end": 29849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 29849,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29843,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29838,
											"end": 29849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29838,
											"end": 29849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29890,
											"end": 29892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29887,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29885,
											"end": 29887,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29885,
											"end": 29892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29885,
											"end": 29892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29892,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29885,
											"end": 29892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29880,
											"end": 29892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29880,
											"end": 29892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29811,
											"end": 29903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29912,
											"end": 29942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29950,
											"end": 29952,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29950,
											"end": 29952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29945,
											"end": 29947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29945,
											"end": 29952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29945,
											"end": 29952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29945,
											"end": 29952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29945,
											"end": 29952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29945,
											"end": 29952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29945,
											"end": 29952,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29945,
											"end": 29952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29912,
											"end": 29952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29912,
											"end": 29952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29962,
											"end": 29978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30018,
											"end": 30027,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30018,
											"end": 30027,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30014,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30007,
											"end": 30014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29982,
											"end": 30004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29982,
											"end": 30014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29982,
											"end": 30014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29982,
											"end": 30014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29982,
											"end": 30014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29982,
											"end": 30014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29982,
											"end": 30014,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29982,
											"end": 30014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29981,
											"end": 30027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29981,
											"end": 30027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29981,
											"end": 30027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29981,
											"end": 30027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29981,
											"end": 30027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29981,
											"end": 30027,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29981,
											"end": 30027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29962,
											"end": 30027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30038,
											"end": 30065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30068,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29962,
											"end": 30027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30090,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 30068,
											"end": 30101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30101,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 30068,
											"end": 30101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30101,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30145,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29506,
											"end": 30145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25968,
											"end": 25983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 25977,
											"end": 25982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25968,
											"end": 25976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 25968,
											"end": 25983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25968,
											"end": 25983,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 25968,
											"end": 25983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25277,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25323,
											"end": 25333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25323,
											"end": 25331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25323,
											"end": 25333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25323,
											"end": 25333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25323,
											"end": 25333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28865,
											"end": 29500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 28936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28961,
											"end": 28962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28958,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28956,
											"end": 28958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28962,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2114,
											"end": 2135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F756768206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1930,
											"end": 2274,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 28948,
											"end": 28987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28997,
											"end": 29007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29021,
											"end": 29031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29049,
											"end": 29051,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29049,
											"end": 29051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29055,
											"end": 29056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29049,
											"end": 29056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29082,
											"end": 29083,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29077,
											"end": 29079,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29077,
											"end": 29079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29077,
											"end": 29083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29077,
											"end": 29083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29083,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29077,
											"end": 29083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29077,
											"end": 29097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29077,
											"end": 29097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29097,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29077,
											"end": 29097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29072,
											"end": 29097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29072,
											"end": 29097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29143,
											"end": 29154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29138,
											"end": 29140,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29138,
											"end": 29140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29135,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29133,
											"end": 29135,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29133,
											"end": 29140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29133,
											"end": 29140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29140,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29133,
											"end": 29140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29133,
											"end": 29154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29133,
											"end": 29154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29154,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29133,
											"end": 29154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29128,
											"end": 29154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29128,
											"end": 29154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29045,
											"end": 29165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29178,
											"end": 29180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29178,
											"end": 29185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29211,
											"end": 29212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29206,
											"end": 29208,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29206,
											"end": 29208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29206,
											"end": 29212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 29206,
											"end": 29212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29206,
											"end": 29212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29206,
											"end": 29212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29206,
											"end": 29212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29206,
											"end": 29212,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 29206,
											"end": 29212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29201,
											"end": 29212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29201,
											"end": 29212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29253,
											"end": 29255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29250,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29248,
											"end": 29250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29248,
											"end": 29255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29243,
											"end": 29255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29243,
											"end": 29255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29174,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29312,
											"end": 29314,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29312,
											"end": 29314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29307,
											"end": 29309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29307,
											"end": 29314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29307,
											"end": 29314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29307,
											"end": 29314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29307,
											"end": 29314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29307,
											"end": 29314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29307,
											"end": 29314,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29307,
											"end": 29314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29324,
											"end": 29339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29378,
											"end": 29387,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29378,
											"end": 29387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29367,
											"end": 29374,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29367,
											"end": 29374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29343,
											"end": 29364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29343,
											"end": 29374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29343,
											"end": 29374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29343,
											"end": 29374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29343,
											"end": 29374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29343,
											"end": 29374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29343,
											"end": 29374,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29343,
											"end": 29374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29342,
											"end": 29387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29342,
											"end": 29387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29342,
											"end": 29387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29342,
											"end": 29387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29342,
											"end": 29387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29342,
											"end": 29387,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29342,
											"end": 29387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29324,
											"end": 29387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29398,
											"end": 29424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29427,
											"end": 29458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29324,
											"end": 29387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29427,
											"end": 29458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20316,
											"end": 20346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 20343,
											"end": 20344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20316,
											"end": 20334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 20316,
											"end": 20346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25212,
											"end": 25271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25256,
											"end": 25264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25256,
											"end": 25262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 25256,
											"end": 25264,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30218,
											"end": 30229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30218,
											"end": 30233,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53656E6420536F6D65204D656D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3738,
											"end": 3756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3424,
											"end": 3762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30210,
											"end": 30252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30262,
											"end": 30280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30283,
											"end": 30308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 30296,
											"end": 30307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30283,
											"end": 30295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30283,
											"end": 30308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30283,
											"end": 30308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 30283,
											"end": 30308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30262,
											"end": 30308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30262,
											"end": 30308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30340,
											"end": 30349,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30326,
											"end": 30336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30326,
											"end": 30349,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30326,
											"end": 30349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC8409ADEE4CA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3767,
											"end": 4104,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30318,
											"end": 30367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30382,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30378,
											"end": 30382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30402,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30378,
											"end": 30382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30391,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 30378,
											"end": 30391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 30378,
											"end": 30416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 30378,
											"end": 30416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30434,
											"end": 30444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 30455,
											"end": 30477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 30467,
											"end": 30477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30455,
											"end": 30464,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30455,
											"end": 30477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 30455,
											"end": 30477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30455,
											"end": 30477,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 30455,
											"end": 30477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 30426,
											"end": 30478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30591,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30591,
											"end": 30600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30567,
											"end": 30574,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30567,
											"end": 30574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30555,
											"end": 30574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 30555,
											"end": 30574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30591,
											"end": 30600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30555,
											"end": 30574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 30555,
											"end": 30574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30555,
											"end": 30574,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 30555,
											"end": 30574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30540,
											"end": 30575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 30540,
											"end": 30575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30540,
											"end": 30551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30540,
											"end": 30575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 30540,
											"end": 30575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30540,
											"end": 30575,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 30540,
											"end": 30575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30539,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 30539,
											"end": 30600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30539,
											"end": 30600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30539,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 30539,
											"end": 30600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30539,
											"end": 30600,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 30539,
											"end": 30600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30497,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 30516,
											"end": 30522,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 30498,
											"end": 30513,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 30498,
											"end": 30522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 30489,
											"end": 30600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30489,
											"end": 30600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 30628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30613,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30611,
											"end": 30613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 30611,
											"end": 30628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30611,
											"end": 30628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30649,
											"end": 30651,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30649,
											"end": 30651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30644,
											"end": 30646,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30644,
											"end": 30646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30644,
											"end": 30651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 30644,
											"end": 30651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30649,
											"end": 30651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30644,
											"end": 30651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 30644,
											"end": 30651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30644,
											"end": 30651,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 30644,
											"end": 30651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30638,
											"end": 30640,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30638,
											"end": 30652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30672,
											"end": 30682,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30672,
											"end": 30682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "PUSH",
											"source": 0,
											"value": "1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30668,
											"end": 30708,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25524,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25593,
											"end": 25604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25593,
											"end": 25608,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53656E64206D6F7265204D454D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5201,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5183,
											"end": 5201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4923,
											"end": 5261,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 25585,
											"end": 25627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25657,
											"end": 25658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25645,
											"end": 25654,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25645,
											"end": 25658,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5450,
											"end": 5471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC840DADEE4CA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5266,
											"end": 5603,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 25637,
											"end": 25676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25749,
											"end": 25760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25736,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25736,
											"end": 25745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25733,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 25724,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25724,
											"end": 25745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 25724,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25723,
											"end": 25760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 25723,
											"end": 25760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25723,
											"end": 25760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25723,
											"end": 25760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25723,
											"end": 25760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25723,
											"end": 25760,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 25723,
											"end": 25760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25707,
											"end": 25719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25707,
											"end": 25719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25707,
											"end": 25760,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25707,
											"end": 25760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 5813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD1858DADA5B99C814985D19481B9BDD081B595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5929,
											"end": 5947,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5929,
											"end": 5947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5608,
											"end": 5953,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 25686,
											"end": 25807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25817,
											"end": 25847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 25824,
											"end": 25835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25837,
											"end": 25846,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25817,
											"end": 25823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 25817,
											"end": 25847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30721,
											"end": 31302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30780,
											"end": 30790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30780,
											"end": 30794,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6160,
											"end": 6162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC840A6DEDACA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5958,
											"end": 6295,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 30772,
											"end": 30812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30822,
											"end": 30839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30842,
											"end": 30865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 30854,
											"end": 30864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30842,
											"end": 30853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30842,
											"end": 30865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30842,
											"end": 30865,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 30842,
											"end": 30865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30901,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30897,
											"end": 30901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30912,
											"end": 30922,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30822,
											"end": 30865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30822,
											"end": 30865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30897,
											"end": 30901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30911,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30897,
											"end": 30911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 30897,
											"end": 30923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30897,
											"end": 30923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30884,
											"end": 30893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30884,
											"end": 30923,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30884,
											"end": 30923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206861766520656E6F756768206D656D65000000000000"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6489,
											"end": 6839,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 30876,
											"end": 30954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30964,
											"end": 30968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 30992,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31002,
											"end": 31006,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30964,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30981,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 30964,
											"end": 30981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 30964,
											"end": 31019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30964,
											"end": 31019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31037,
											"end": 31047,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31037,
											"end": 31047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31068,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31037,
											"end": 31047,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 31029,
											"end": 31069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31180,
											"end": 31189,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31180,
											"end": 31189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31163,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31156,
											"end": 31163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31144,
											"end": 31163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 31144,
											"end": 31163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31180,
											"end": 31189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31144,
											"end": 31163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 31144,
											"end": 31163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31144,
											"end": 31163,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 31144,
											"end": 31163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31131,
											"end": 31164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 31131,
											"end": 31164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31131,
											"end": 31140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31131,
											"end": 31164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31131,
											"end": 31164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31131,
											"end": 31164,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 31131,
											"end": 31164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31130,
											"end": 31189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 31130,
											"end": 31189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31130,
											"end": 31189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31130,
											"end": 31189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31130,
											"end": 31189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31130,
											"end": 31189,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 31130,
											"end": 31189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31088,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31089,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 31107,
											"end": 31113,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 31089,
											"end": 31104,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31089,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31089,
											"end": 31113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31089,
											"end": 31113,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 31089,
											"end": 31113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 31080,
											"end": 31189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31206,
											"end": 31216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31202,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31200,
											"end": 31202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31200,
											"end": 31216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31237,
											"end": 31239,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31237,
											"end": 31239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31234,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31232,
											"end": 31234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31232,
											"end": 31239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31232,
											"end": 31239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31239,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31232,
											"end": 31239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31226,
											"end": 31228,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31226,
											"end": 31240,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31256,
											"end": 31295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31261,
											"end": 31271,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31261,
											"end": 31271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31295,
											"name": "PUSH",
											"source": 0,
											"value": "ED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
										},
										{
											"begin": 31256,
											"end": 31295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31256,
											"end": 31295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4670,
											"end": 4918,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25510,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25499,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25473,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25452,
											"end": 25473,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25492,
											"end": 25511,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25485,
											"end": 25511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20590,
											"end": 20612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7426,
											"end": 7428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7467,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7620,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7601,
											"end": 7620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7224,
											"end": 7626,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20665,
											"end": 20693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20684,
											"end": 20692,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20665,
											"end": 20683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 20665,
											"end": 20693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26495,
											"end": 27507,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 26495,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26580,
											"end": 26590,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26579,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26591,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 26597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 26597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 26572,
											"end": 26598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26608,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26622,
											"end": 26638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 26622,
											"end": 26636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 26622,
											"end": 26638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26622,
											"end": 26638,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 26622,
											"end": 26638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26722,
											"end": 26735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26608,
											"end": 26638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26608,
											"end": 26638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26674,
											"end": 26688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26649,
											"end": 26671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26649,
											"end": 26671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 26722,
											"end": 26741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26608,
											"end": 26638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26608,
											"end": 26638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26722,
											"end": 26741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26741,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 26722,
											"end": 26741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26773,
											"end": 26777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26796,
											"end": 26800,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26698,
											"end": 26741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26741,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26806,
											"end": 26820,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26806,
											"end": 26820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26773,
											"end": 26777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26787,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26773,
											"end": 26787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26773,
											"end": 26802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 26773,
											"end": 26802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26820,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8006,
											"name": "PUSH",
											"source": 1,
											"value": "4B"
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 8007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8043,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "536F7272792043757272656E746C79207468697320636F6E747261637420646F"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8148,
											"name": "PUSH",
											"source": 1,
											"value": "65736E27742068617665204D656D6520746F2072657475726E2C20436865636B"
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206261636B20536F6F6E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8184,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8165,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 8217,
											"end": 8236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7763,
											"end": 8242,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 26752,
											"end": 26921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26977,
											"end": 26990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26952,
											"end": 26973,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 26952,
											"end": 26990,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26952,
											"end": 26990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8449,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8431,
											"end": 8452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8488,
											"end": 8490,
											"name": "PUSH",
											"source": 1,
											"value": "4A"
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8461,
											"end": 8491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8561,
											"name": "PUSH",
											"source": 1,
											"value": "536F7272792043757272656E746C79207468697320636F6E747261637420646F"
										},
										{
											"begin": 8507,
											"end": 8525,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8507,
											"end": 8525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8507,
											"end": 8525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8500,
											"end": 8562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8632,
											"name": "PUSH",
											"source": 1,
											"value": "65736E277420686176652045746820746F2072657475726E2C20436865636B20"
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6261636B20536F6F6E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8700,
											"end": 8719,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 8700,
											"end": 8719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8247,
											"end": 8725,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 26931,
											"end": 27090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27103,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27101,
											"end": 27103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27101,
											"end": 27121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27137,
											"end": 27150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27133,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27131,
											"end": 27133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27131,
											"end": 27150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27161,
											"end": 27165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27161,
											"end": 27165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27175,
											"end": 27185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27161,
											"end": 27165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27174,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 27161,
											"end": 27174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 27161,
											"end": 27202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 27161,
											"end": 27202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27254,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27230,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27270,
											"end": 27272,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27270,
											"end": 27272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27276,
											"end": 27277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27270,
											"end": 27277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27308,
											"end": 27309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27293,
											"end": 27305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27293,
											"end": 27309,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27374,
											"end": 27376,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27374,
											"end": 27376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27361,
											"end": 27370,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27361,
											"end": 27370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27358,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27356,
											"end": 27358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 27356,
											"end": 27370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27356,
											"end": 27370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27370,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 27356,
											"end": 27370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27355,
											"end": 27376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 27355,
											"end": 27376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27355,
											"end": 27376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27355,
											"end": 27376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27355,
											"end": 27376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27355,
											"end": 27376,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 27355,
											"end": 27376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27340,
											"end": 27352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27340,
											"end": 27376,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 27266,
											"end": 27387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27397,
											"end": 27414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 27408,
											"end": 27413,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27397,
											"end": 27407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 27397,
											"end": 27414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27397,
											"end": 27414,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 27397,
											"end": 27414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27425,
											"end": 27435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 27425,
											"end": 27433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 27425,
											"end": 27435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27425,
											"end": 27435,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 27425,
											"end": 27435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27458,
											"end": 27468,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27458,
											"end": 27468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "PUSH",
											"source": 0,
											"value": "BB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4"
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27500,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 26537,
											"end": 27507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26537,
											"end": 27507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26537,
											"end": 27507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26537,
											"end": 27507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26495,
											"end": 27507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26495,
											"end": 27507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19780,
											"end": 19910,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19780,
											"end": 19910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19668,
											"end": 19675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19843,
											"end": 19866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8914,
											"end": 8935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9044,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8730,
											"end": 9086,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23472,
											"end": 23589,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23472,
											"end": 23589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 22525,
											"end": 22539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 22525,
											"end": 22541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22541,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 22525,
											"end": 22541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23540,
											"end": 23545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23530,
											"end": 23545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23569,
											"end": 23581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 23569,
											"end": 23581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23560,
											"end": 23582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 23472,
											"end": 23589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 21041,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 20854,
											"end": 21041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20927,
											"end": 20943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20917,
											"end": 21041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 21041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 21041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23340,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 23225,
											"end": 23340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 22278,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 22278,
											"end": 22297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23284,
											"end": 23298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23294,
											"end": 23298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23284,
											"end": 23298,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23313,
											"end": 23333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 23320,
											"end": 23332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4257,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25996,
											"end": 26489,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 25996,
											"end": 26489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26072,
											"end": 26076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26100,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26110,
											"end": 26114,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7213,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26072,
											"end": 26076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26089,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 26072,
											"end": 26089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 26072,
											"end": 26129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26145,
											"end": 26156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26141,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26139,
											"end": 26141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26139,
											"end": 26156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26168,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26166,
											"end": 26168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26166,
											"end": 26182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26166,
											"end": 26182,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26293,
											"end": 26308,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26336,
											"end": 26346,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26335,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26356,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26404,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26402,
											"end": 26404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26389,
											"end": 26398,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26389,
											"end": 26398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26386,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26384,
											"end": 26386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 26384,
											"end": 26398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26389,
											"end": 26398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 26384,
											"end": 26398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26398,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 26384,
											"end": 26398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26383,
											"end": 26404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 26383,
											"end": 26404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26383,
											"end": 26404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26383,
											"end": 26404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 26383,
											"end": 26404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26383,
											"end": 26404,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 26383,
											"end": 26404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26367,
											"end": 26405,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26416,
											"end": 26426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 26416,
											"end": 26424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 26416,
											"end": 26426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26416,
											"end": 26426,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 26416,
											"end": 26426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26472,
											"end": 26481,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26447,
											"end": 26457,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26447,
											"end": 26457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "PUSH",
											"source": 0,
											"value": "5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6"
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26441,
											"end": 26482,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 26062,
											"end": 26489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25996,
											"end": 26489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25996,
											"end": 26489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25996,
											"end": 26489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27831,
											"end": 28859,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 27831,
											"end": 28859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27880,
											"end": 27887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27880,
											"end": 27887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27880,
											"end": 27887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27941,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27880,
											"end": 27887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 27960,
											"end": 27966,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 27942,
											"end": 27957,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27942,
											"end": 27966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27966,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 27942,
											"end": 27966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27971,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27929,
											"end": 28828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27929,
											"end": 28828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 27929,
											"end": 28828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28027,
											"end": 28037,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27987,
											"end": 28016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28026,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28072,
											"end": 28085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28072,
											"end": 28085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27987,
											"end": 28016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28163,
											"end": 28172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28159,
											"end": 28160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28159,
											"end": 28172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28222,
											"end": 28228,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28229,
											"end": 28230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 28222,
											"end": 28231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28286,
											"end": 28288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28286,
											"end": 28293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28286,
											"end": 28293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28286,
											"end": 28293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28283,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 28268,
											"end": 28293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28268,
											"end": 28293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28293,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 28268,
											"end": 28293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 28249,
											"end": 28294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28179,
											"end": 28309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 28174,
											"end": 28177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28174,
											"end": 28177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28327,
											"end": 28336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28346,
											"end": 28355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28342,
											"end": 28343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28342,
											"end": 28355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28405,
											"end": 28411,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28412,
											"end": 28413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 28405,
											"end": 28414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28405,
											"end": 28414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28484,
											"end": 28486,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28484,
											"end": 28486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 28480,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28471,
											"end": 28480,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28414,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28484,
											"end": 28486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28454,
											"end": 28480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 28454,
											"end": 28480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28454,
											"end": 28480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28454,
											"end": 28480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28454,
											"end": 28480,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 28454,
											"end": 28480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28453,
											"end": 28486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 28453,
											"end": 28486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28453,
											"end": 28486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28453,
											"end": 28486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28453,
											"end": 28486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28453,
											"end": 28486,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 28453,
											"end": 28486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28432,
											"end": 28487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28432,
											"end": 28487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28505,
											"end": 28522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28544,
											"end": 28546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28544,
											"end": 28551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28541,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 28526,
											"end": 28551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28526,
											"end": 28551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28551,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 28526,
											"end": 28551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28505,
											"end": 28552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28570,
											"end": 28589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28592,
											"end": 28618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 28604,
											"end": 28618,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28505,
											"end": 28552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28592,
											"end": 28618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28592,
											"end": 28618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28592,
											"end": 28618,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 28592,
											"end": 28618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28801,
											"end": 28803,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28801,
											"end": 28803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28570,
											"end": 28618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28570,
											"end": 28618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28570,
											"end": 28618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28713,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28714,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 28732,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 28714,
											"end": 28729,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 28714,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28714,
											"end": 28738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28714,
											"end": 28738,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 28714,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28678,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 28669,
											"end": 28739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28669,
											"end": 28739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28739,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 28669,
											"end": 28739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 28669,
											"end": 28777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28669,
											"end": 28777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28777,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 28669,
											"end": 28777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 28668,
											"end": 28803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28668,
											"end": 28803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28803,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 28668,
											"end": 28803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 28636,
											"end": 28803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 28357,
											"end": 28360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28322,
											"end": 28818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27929,
											"end": 28828,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 27929,
											"end": 28828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27831,
											"end": 28859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27831,
											"end": 28859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27513,
											"end": 27825,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 27513,
											"end": 27825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27591,
											"end": 27601,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27583,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27583,
											"end": 27602,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27583,
											"end": 27609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27575,
											"end": 27609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27575,
											"end": 27609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9433,
											"end": 9435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9474,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E646578206F7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9491,
											"end": 9509,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9491,
											"end": 9509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9491,
											"end": 9509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9231,
											"end": 9574,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 27567,
											"end": 27633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27660,
											"end": 27665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27679,
											"end": 27689,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27678,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 27671,
											"end": 27701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27700,
											"end": 27701,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27700,
											"end": 27701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27671,
											"end": 27701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27671,
											"end": 27701,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 27671,
											"end": 27701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27667,
											"end": 27668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27667,
											"end": 27701,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27755,
											"end": 27765,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27754,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27766,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27767,
											"end": 27772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 27767,
											"end": 27768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27771,
											"end": 27772,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27767,
											"end": 27772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27767,
											"end": 27772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27767,
											"end": 27772,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 27767,
											"end": 27772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 27747,
											"end": 27773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27729,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27730,
											"end": 27740,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27722,
											"end": 27741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27742,
											"end": 27743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 27722,
											"end": 27744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27722,
											"end": 27773,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 27703,
											"end": 27706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 27643,
											"end": 27784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27801,
											"end": 27811,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27800,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27812,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 27793,
											"end": 27818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27513,
											"end": 27825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25346,
											"end": 25404,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 25346,
											"end": 25404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25395,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25395,
											"end": 25397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25390,
											"end": 25392,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25390,
											"end": 25392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25390,
											"end": 25397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 25390,
											"end": 25397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25390,
											"end": 25397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25390,
											"end": 25397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25390,
											"end": 25397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25390,
											"end": 25397,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 25390,
											"end": 25397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25385,
											"end": 25387,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25385,
											"end": 25397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25346,
											"end": 25404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23090,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 22984,
											"end": 23090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22701,
											"end": 22705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9913,
											"end": 9915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 9954,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9925,
											"end": 9955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9711,
											"end": 10055,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22806,
											"end": 22912,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 22806,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22701,
											"end": 22705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10244,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10301,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10274,
											"end": 10304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10320,
											"end": 10338,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10320,
											"end": 10338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10313,
											"end": 10359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10060,
											"end": 10400,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 781,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 983,
											"end": 987,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1471,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1524,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 1299,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1634,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1639,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1737,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1749,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1754,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1845,
											"end": 1876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1877,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 1825,
											"end": 1895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1895,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 1825,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1639,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2406,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2279,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2375,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2400,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2628,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2411,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 2467,
											"end": 2599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2516,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2512,
											"end": 2532,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2560,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 2561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2581,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2599,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 2467,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2633,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2755,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2718,
											"end": 2755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2735,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2766,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2904,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2857,
											"end": 2928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2908,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3390,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3393,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4388,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 4476,
											"end": 4528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4528,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 4476,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 4615,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4575,
											"end": 4635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4633,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6484,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6300,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6409,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6426,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6443,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 6391,
											"end": 6443,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6443,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 6391,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6462,
											"end": 6478,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6300,
											"end": 6484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7758,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 7631,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7702,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7683,
											"end": 7703,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7720,
											"end": 7721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7713,
											"end": 7728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9091,
											"end": 9226,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 9091,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9168,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9151,
											"end": 9168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9148,
											"end": 9191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 9171,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9207,
											"end": 9220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9207,
											"end": 9220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9091,
											"end": 9226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9706,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 9579,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9650,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9635,
											"end": 9638,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9631,
											"end": 9651,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9675,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 9668,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9661,
											"end": 9676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9699,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9700,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"DEX.sol_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_k()": "1b82c27f",
							"_x()": "29809703",
							"_y()": "28726bda",
							"buy(uint256)": "d96a094a",
							"dailyTax(uint256)": "2ad9d559",
							"getETHPrice(uint256)": "1a753fed",
							"getMemePrice(uint256)": "5c572ed0",
							"getStacks()": "e8bca8b8",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"precision()": "d3b5dc3b",
							"renounceOwnership()": "715018a6",
							"sell(uint256)": "e4849b32",
							"stack(uint256)": "dc9031c4",
							"stackingRate()": "9c74f05d",
							"taxRate()": "771a3a1d",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"unstack(uint256)": "200061df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Stack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"UnStack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_k\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_y\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"getMemePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStacks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct DEX.Stack_Struct[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"stack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stackingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unstack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"DEX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 872,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 751,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "_owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1060,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "meme",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)704"
							},
							{
								"astId": 1098,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "Stacked",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_struct(Stack_Struct)1057_storage)dyn_storage)"
							},
							{
								"astId": 1102,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "dailyTax",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1104,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "stackingRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1106,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "_k",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1108,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "_x",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1110,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "_y",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1113,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "precision",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1121,
								"contract": "DEX.sol_flattened.sol:DEX",
								"label": "taxRate",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stack_Struct)1057_storage)dyn_storage": {
								"base": "t_struct(Stack_Struct)1057_storage",
								"encoding": "dynamic_array",
								"label": "struct DEX.Stack_Struct[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)704": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Stack_Struct)1057_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DEX.Stack_Struct[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stack_Struct)1057_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stack_Struct)1057_storage": {
								"encoding": "inplace",
								"label": "struct DEX.Stack_Struct",
								"members": [
									{
										"astId": 1052,
										"contract": "DEX.sol_flattened.sol:DEX",
										"label": "meme_amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1054,
										"contract": "DEX.sol_flattened.sol:DEX",
										"label": "eth_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1056,
										"contract": "DEX.sol_flattened.sol:DEX",
										"label": "time",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DEX.sol_flattened.sol\":5695:17305  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"DEX.sol_flattened.sol\":6270:6383  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"DEX.sol_flattened.sol\":6336:6341  _name */\n  0x03\n    /* \"DEX.sol_flattened.sol\":6336:6349  _name = name_ */\n  tag_6\n    /* \"DEX.sol_flattened.sol\":6344:6349  name_ */\n  dup4\n    /* \"DEX.sol_flattened.sol\":6336:6341  _name */\n  dup3\n    /* \"DEX.sol_flattened.sol\":6336:6349  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"DEX.sol_flattened.sol\":6359:6366  _symbol */\n  0x04\n    /* \"DEX.sol_flattened.sol\":6359:6376  _symbol = symbol_ */\n  tag_8\n    /* \"DEX.sol_flattened.sol\":6369:6376  symbol_ */\n  dup3\n    /* \"DEX.sol_flattened.sol\":6359:6366  _symbol */\n  dup3\n    /* \"DEX.sol_flattened.sol\":6359:6376  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"DEX.sol_flattened.sol\":6270:6383  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"DEX.sol_flattened.sol\":5695:17305  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"DEX.sol_flattened.sol\":5695:17305  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DEX.sol_flattened.sol\":5695:17305  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DEX.sol_flattened.sol\":6448:6546  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"DEX.sol_flattened.sol\":7536:7642  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"DEX.sol_flattened.sol\":7623:7635  _totalSupply */\n      sload(0x02)\n        /* \"DEX.sol_flattened.sol\":7536:7642  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":7536:7642  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"DEX.sol_flattened.sol\":9484:9770  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":7385:7476  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"DEX.sol_flattened.sol\":7467:7469  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"DEX.sol_flattened.sol\":7385:7476  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"DEX.sol_flattened.sol\":10165:10399  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":7700:7825  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":7800:7818  _balances[account] */\n      and\n        /* \"DEX.sol_flattened.sol\":7774:7781  uint256 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":7800:7818  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DEX.sol_flattened.sol\":7700:7825  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"DEX.sol_flattened.sol\":6659:6761  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":10886:11313  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8021:8210  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8268:8417  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":6448:6546  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"DEX.sol_flattened.sol\":6502:6515  string memory */\n      0x60\n        /* \"DEX.sol_flattened.sol\":6534:6539  _name */\n      0x03\n        /* \"DEX.sol_flattened.sol\":6527:6539  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":6448:6546  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"DEX.sol_flattened.sol\":8808:8812  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":8862:8894  _approve(owner, spender, amount) */\n      tag_73\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup2\n        /* \"DEX.sol_flattened.sol\":8878:8885  spender */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8887:8893  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8862:8870  _approve */\n      tag_74\n        /* \"DEX.sol_flattened.sol\":8862:8894  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"DEX.sol_flattened.sol\":8911:8915  true */\n      0x01\n        /* \"DEX.sol_flattened.sol\":8904:8915  return true */\n      swap2\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":9484:9770  function transferFrom(... */\n    tag_32:\n        /* \"DEX.sol_flattened.sol\":9611:9615  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":9667:9705  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"DEX.sol_flattened.sol\":9683:9687  from */\n      dup6\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup3\n        /* \"DEX.sol_flattened.sol\":9698:9704  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9667:9682  _spendAllowance */\n      tag_79\n        /* \"DEX.sol_flattened.sol\":9667:9705  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"DEX.sol_flattened.sol\":9715:9742  _transfer(from, to, amount) */\n      tag_80\n        /* \"DEX.sol_flattened.sol\":9725:9729  from */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9731:9733  to */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9735:9741  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9715:9724  _transfer */\n      tag_81\n        /* \"DEX.sol_flattened.sol\":9715:9742  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"DEX.sol_flattened.sol\":9759:9763  true */\n      0x01\n      swap5\n        /* \"DEX.sol_flattened.sol\":9484:9770  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":10165:10399  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"DEX.sol_flattened.sol\":10253:10257  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":10307:10371  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup2\n        /* \"DEX.sol_flattened.sol\":10323:10330  spender */\n      dup6\n        /* \"DEX.sol_flattened.sol\":10360:10370  addedValue */\n      dup6\n        /* \"DEX.sol_flattened.sol\":10332:10357  allowance(owner, spender) */\n      tag_86\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup4\n        /* \"DEX.sol_flattened.sol\":10323:10330  spender */\n      dup4\n        /* \"DEX.sol_flattened.sol\":10332:10341  allowance */\n      tag_61\n        /* \"DEX.sol_flattened.sol\":10332:10357  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"DEX.sol_flattened.sol\":10332:10370  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"DEX.sol_flattened.sol\":10307:10315  _approve */\n      tag_74\n        /* \"DEX.sol_flattened.sol\":10307:10371  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":6659:6761  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"DEX.sol_flattened.sol\":6715:6728  string memory */\n      0x60\n        /* \"DEX.sol_flattened.sol\":6747:6754  _symbol */\n      0x04\n        /* \"DEX.sol_flattened.sol\":6740:6754  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":10886:11313  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"DEX.sol_flattened.sol\":10979:10983  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":10979:10983  bool */\n      dup2\n        /* \"DEX.sol_flattened.sol\":11060:11085  allowance(owner, spender) */\n      tag_98\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup3\n        /* \"DEX.sol_flattened.sol\":11077:11084  spender */\n      dup7\n        /* \"DEX.sol_flattened.sol\":11060:11069  allowance */\n      tag_61\n        /* \"DEX.sol_flattened.sol\":11060:11085  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"DEX.sol_flattened.sol\":11033:11085  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":11123:11138  subtractedValue */\n      dup4\n        /* \"DEX.sol_flattened.sol\":11103:11119  currentAllowance */\n      dup2\n        /* \"DEX.sol_flattened.sol\":11103:11138  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":11095:11180  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":11095:11180  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":11095:11180  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"DEX.sol_flattened.sol\":11214:11274  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"DEX.sol_flattened.sol\":11223:11228  owner */\n      dup3\n        /* \"DEX.sol_flattened.sol\":11230:11237  spender */\n      dup7\n        /* \"DEX.sol_flattened.sol\":11258:11273  subtractedValue */\n      dup7\n        /* \"DEX.sol_flattened.sol\":11239:11255  currentAllowance */\n      dup5\n        /* \"DEX.sol_flattened.sol\":11239:11273  currentAllowance - subtractedValue */\n      sub\n        /* \"DEX.sol_flattened.sol\":11214:11222  _approve */\n      tag_74\n        /* \"DEX.sol_flattened.sol\":11214:11274  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8021:8210  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"DEX.sol_flattened.sol\":8100:8104  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":8154:8182  _transfer(owner, to, amount) */\n      tag_73\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup2\n        /* \"DEX.sol_flattened.sol\":8171:8173  to */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8175:8181  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8154:8163  _transfer */\n      tag_81\n        /* \"DEX.sol_flattened.sol\":8154:8182  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8268:8417  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":8383:8401  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":8357:8364  uint256 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":8383:8401  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":8383:8394  _allowances */\n      0x01\n        /* \"DEX.sol_flattened.sol\":8383:8401  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":8383:8410  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"DEX.sol_flattened.sol\":8268:8417  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":14798:15168  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":14929:14948  owner != address(0) */\n      dup4\n      and\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":15007:15028  spender != address(0) */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":15078:15096  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":15078:15089  _allowances */\n      0x01\n        /* \"DEX.sol_flattened.sol\":15078:15096  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":15078:15105  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":15078:15114  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":15129:15161  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":15129:15161  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":15129:15161  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DEX.sol_flattened.sol\":14798:15168  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":15449:15890  function _spendAllowance(... */\n    tag_79:\n        /* \"DEX.sol_flattened.sol\":15579:15603  uint256 currentAllowance */\n      0x00\n        /* \"DEX.sol_flattened.sol\":15606:15631  allowance(owner, spender) */\n      tag_117\n        /* \"DEX.sol_flattened.sol\":15616:15621  owner */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15623:15630  spender */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15606:15615  allowance */\n      tag_61\n        /* \"DEX.sol_flattened.sol\":15606:15631  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"DEX.sol_flattened.sol\":15579:15631  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"DEX.sol_flattened.sol\":15645:15661  currentAllowance */\n      dup2\n        /* \"DEX.sol_flattened.sol\":15645:15682  currentAllowance != type(uint256).max */\n      eq\n        /* \"DEX.sol_flattened.sol\":15641:15884  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"DEX.sol_flattened.sol\":15726:15732  amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":15706:15722  currentAllowance */\n      dup2\n        /* \"DEX.sol_flattened.sol\":15706:15732  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"DEX.sol_flattened.sol\":15808:15859  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"DEX.sol_flattened.sol\":15817:15822  owner */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15824:15831  spender */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15852:15858  amount */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15833:15849  currentAllowance */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15833:15858  currentAllowance - amount */\n      sub\n        /* \"DEX.sol_flattened.sol\":15808:15816  _approve */\n      tag_74\n        /* \"DEX.sol_flattened.sol\":15808:15859  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"DEX.sol_flattened.sol\":15569:15890  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":15449:15890  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":11767:12585  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":11893:11911  from != address(0) */\n      dup4\n      and\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":11971:11987  to != address(0) */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":12109:12124  _balances[from] */\n      dup4\n      and\n        /* \"DEX.sol_flattened.sol\":12087:12106  uint256 fromBalance */\n      0x00\n        /* \"DEX.sol_flattened.sol\":12109:12124  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DEX.sol_flattened.sol\":12142:12163  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":12240:12255  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"DEX.sol_flattened.sol\":12240:12249  _balances */\n      0x00\n        /* \"DEX.sol_flattened.sol\":12240:12255  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":12258:12278  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"DEX.sol_flattened.sol\":12240:12278  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":12455:12468  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":12455:12478  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":12504:12530  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":12455:12468  _balances[to] */\n      swap1\n      swap3\n        /* \"DEX.sol_flattened.sol\":12504:12530  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":12504:12530  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DEX.sol_flattened.sol\":12541:12578  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"DEX.sol_flattened.sol\":16474:16595  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220e464facbbb75fb06ff9914a56f6ffc6530966693853156be5732d869c78c520564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:1"
															},
															"nodeType": "YulIf",
															"src": "1119:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:1"
															},
															"nodeType": "YulIf",
															"src": "1256:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:1"
															},
															"nodeType": "YulIf",
															"src": "1429:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"src": "991:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:1"
															},
															"nodeType": "YulIf",
															"src": "1701:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:1"
															},
															"nodeType": "YulIf",
															"src": "1771:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:1",
														"type": ""
													}
												],
												"src": "1558:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1943:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:1",
																			"statements": []
																		},
																		"src": "2516:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:1"
															},
															"nodeType": "YulIf",
															"src": "2160:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:1",
														"type": ""
													}
												],
												"src": "2069:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:1",
														"type": ""
													}
												],
												"src": "2619:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:1"
															},
															"nodeType": "YulIf",
															"src": "2929:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:1",
																					"statements": []
																				},
																				"src": "3376:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:1",
														"type": ""
													}
												],
												"src": "2790:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220e464facbbb75fb06ff9914a56f6ffc6530966693853156be5732d869c78c520564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH5 0xFACBBB75FB MOD SELFDESTRUCT SWAP10 EQ 0xA5 PUSH16 0x6FFC6530966693853156BE5732D869C7 DUP13 MSTORE SDIV PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "5695:11610:0:-:0;;;6270:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6336:5;:13;6344:5;6336;:13;:::i;:::-;-1:-1:-1;6359:7:0;:17;6369:7;6359;:17;:::i;:::-;;6270:113;;5695:11610;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:1;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:1;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:1;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:1;;;3992:26;3943:89;-1:-1:-1;;2747:1:1;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:1;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:1;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:1;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:1:o;:::-;5695:11610:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_638": {
									"entryPoint": 858,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_681": {
									"entryPoint": 1150,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_464": {
									"entryPoint": 1272,
									"id": 464,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_259": {
									"entryPoint": 815,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 562,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_387": {
									"entryPoint": 673,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_346": {
									"entryPoint": 624,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 416,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 658,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_317": {
									"entryPoint": 588,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_241": {
									"entryPoint": 801,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"nodeType": "YulIf",
															"src": "2188:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"src": "2091:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:1"
															},
															"nodeType": "YulIf",
															"src": "2499:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:1"
															},
															"nodeType": "YulIf",
															"src": "2569:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:1",
														"type": ""
													}
												],
												"src": "2356:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:1"
															},
															"nodeType": "YulIf",
															"src": "2824:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:1",
														"type": ""
													}
												],
												"src": "2741:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:1",
														"type": ""
													}
												],
												"src": "2968:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:1",
														"type": ""
													}
												],
												"src": "3374:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:1",
														"type": ""
													}
												],
												"src": "3779:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:1",
														"type": ""
													}
												],
												"src": "4182:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:1",
														"type": ""
													}
												],
												"src": "4540:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:1",
														"type": ""
													}
												],
												"src": "4946:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:1",
														"type": ""
													}
												],
												"src": "5350:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220e464facbbb75fb06ff9914a56f6ffc6530966693853156be5732d869c78c520564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH5 0xFACBBB75FB MOD SELFDESTRUCT SWAP10 EQ 0xA5 PUSH16 0x6FFC6530966693853156BE5732D869C7 DUP13 MSTORE SDIV PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "5695:11610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6448:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8725:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;8725:197:0;1004:187:1;7536:106:0;7623:12;;7536:106;;;1342:25:1;;;1330:2;1315:18;7536:106:0;1196:177:1;9484:286:0;;;;;;:::i;:::-;;:::i;7385:91::-;;;7467:2;1853:36:1;;1841:2;1826:18;7385:91:0;1711:184:1;10165:234:0;;;;;;:::i;:::-;;:::i;7700:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7800:18:0;7774:7;7800:18;;;;;;;;;;;;7700:125;6659:102;;;:::i;10886:427::-;;;;;;:::i;:::-;;:::i;8021:189::-;;;;;;:::i;:::-;;:::i;8268:149::-;;;;;;:::i;:::-;;:::i;6448:98::-;6502:13;6534:5;6527:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6448:98;:::o;8725:197::-;8808:4;4240:10;8862:32;4240:10;8878:7;8887:6;8862:8;:32::i;:::-;8911:4;8904:11;;;8725:197;;;;;:::o;9484:286::-;9611:4;4240:10;9667:38;9683:4;4240:10;9698:6;9667:15;:38::i;:::-;9715:27;9725:4;9731:2;9735:6;9715:9;:27::i;:::-;-1:-1:-1;9759:4:0;;9484:286;-1:-1:-1;;;;9484:286:0:o;10165:234::-;10253:4;4240:10;10307:64;4240:10;10323:7;10360:10;10332:25;4240:10;10323:7;10332:9;:25::i;:::-;:38;;;;:::i;:::-;10307:8;:64::i;6659:102::-;6715:13;6747:7;6740:14;;;;;:::i;10886:427::-;10979:4;4240:10;10979:4;11060:25;4240:10;11077:7;11060:9;:25::i;:::-;11033:52;;11123:15;11103:16;:35;;11095:85;;;;-1:-1:-1;;;11095:85:0;;3170:2:1;11095:85:0;;;3152:21:1;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:1;;;3292:35;3344:19;;11095:85:0;;;;;;;;;11214:60;11223:5;11230:7;11258:15;11239:16;:34;11214:8;:60::i;8021:189::-;8100:4;4240:10;8154:28;4240:10;8171:2;8175:6;8154:9;:28::i;8268:149::-;-1:-1:-1;;;;;8383:18:0;;;8357:7;8383:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8268:149::o;14798:370::-;-1:-1:-1;;;;;14929:19:0;;14921:68;;;;-1:-1:-1;;;14921:68:0;;3576:2:1;14921:68:0;;;3558:21:1;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:1;;;3698:34;3749:19;;14921:68:0;3374:400:1;14921:68:0;-1:-1:-1;;;;;15007:21:0;;14999:68;;;;-1:-1:-1;;;14999:68:0;;3981:2:1;14999:68:0;;;3963:21:1;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:1;;;4103:32;4152:19;;14999:68:0;3779:398:1;14999:68:0;-1:-1:-1;;;;;15078:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15129:32;;1342:25:1;;;15129:32:0;;1315:18:1;15129:32:0;;;;;;;14798:370;;;:::o;15449:441::-;15579:24;15606:25;15616:5;15623:7;15606:9;:25::i;:::-;15579:52;;-1:-1:-1;;15645:16:0;:37;15641:243;;15726:6;15706:16;:26;;15698:68;;;;-1:-1:-1;;;15698:68:0;;4384:2:1;15698:68:0;;;4366:21:1;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;15698:68:0;4182:353:1;15698:68:0;15808:51;15817:5;15824:7;15852:6;15833:16;:25;15808:8;:51::i;:::-;15569:321;15449:441;;;:::o;11767:818::-;-1:-1:-1;;;;;11893:18:0;;11885:68;;;;-1:-1:-1;;;11885:68:0;;4742:2:1;11885:68:0;;;4724:21:1;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:1;;;4864:35;4916:19;;11885:68:0;4540:401:1;11885:68:0;-1:-1:-1;;;;;11971:16:0;;11963:64;;;;-1:-1:-1;;;11963:64:0;;5148:2:1;11963:64:0;;;5130:21:1;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:1;;;5270:33;5320:19;;11963:64:0;4946:399:1;11963:64:0;-1:-1:-1;;;;;12109:15:0;;12087:19;12109:15;;;;;;;;;;;12142:21;;;;12134:72;;;;-1:-1:-1;;;12134:72:0;;5552:2:1;12134:72:0;;;5534:21:1;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:1;;;5674:36;5727:19;;12134:72:0;5350:402:1;12134:72:0;-1:-1:-1;;;;;12240:15:0;;;:9;:15;;;;;;;;;;;12258:20;;;12240:38;;12455:13;;;;;;;;;;:23;;;;;;12504:26;;1342:25:1;;;12455:13:0;;12504:26;;1315:18:1;12504:26:0;;;;;;;12541:37;16474:121;14:548:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5695,
									"end": 17305,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6270,
									"end": 6383,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6341,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6344,
									"end": 6349,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6341,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6336,
									"end": 6349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6359,
									"end": 6366,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6369,
									"end": 6376,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6366,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6359,
									"end": 6376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5695,
									"end": 17305,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e464facbbb75fb06ff9914a56f6ffc6530966693853156be5732d869c78c520564736f6c63430008130033",
									".code": [
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6448,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6448,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8725,
											"end": 8922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8725,
											"end": 8922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7635,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7623,
											"end": 7635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9484,
											"end": 9770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9484,
											"end": 9770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10165,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10165,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7700,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6659,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10886,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10886,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8021,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8021,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8268,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8268,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6515,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6534,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6527,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6527,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8862,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 8885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8862,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8862,
											"end": 8894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8862,
											"end": 8894,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8862,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8904,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8904,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8904,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9683,
											"end": 9687,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9704,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9667,
											"end": 9705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9725,
											"end": 9729,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9735,
											"end": 9741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9715,
											"end": 9742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9484,
											"end": 9770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10253,
											"end": 10257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10332,
											"end": 10357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10357,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10332,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10332,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10307,
											"end": 10371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6715,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6747,
											"end": 6754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6740,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10979,
											"end": 10983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10979,
											"end": 10983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11084,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11060,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11085,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11060,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11223,
											"end": 11228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11237,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11273,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11214,
											"end": 11274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8100,
											"end": 8104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8175,
											"end": 8181,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8154,
											"end": 8182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14929,
											"end": 14948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15114,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15114,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15579,
											"end": 15603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15616,
											"end": 15621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15623,
											"end": 15630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15606,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15606,
											"end": 15631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15579,
											"end": 15631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15579,
											"end": 15631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15645,
											"end": 15661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15645,
											"end": 15682,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15641,
											"end": 15884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15726,
											"end": 15732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15817,
											"end": 15822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15824,
											"end": 15831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15852,
											"end": 15858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15833,
											"end": 15849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15833,
											"end": 15858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15808,
											"end": 15859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15859,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15808,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11767,
											"end": 12585,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 11767,
											"end": 12585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11971,
											"end": 11987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11971,
											"end": 11987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12087,
											"end": 12106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12278,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12541,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16474,
											"end": 16595,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"DEX.sol_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "DEX.sol_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "DEX.sol_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "DEX.sol_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "DEX.sol_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "DEX.sol_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "DEX.sol_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "DEX.sol_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "DEX.sol_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "DEX.sol_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "DEX.sol_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MEME": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DEX.sol_flattened.sol\":23642:24235  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DEX.sol_flattened.sol\":23705:23801  constructor() ERC20(\"MEME\", \"MEME\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DEX.sol_flattened.sol\":6270:6383  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x4d454d45)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n  swap1\n    /* \"DEX.sol_flattened.sol\":6336:6341  _name */\n  0x03\n    /* \"DEX.sol_flattened.sol\":6336:6349  _name = name_ */\n  tag_7\n    /* \"DEX.sol_flattened.sol\":6270:6383  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"DEX.sol_flattened.sol\":6336:6341  _name */\n  dup3\n    /* \"DEX.sol_flattened.sol\":6336:6349  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"DEX.sol_flattened.sol\":6359:6366  _symbol */\n  0x04\n    /* \"DEX.sol_flattened.sol\":6359:6376  _symbol = symbol_ */\n  tag_9\n    /* \"DEX.sol_flattened.sol\":6369:6376  symbol_ */\n  dup3\n    /* \"DEX.sol_flattened.sol\":6359:6366  _symbol */\n  dup3\n    /* \"DEX.sol_flattened.sol\":6359:6376  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"DEX.sol_flattened.sol\":22035:22042  _paused */\n  0x05\n    /* \"DEX.sol_flattened.sol\":22035:22050  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"DEX.sol_flattened.sol\":19357:19389  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n  caller\n    /* \"DEX.sol_flattened.sol\":19357:19375  _transferOwnership */\n  tag_15\n    /* \"DEX.sol_flattened.sol\":19357:19389  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"DEX.sol_flattened.sol\":23751:23794  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  tag_17\n    /* \"DEX.sol_flattened.sol\":23757:23767  msg.sender */\n  caller\n    /* \"DEX.sol_flattened.sol\":23777:23793  10 ** decimals() */\n  tag_20\n    /* \"DEX.sol_flattened.sol\":7467:7469  18 */\n  0x12\n    /* \"DEX.sol_flattened.sol\":23777:23779  10 */\n  0x0a\n    /* \"DEX.sol_flattened.sol\":23777:23793  10 ** decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"DEX.sol_flattened.sol\":23769:23793  50000 * 10 ** decimals() */\n  tag_22\n  swap1\n    /* \"DEX.sol_flattened.sol\":23769:23774  50000 */\n  0xc350\n    /* \"DEX.sol_flattened.sol\":23769:23793  50000 * 10 ** decimals() */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"DEX.sol_flattened.sol\":23751:23756  _mint */\n  tag_24\n    /* \"DEX.sol_flattened.sol\":23751:23794  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  jump\t// in\ntag_17:\n    /* \"DEX.sol_flattened.sol\":23642:24235  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  jump(tag_64)\n    /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n  0x0100\n    /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"DEX.sol_flattened.sol\":20927:20943  address oldOwner */\n  0x00\n  swap1\n    /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"DEX.sol_flattened.sol\":20917:21041  {... */\n  pop\n    /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"DEX.sol_flattened.sol\":12861:13396  function _mint(address account, uint256 amount) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DEX.sol_flattened.sol\":12944:12965  account != address(0) */\n  dup3\n  and\n    /* \"DEX.sol_flattened.sol\":12936:13001  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4625:4627   */\n  0x20\n    /* \"DEX.sol_flattened.sol\":12936:13001  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4607:4628   */\n  mstore\n    /* \"#utility.yul\":4664:4666   */\n  0x1f\n    /* \"#utility.yul\":4644:4662   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4637:4667   */\n  mstore\n    /* \"#utility.yul\":4703:4736   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4683:4701   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4676:4737   */\n  mstore\n    /* \"#utility.yul\":4754:4772   */\n  0x64\n  add\n    /* \"DEX.sol_flattened.sol\":12936:13001  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_30:\n    /* \"DEX.sol_flattened.sol\":13012:13061  _beforeTokenTransfer(address(0), account, amount) */\n  tag_33\n    /* \"DEX.sol_flattened.sol\":13041:13042  0 */\n  0x00\n    /* \"DEX.sol_flattened.sol\":13045:13052  account */\n  dup4\n    /* \"DEX.sol_flattened.sol\":13054:13060  amount */\n  dup4\n    /* \"DEX.sol_flattened.sol\":13012:13032  _beforeTokenTransfer */\n  tag_34\n    /* \"DEX.sol_flattened.sol\":13012:13061  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_33:\n    /* \"DEX.sol_flattened.sol\":13088:13094  amount */\n  dup1\n    /* \"DEX.sol_flattened.sol\":13072:13084  _totalSupply */\n  0x02\n  0x00\n    /* \"DEX.sol_flattened.sol\":13072:13094  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DEX.sol_flattened.sol\":13240:13258  _balances[account] */\n  dup3\n  and\n    /* \"DEX.sol_flattened.sol\":13240:13249  _balances */\n  0x00\n    /* \"DEX.sol_flattened.sol\":13240:13258  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"DEX.sol_flattened.sol\":13240:13268  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"DEX.sol_flattened.sol\":13293:13330  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":5059:5084   */\n  dup5\n  dup2\n  mstore\n    /* \"DEX.sol_flattened.sol\":13293:13330  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":5032:5050   */\n  add\n    /* \"DEX.sol_flattened.sol\":13293:13330  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"DEX.sol_flattened.sol\":12861:13396  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"DEX.sol_flattened.sol\":24040:24233  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\ntag_34:\n    /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n  tag_42\n    /* \"DEX.sol_flattened.sol\":22278:22295  _requireNotPaused */\n  tag_43\n    /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n  jump\t// in\ntag_42:\n    /* \"DEX.sol_flattened.sol\":24182:24226  super._beforeTokenTransfer(from, to, amount) */\n  tag_45\n    /* \"DEX.sol_flattened.sol\":24209:24213  from */\n  dup4\n    /* \"DEX.sol_flattened.sol\":24215:24217  to */\n  dup4\n    /* \"DEX.sol_flattened.sol\":24219:24225  amount */\n  dup4\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"DEX.sol_flattened.sol\":24182:24226  super._beforeTokenTransfer(from, to, amount) */\n  dup5\n  and\n  jump\t// in\ntag_45:\n    /* \"DEX.sol_flattened.sol\":24040:24233  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"DEX.sol_flattened.sol\":22806:22912  function _requireNotPaused() internal view virtual {... */\ntag_43:\n    /* \"DEX.sol_flattened.sol\":22724:22731  _paused */\n  and(0xff, sload(0x05))\n    /* \"DEX.sol_flattened.sol\":22875:22884  !paused() */\n  iszero\n    /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5297:5299   */\n  0x20\n    /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5279:5300   */\n  mstore\n    /* \"#utility.yul\":5336:5338   */\n  0x10\n    /* \"#utility.yul\":5316:5334   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5309:5339   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":5355:5373   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5348:5394   */\n  mstore\n    /* \"#utility.yul\":5411:5429   */\n  0x64\n  add\n    /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n  tag_31\n    /* \"#utility.yul\":5095:5435   */\n  jump\n    /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\ntag_51:\n    /* \"DEX.sol_flattened.sol\":22806:22912  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_56:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_57:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_67:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_68:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_59:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_72\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_72:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_73:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_8:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_79\n  tag_56\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1582:1679   */\n  tag_80\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_81\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_57\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_59\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_84\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_84:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_75)\n    /* \"#utility.yul\":1810:2473   */\ntag_83:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_87:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_90:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2862   */\ntag_61:\n    /* \"#utility.yul\":2796:2806   */\n  0x4e487b71\n    /* \"#utility.yul\":2791:2794   */\n  0xe0\n    /* \"#utility.yul\":2787:2807   */\n  shl\n    /* \"#utility.yul\":2784:2785   */\n  0x00\n    /* \"#utility.yul\":2777:2808   */\n  mstore\n    /* \"#utility.yul\":2827:2831   */\n  0x11\n    /* \"#utility.yul\":2824:2825   */\n  0x04\n    /* \"#utility.yul\":2817:2832   */\n  mstore\n    /* \"#utility.yul\":2851:2855   */\n  0x24\n    /* \"#utility.yul\":2848:2849   */\n  0x00\n    /* \"#utility.yul\":2841:2856   */\n  revert\n    /* \"#utility.yul\":2867:3289   */\ntag_62:\n    /* \"#utility.yul\":2956:2957   */\n  0x01\n    /* \"#utility.yul\":2999:3004   */\n  dup2\n    /* \"#utility.yul\":2956:2957   */\n  dup2\n    /* \"#utility.yul\":3013:3283   */\ntag_93:\n    /* \"#utility.yul\":3034:3041   */\n  dup1\n    /* \"#utility.yul\":3024:3032   */\n  dup6\n    /* \"#utility.yul\":3021:3042   */\n  gt\n    /* \"#utility.yul\":3013:3283   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3093:3097   */\n  dup2\n    /* \"#utility.yul\":3089:3090   */\n  0x00\n    /* \"#utility.yul\":3085:3091   */\n  not\n    /* \"#utility.yul\":3081:3098   */\n  div\n    /* \"#utility.yul\":3075:3079   */\n  dup3\n    /* \"#utility.yul\":3072:3099   */\n  gt\n    /* \"#utility.yul\":3069:3122   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3102:3120   */\n  tag_97\n  tag_61\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3152:3159   */\n  dup1\n    /* \"#utility.yul\":3142:3150   */\n  dup6\n    /* \"#utility.yul\":3138:3160   */\n  and\n    /* \"#utility.yul\":3135:3190   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3172:3188   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3135:3190   */\ntag_98:\n    /* \"#utility.yul\":3251:3273   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3211:3226   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3013:3283   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3017:3020   */\n  pop\n    /* \"#utility.yul\":2867:3289   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3294:4100   */\ntag_63:\n    /* \"#utility.yul\":3343:3348   */\n  0x00\n    /* \"#utility.yul\":3373:3381   */\n  dup3\n    /* \"#utility.yul\":3363:3443   */\n  tag_100\n  jumpi\n  pop\n    /* \"#utility.yul\":3414:3415   */\n  0x01\n    /* \"#utility.yul\":3428:3433   */\n  jump(tag_99)\n    /* \"#utility.yul\":3363:3443   */\ntag_100:\n    /* \"#utility.yul\":3462:3466   */\n  dup2\n    /* \"#utility.yul\":3452:3528   */\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":3499:3500   */\n  0x00\n    /* \"#utility.yul\":3513:3518   */\n  jump(tag_99)\n    /* \"#utility.yul\":3452:3528   */\ntag_101:\n    /* \"#utility.yul\":3544:3548   */\n  dup2\n    /* \"#utility.yul\":3562:3563   */\n  0x01\n    /* \"#utility.yul\":3557:3616   */\n  dup2\n  eq\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3630:3631   */\n  0x02\n    /* \"#utility.yul\":3625:3755   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3537:3755   */\n  jump(tag_102)\n    /* \"#utility.yul\":3557:3616   */\ntag_103:\n    /* \"#utility.yul\":3587:3588   */\n  0x01\n    /* \"#utility.yul\":3578:3588   */\n  swap2\n  pop\n    /* \"#utility.yul\":3601:3606   */\n  pop\n  jump(tag_99)\n    /* \"#utility.yul\":3625:3755   */\ntag_104:\n    /* \"#utility.yul\":3662:3665   */\n  0xff\n    /* \"#utility.yul\":3652:3660   */\n  dup5\n    /* \"#utility.yul\":3649:3666   */\n  gt\n    /* \"#utility.yul\":3646:3689   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3669:3687   */\n  tag_106\n  tag_61\n  jump\t// in\ntag_106:\n  pop\n  pop\n    /* \"#utility.yul\":3725:3726   */\n  0x01\n    /* \"#utility.yul\":3711:3727   */\n  dup3\n  shl\n    /* \"#utility.yul\":3740:3745   */\n  jump(tag_99)\n    /* \"#utility.yul\":3537:3755   */\ntag_102:\n  pop\n    /* \"#utility.yul\":3839:3841   */\n  0x20\n    /* \"#utility.yul\":3829:3837   */\n  dup4\n    /* \"#utility.yul\":3826:3842   */\n  lt\n    /* \"#utility.yul\":3820:3823   */\n  0x0133\n    /* \"#utility.yul\":3814:3818   */\n  dup4\n    /* \"#utility.yul\":3811:3824   */\n  lt\n    /* \"#utility.yul\":3807:3843   */\n  and\n    /* \"#utility.yul\":3801:3803   */\n  0x4e\n    /* \"#utility.yul\":3791:3799   */\n  dup5\n    /* \"#utility.yul\":3788:3804   */\n  lt\n    /* \"#utility.yul\":3783:3785   */\n  0x0b\n    /* \"#utility.yul\":3777:3781   */\n  dup5\n    /* \"#utility.yul\":3774:3786   */\n  lt\n    /* \"#utility.yul\":3770:3805   */\n  and\n    /* \"#utility.yul\":3767:3844   */\n  or\n    /* \"#utility.yul\":3764:3923   */\n  iszero\n  tag_107\n  jumpi\n  pop\n    /* \"#utility.yul\":3876:3895   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3908:3913   */\n  jump(tag_99)\n    /* \"#utility.yul\":3764:3923   */\ntag_107:\n    /* \"#utility.yul\":3955:3989   */\n  tag_108\n    /* \"#utility.yul\":3980:3988   */\n  dup4\n    /* \"#utility.yul\":3974:3978   */\n  dup4\n    /* \"#utility.yul\":3955:3989   */\n  tag_62\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4025:4031   */\n  dup1\n    /* \"#utility.yul\":4021:4022   */\n  0x00\n    /* \"#utility.yul\":4017:4023   */\n  not\n    /* \"#utility.yul\":4013:4032   */\n  div\n    /* \"#utility.yul\":4004:4011   */\n  dup3\n    /* \"#utility.yul\":4001:4033   */\n  gt\n    /* \"#utility.yul\":3998:4056   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4036:4054   */\n  tag_110\n  tag_61\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4074:4094   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3294:4100   */\ntag_99:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4105:4245   */\ntag_21:\n    /* \"#utility.yul\":4163:4168   */\n  0x00\n    /* \"#utility.yul\":4192:4239   */\n  tag_112\n    /* \"#utility.yul\":4233:4237   */\n  0xff\n    /* \"#utility.yul\":4223:4231   */\n  dup5\n    /* \"#utility.yul\":4219:4238   */\n  and\n    /* \"#utility.yul\":4213:4217   */\n  dup4\n    /* \"#utility.yul\":4192:4239   */\n  tag_63\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4183:4239   */\n  swap4\n    /* \"#utility.yul\":4105:4245   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4250:4418   */\ntag_23:\n    /* \"#utility.yul\":4323:4332   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4354:4363   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4371:4386   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4365:4387   */\n  dup5\n  eq\n    /* \"#utility.yul\":4351:4388   */\n  or\n    /* \"#utility.yul\":4341:4412   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4392:4410   */\n  tag_99\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":4783:4908   */\ntag_36:\n    /* \"#utility.yul\":4848:4857   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4869:4879   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4866:4902   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4882:4900   */\n  tag_99\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":5095:5435   */\ntag_64:\n    /* \"DEX.sol_flattened.sol\":23642:24235  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DEX.sol_flattened.sol\":23642:24235  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x39509351\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DEX.sol_flattened.sol\":6448:6546  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"DEX.sol_flattened.sol\":7536:7642  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"DEX.sol_flattened.sol\":7623:7635  _totalSupply */\n      sload(0x02)\n        /* \"DEX.sol_flattened.sol\":7536:7642  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":7536:7642  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"DEX.sol_flattened.sol\":9484:9770  function transferFrom(... */\n    tag_6:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":7385:7476  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"DEX.sol_flattened.sol\":7467:7469  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"DEX.sol_flattened.sol\":7385:7476  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"DEX.sol_flattened.sol\":10165:10399  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":23872:23935  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"DEX.sol_flattened.sol\":23941:24034  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_53\n      tag_56\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":17870:17959  function burn(uint256 amount) public virtual {... */\n    tag_11:\n      tag_53\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":22654:22738  function paused() public view virtual returns (bool) {... */\n    tag_12:\n        /* \"DEX.sol_flattened.sol\":22724:22731  _paused */\n      and(0xff, sload(0x05))\n        /* \"DEX.sol_flattened.sol\":22654:22738  function paused() public view virtual returns (bool) {... */\n      jump(tag_30)\n        /* \"DEX.sol_flattened.sol\":7700:7825  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_36\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":7800:7818  _balances[account] */\n      and\n        /* \"DEX.sol_flattened.sol\":7774:7781  uint256 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":7800:7818  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DEX.sol_flattened.sol\":7700:7825  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"DEX.sol_flattened.sol\":20252:20353  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_53\n      tag_71\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":18265:18426  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_15:\n      tag_53\n      tag_73\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":23807:23866  function pause() public onlyOwner {... */\n    tag_16:\n      tag_53\n      tag_76\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":19622:19707  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"DEX.sol_flattened.sol\":19694:19700  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DEX.sol_flattened.sol\":19622:19707  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"DEX.sol_flattened.sol\":19622:19707  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"DEX.sol_flattened.sol\":6659:6761  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_26\n      tag_82\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":10886:11313  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_30\n      tag_85\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8021:8210  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_30\n      tag_89\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8268:8417  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":20502:20700  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_53\n      tag_98\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":6448:6546  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"DEX.sol_flattened.sol\":6502:6515  string memory */\n      0x60\n        /* \"DEX.sol_flattened.sol\":6534:6539  _name */\n      0x03\n        /* \"DEX.sol_flattened.sol\":6527:6539  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":6448:6546  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"DEX.sol_flattened.sol\":8808:8812  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":8862:8894  _approve(owner, spender, amount) */\n      tag_110\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup2\n        /* \"DEX.sol_flattened.sol\":8878:8885  spender */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8887:8893  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8862:8870  _approve */\n      tag_111\n        /* \"DEX.sol_flattened.sol\":8862:8894  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_110:\n        /* \"DEX.sol_flattened.sol\":8911:8915  true */\n      0x01\n        /* \"DEX.sol_flattened.sol\":8904:8915  return true */\n      swap2\n      pop\n      pop\n        /* \"DEX.sol_flattened.sol\":8725:8922  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_107:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":9484:9770  function transferFrom(... */\n    tag_43:\n        /* \"DEX.sol_flattened.sol\":9611:9615  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":9667:9705  _spendAllowance(from, spender, amount) */\n      tag_115\n        /* \"DEX.sol_flattened.sol\":9683:9687  from */\n      dup6\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup3\n        /* \"DEX.sol_flattened.sol\":9698:9704  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9667:9682  _spendAllowance */\n      tag_116\n        /* \"DEX.sol_flattened.sol\":9667:9705  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_115:\n        /* \"DEX.sol_flattened.sol\":9715:9742  _transfer(from, to, amount) */\n      tag_117\n        /* \"DEX.sol_flattened.sol\":9725:9729  from */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9731:9733  to */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9735:9741  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":9715:9724  _transfer */\n      tag_118\n        /* \"DEX.sol_flattened.sol\":9715:9742  _transfer(from, to, amount) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"DEX.sol_flattened.sol\":9759:9763  true */\n      0x01\n      swap5\n        /* \"DEX.sol_flattened.sol\":9484:9770  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":10165:10399  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_51:\n        /* \"DEX.sol_flattened.sol\":10253:10257  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":10307:10371  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_110\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup2\n        /* \"DEX.sol_flattened.sol\":10323:10330  spender */\n      dup6\n        /* \"DEX.sol_flattened.sol\":10360:10370  addedValue */\n      dup6\n        /* \"DEX.sol_flattened.sol\":10332:10357  allowance(owner, spender) */\n      tag_123\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup4\n        /* \"DEX.sol_flattened.sol\":10323:10330  spender */\n      dup4\n        /* \"DEX.sol_flattened.sol\":10332:10341  allowance */\n      tag_95\n        /* \"DEX.sol_flattened.sol\":10332:10357  allowance(owner, spender) */\n      jump\t// in\n    tag_123:\n        /* \"DEX.sol_flattened.sol\":10332:10370  allowance(owner, spender) + addedValue */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"DEX.sol_flattened.sol\":10307:10315  _approve */\n      tag_111\n        /* \"DEX.sol_flattened.sol\":10307:10371  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":23872:23935  function unpause() public onlyOwner {... */\n    tag_54:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_127\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_128\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"DEX.sol_flattened.sol\":23918:23928  _unpause() */\n      tag_130\n        /* \"DEX.sol_flattened.sol\":23918:23926  _unpause */\n      tag_131\n        /* \"DEX.sol_flattened.sol\":23918:23928  _unpause() */\n      jump\t// in\n    tag_130:\n        /* \"DEX.sol_flattened.sol\":23872:23935  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":23941:24034  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_57:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_133\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_128\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"DEX.sol_flattened.sol\":24010:24027  _mint(to, amount) */\n      tag_135\n        /* \"DEX.sol_flattened.sol\":24016:24018  to */\n      dup3\n        /* \"DEX.sol_flattened.sol\":24020:24026  amount */\n      dup3\n        /* \"DEX.sol_flattened.sol\":24010:24015  _mint */\n      tag_136\n        /* \"DEX.sol_flattened.sol\":24010:24027  _mint(to, amount) */\n      jump\t// in\n    tag_135:\n        /* \"DEX.sol_flattened.sol\":23941:24034  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":17870:17959  function burn(uint256 amount) public virtual {... */\n    tag_61:\n        /* \"DEX.sol_flattened.sol\":17925:17952  _burn(_msgSender(), amount) */\n      tag_138\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":17945:17951  amount */\n      dup3\n        /* \"DEX.sol_flattened.sol\":17925:17930  _burn */\n      tag_140\n        /* \"DEX.sol_flattened.sol\":17925:17952  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_138:\n        /* \"DEX.sol_flattened.sol\":17870:17959  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":20252:20353  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_144\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_128\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"DEX.sol_flattened.sol\":20316:20346  _transferOwnership(address(0)) */\n      tag_130\n        /* \"DEX.sol_flattened.sol\":20343:20344  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":20316:20334  _transferOwnership */\n      tag_147\n        /* \"DEX.sol_flattened.sol\":20316:20346  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":18265:18426  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_74:\n        /* \"DEX.sol_flattened.sol\":18341:18387  _spendAllowance(account, _msgSender(), amount) */\n      tag_149\n        /* \"DEX.sol_flattened.sol\":18357:18364  account */\n      dup3\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":18380:18386  amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":18341:18356  _spendAllowance */\n      tag_116\n        /* \"DEX.sol_flattened.sol\":18341:18387  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_149:\n        /* \"DEX.sol_flattened.sol\":18397:18419  _burn(account, amount) */\n      tag_135\n        /* \"DEX.sol_flattened.sol\":18403:18410  account */\n      dup3\n        /* \"DEX.sol_flattened.sol\":18412:18418  amount */\n      dup3\n        /* \"DEX.sol_flattened.sol\":18397:18402  _burn */\n      tag_140\n        /* \"DEX.sol_flattened.sol\":18397:18419  _burn(account, amount) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":23807:23866  function pause() public onlyOwner {... */\n    tag_76:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_153\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_128\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"DEX.sol_flattened.sol\":23851:23859  _pause() */\n      tag_130\n        /* \"DEX.sol_flattened.sol\":23851:23857  _pause */\n      tag_156\n        /* \"DEX.sol_flattened.sol\":23851:23859  _pause() */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":6659:6761  function symbol() public view virtual override returns (string memory) {... */\n    tag_82:\n        /* \"DEX.sol_flattened.sol\":6715:6728  string memory */\n      0x60\n        /* \"DEX.sol_flattened.sol\":6747:6754  _symbol */\n      0x04\n        /* \"DEX.sol_flattened.sol\":6740:6754  return _symbol */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":10886:11313  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_86:\n        /* \"DEX.sol_flattened.sol\":10979:10983  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":10979:10983  bool */\n      dup2\n        /* \"DEX.sol_flattened.sol\":11060:11085  allowance(owner, spender) */\n      tag_166\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup3\n        /* \"DEX.sol_flattened.sol\":11077:11084  spender */\n      dup7\n        /* \"DEX.sol_flattened.sol\":11060:11069  allowance */\n      tag_95\n        /* \"DEX.sol_flattened.sol\":11060:11085  allowance(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"DEX.sol_flattened.sol\":11033:11085  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"DEX.sol_flattened.sol\":11123:11138  subtractedValue */\n      dup4\n        /* \"DEX.sol_flattened.sol\":11103:11119  currentAllowance */\n      dup2\n        /* \"DEX.sol_flattened.sol\":11103:11138  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":11095:11180  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3563:3565   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":11095:11180  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3566   */\n      mstore\n        /* \"#utility.yul\":3602:3604   */\n      0x25\n        /* \"#utility.yul\":3582:3600   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3575:3605   */\n      mstore\n        /* \"#utility.yul\":3641:3675   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3621:3639   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3614:3676   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3692:3710   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3685:3720   */\n      mstore\n        /* \"#utility.yul\":3737:3756   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":11095:11180  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"DEX.sol_flattened.sol\":11214:11274  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_117\n        /* \"DEX.sol_flattened.sol\":11223:11228  owner */\n      dup3\n        /* \"DEX.sol_flattened.sol\":11230:11237  spender */\n      dup7\n        /* \"DEX.sol_flattened.sol\":11258:11273  subtractedValue */\n      dup7\n        /* \"DEX.sol_flattened.sol\":11239:11255  currentAllowance */\n      dup5\n        /* \"DEX.sol_flattened.sol\":11239:11273  currentAllowance - subtractedValue */\n      sub\n        /* \"DEX.sol_flattened.sol\":11214:11222  _approve */\n      tag_111\n        /* \"DEX.sol_flattened.sol\":11214:11274  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8021:8210  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_90:\n        /* \"DEX.sol_flattened.sol\":8100:8104  bool */\n      0x00\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":8154:8182  _transfer(owner, to, amount) */\n      tag_110\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      dup2\n        /* \"DEX.sol_flattened.sol\":8171:8173  to */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8175:8181  amount */\n      dup6\n        /* \"DEX.sol_flattened.sol\":8154:8163  _transfer */\n      tag_118\n        /* \"DEX.sol_flattened.sol\":8154:8182  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":8268:8417  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":8383:8401  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":8357:8364  uint256 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":8383:8401  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":8383:8394  _allowances */\n      0x01\n        /* \"DEX.sol_flattened.sol\":8383:8401  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":8383:8410  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"DEX.sol_flattened.sol\":8268:8417  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":20502:20700  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      tag_176\n        /* \"DEX.sol_flattened.sol\":19515:19526  _checkOwner */\n      tag_128\n        /* \"DEX.sol_flattened.sol\":19515:19528  _checkOwner() */\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":20590:20612  newOwner != address(0) */\n      dup2\n      and\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3969:3971   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:3972   */\n      mstore\n        /* \"#utility.yul\":4008:4010   */\n      0x26\n        /* \"#utility.yul\":3988:4006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3981:4011   */\n      mstore\n        /* \"#utility.yul\":4047:4081   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4027:4045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4020:4082   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4098:4116   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4091:4127   */\n      mstore\n        /* \"#utility.yul\":4144:4163   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_168\n        /* \"#utility.yul\":3767:4169   */\n      jump\n        /* \"DEX.sol_flattened.sol\":20582:20655  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_178:\n        /* \"DEX.sol_flattened.sol\":20665:20693  _transferOwnership(newOwner) */\n      tag_138\n        /* \"DEX.sol_flattened.sol\":20684:20692  newOwner */\n      dup2\n        /* \"DEX.sol_flattened.sol\":20665:20683  _transferOwnership */\n      tag_147\n        /* \"DEX.sol_flattened.sol\":20665:20693  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"DEX.sol_flattened.sol\":14798:15168  function _approve(... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":14929:14948  owner != address(0) */\n      dup4\n      and\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4358:4379   */\n      mstore\n        /* \"#utility.yul\":4415:4417   */\n      0x24\n        /* \"#utility.yul\":4395:4413   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4388:4418   */\n      mstore\n        /* \"#utility.yul\":4454:4488   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4434:4452   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4427:4489   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4505:4523   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4498:4532   */\n      mstore\n        /* \"#utility.yul\":4549:4568   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":4174:4574   */\n      jump\n        /* \"DEX.sol_flattened.sol\":14921:14989  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":15007:15028  spender != address(0) */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4763:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4822   */\n      0x22\n        /* \"#utility.yul\":4800:4818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4793:4823   */\n      mstore\n        /* \"#utility.yul\":4859:4893   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4839:4857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4832:4894   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4910:4928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4903:4935   */\n      mstore\n        /* \"#utility.yul\":4952:4971   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":4579:4977   */\n      jump\n        /* \"DEX.sol_flattened.sol\":14999:15067  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":15078:15096  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":15078:15089  _allowances */\n      0x01\n        /* \"DEX.sol_flattened.sol\":15078:15096  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":15078:15105  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":15078:15114  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":15129:15161  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":15129:15161  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":15129:15161  Approval(owner, spender, amount) */\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DEX.sol_flattened.sol\":14798:15168  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":15449:15890  function _spendAllowance(... */\n    tag_116:\n        /* \"DEX.sol_flattened.sol\":15579:15603  uint256 currentAllowance */\n      0x00\n        /* \"DEX.sol_flattened.sol\":15606:15631  allowance(owner, spender) */\n      tag_192\n        /* \"DEX.sol_flattened.sol\":15616:15621  owner */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15623:15630  spender */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15606:15615  allowance */\n      tag_95\n        /* \"DEX.sol_flattened.sol\":15606:15631  allowance(owner, spender) */\n      jump\t// in\n    tag_192:\n        /* \"DEX.sol_flattened.sol\":15579:15631  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"DEX.sol_flattened.sol\":15645:15661  currentAllowance */\n      dup2\n        /* \"DEX.sol_flattened.sol\":15645:15682  currentAllowance != type(uint256).max */\n      eq\n        /* \"DEX.sol_flattened.sol\":15641:15884  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"DEX.sol_flattened.sol\":15726:15732  amount */\n      dup2\n        /* \"DEX.sol_flattened.sol\":15706:15722  currentAllowance */\n      dup2\n        /* \"DEX.sol_flattened.sol\":15706:15732  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5184:5186   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5166:5187   */\n      mstore\n        /* \"#utility.yul\":5223:5225   */\n      0x1d\n        /* \"#utility.yul\":5203:5221   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5196:5226   */\n      mstore\n        /* \"#utility.yul\":5262:5293   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5242:5260   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5235:5294   */\n      mstore\n        /* \"#utility.yul\":5311:5329   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_168\n        /* \"#utility.yul\":4982:5335   */\n      jump\n        /* \"DEX.sol_flattened.sol\":15698:15766  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_194:\n        /* \"DEX.sol_flattened.sol\":15808:15859  _approve(owner, spender, currentAllowance - amount) */\n      tag_197\n        /* \"DEX.sol_flattened.sol\":15817:15822  owner */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15824:15831  spender */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15852:15858  amount */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15833:15849  currentAllowance */\n      dup5\n        /* \"DEX.sol_flattened.sol\":15833:15858  currentAllowance - amount */\n      sub\n        /* \"DEX.sol_flattened.sol\":15808:15816  _approve */\n      tag_111\n        /* \"DEX.sol_flattened.sol\":15808:15859  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_197:\n        /* \"DEX.sol_flattened.sol\":15569:15890  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":15449:15890  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":11767:12585  function _transfer(... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":11893:11911  from != address(0) */\n      dup4\n      and\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5524:5545   */\n      mstore\n        /* \"#utility.yul\":5581:5583   */\n      0x25\n        /* \"#utility.yul\":5561:5579   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5554:5584   */\n      mstore\n        /* \"#utility.yul\":5620:5654   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5600:5618   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5593:5655   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5671:5689   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5664:5699   */\n      mstore\n        /* \"#utility.yul\":5716:5735   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":5340:5741   */\n      jump\n        /* \"DEX.sol_flattened.sol\":11885:11953  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":11971:11987  to != address(0) */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5948:5950   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5930:5951   */\n      mstore\n        /* \"#utility.yul\":5987:5989   */\n      0x23\n        /* \"#utility.yul\":5967:5985   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5960:5990   */\n      mstore\n        /* \"#utility.yul\":6026:6060   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6006:6024   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5999:6061   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6077:6095   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6070:6103   */\n      mstore\n        /* \"#utility.yul\":6120:6139   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":5746:6145   */\n      jump\n        /* \"DEX.sol_flattened.sol\":11963:12027  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_202:\n        /* \"DEX.sol_flattened.sol\":12038:12076  _beforeTokenTransfer(from, to, amount) */\n      tag_205\n        /* \"DEX.sol_flattened.sol\":12059:12063  from */\n      dup4\n        /* \"DEX.sol_flattened.sol\":12065:12067  to */\n      dup4\n        /* \"DEX.sol_flattened.sol\":12069:12075  amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":12038:12058  _beforeTokenTransfer */\n      tag_206\n        /* \"DEX.sol_flattened.sol\":12038:12076  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":12109:12124  _balances[from] */\n      dup4\n      and\n        /* \"DEX.sol_flattened.sol\":12087:12106  uint256 fromBalance */\n      0x00\n        /* \"DEX.sol_flattened.sol\":12109:12124  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DEX.sol_flattened.sol\":12142:12163  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6334:6355   */\n      mstore\n        /* \"#utility.yul\":6391:6393   */\n      0x26\n        /* \"#utility.yul\":6371:6389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6364:6394   */\n      mstore\n        /* \"#utility.yul\":6430:6464   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6410:6428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6403:6465   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6481:6499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6474:6510   */\n      mstore\n        /* \"#utility.yul\":6527:6546   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"#utility.yul\":6150:6552   */\n      jump\n        /* \"DEX.sol_flattened.sol\":12134:12206  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":12240:12255  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"DEX.sol_flattened.sol\":12240:12249  _balances */\n      0x00\n        /* \"DEX.sol_flattened.sol\":12240:12255  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":12258:12278  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"DEX.sol_flattened.sol\":12240:12278  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":12455:12468  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"DEX.sol_flattened.sol\":12455:12478  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":12504:12530  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":12455:12468  _balances[to] */\n      swap1\n      swap3\n        /* \"DEX.sol_flattened.sol\":12504:12530  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":12504:12530  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DEX.sol_flattened.sol\":12541:12578  _afterTokenTransfer(from, to, amount) */\n      tag_197\n        /* \"DEX.sol_flattened.sol\":13716:14375  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"DEX.sol_flattened.sol\":19780:19910  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"DEX.sol_flattened.sol\":19694:19700  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":19843:19866  owner() == _msgSender() */\n      eq\n        /* \"DEX.sol_flattened.sol\":19835:19903  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6759:6761   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":19835:19903  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6741:6762   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6778:6796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6771:6801   */\n      mstore\n        /* \"#utility.yul\":6837:6871   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6817:6835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6810:6872   */\n      mstore\n        /* \"#utility.yul\":6889:6907   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":19835:19903  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n        /* \"#utility.yul\":6557:6913   */\n      jump\n        /* \"DEX.sol_flattened.sol\":23472:23589  function _unpause() internal virtual whenPaused {... */\n    tag_131:\n        /* \"DEX.sol_flattened.sol\":22525:22541  _requirePaused() */\n      tag_220\n        /* \"DEX.sol_flattened.sol\":22525:22539  _requirePaused */\n      tag_221\n        /* \"DEX.sol_flattened.sol\":22525:22541  _requirePaused() */\n      jump\t// in\n    tag_220:\n        /* \"DEX.sol_flattened.sol\":23530:23537  _paused */\n      0x05\n        /* \"DEX.sol_flattened.sol\":23530:23545  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":23560:23582  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n        /* \"DEX.sol_flattened.sol\":23569:23581  _msgSender() */\n    tag_223:\n        /* \"DEX.sol_flattened.sol\":23560:23582  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"DEX.sol_flattened.sol\":23560:23582  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DEX.sol_flattened.sol\":23472:23589  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":12861:13396  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":12944:12965  account != address(0) */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":12936:13001  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7120:7122   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":12936:13001  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7102:7123   */\n      mstore\n        /* \"#utility.yul\":7159:7161   */\n      0x1f\n        /* \"#utility.yul\":7139:7157   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7132:7162   */\n      mstore\n        /* \"#utility.yul\":7198:7231   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7178:7196   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7171:7232   */\n      mstore\n        /* \"#utility.yul\":7249:7267   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":12936:13001  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":6918:7273   */\n      jump\n        /* \"DEX.sol_flattened.sol\":12936:13001  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_226:\n        /* \"DEX.sol_flattened.sol\":13012:13061  _beforeTokenTransfer(address(0), account, amount) */\n      tag_229\n        /* \"DEX.sol_flattened.sol\":13041:13042  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":13045:13052  account */\n      dup4\n        /* \"DEX.sol_flattened.sol\":13054:13060  amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":13012:13032  _beforeTokenTransfer */\n      tag_206\n        /* \"DEX.sol_flattened.sol\":13012:13061  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_229:\n        /* \"DEX.sol_flattened.sol\":13088:13094  amount */\n      dup1\n        /* \"DEX.sol_flattened.sol\":13072:13084  _totalSupply */\n      0x02\n      0x00\n        /* \"DEX.sol_flattened.sol\":13072:13094  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_230:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":13240:13258  _balances[account] */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":13240:13249  _balances */\n      0x00\n        /* \"DEX.sol_flattened.sol\":13240:13258  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":13240:13268  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":13293:13330  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":13293:13330  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":13293:13330  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DEX.sol_flattened.sol\":23941:24034  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":13716:14375  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":13799:13820  account != address(0) */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":13791:13858  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7480:7482   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":13791:13858  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7462:7483   */\n      mstore\n        /* \"#utility.yul\":7519:7521   */\n      0x21\n        /* \"#utility.yul\":7499:7517   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7492:7522   */\n      mstore\n        /* \"#utility.yul\":7558:7592   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7538:7556   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7531:7593   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7609:7627   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7602:7633   */\n      mstore\n        /* \"#utility.yul\":7650:7669   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":13791:13858  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":7278:7675   */\n      jump\n        /* \"DEX.sol_flattened.sol\":13791:13858  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_234:\n        /* \"DEX.sol_flattened.sol\":13869:13918  _beforeTokenTransfer(account, address(0), amount) */\n      tag_237\n        /* \"DEX.sol_flattened.sol\":13890:13897  account */\n      dup3\n        /* \"DEX.sol_flattened.sol\":13907:13908  0 */\n      0x00\n        /* \"DEX.sol_flattened.sol\":13911:13917  amount */\n      dup4\n        /* \"DEX.sol_flattened.sol\":13869:13889  _beforeTokenTransfer */\n      tag_206\n        /* \"DEX.sol_flattened.sol\":13869:13918  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":13954:13972  _balances[account] */\n      dup3\n      and\n        /* \"DEX.sol_flattened.sol\":13929:13951  uint256 accountBalance */\n      0x00\n        /* \"DEX.sol_flattened.sol\":13954:13972  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DEX.sol_flattened.sol\":13990:14014  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"DEX.sol_flattened.sol\":13982:14053  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7882:7884   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":13982:14053  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7864:7885   */\n      mstore\n        /* \"#utility.yul\":7921:7923   */\n      0x22\n        /* \"#utility.yul\":7901:7919   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7894:7924   */\n      mstore\n        /* \"#utility.yul\":7960:7994   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":7940:7958   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7933:7995   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8011:8029   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8004:8036   */\n      mstore\n        /* \"#utility.yul\":8053:8072   */\n      0x84\n      add\n        /* \"DEX.sol_flattened.sol\":13982:14053  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_168\n        /* \"#utility.yul\":7680:8078   */\n      jump\n        /* \"DEX.sol_flattened.sol\":13982:14053  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":14087:14105  _balances[account] */\n      dup4\n      and\n        /* \"DEX.sol_flattened.sol\":14087:14096  _balances */\n      0x00\n        /* \"DEX.sol_flattened.sol\":14087:14105  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol_flattened.sol\":14108:14131  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"DEX.sol_flattened.sol\":14087:14131  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":14224:14236  _totalSupply */\n      0x02\n        /* \"DEX.sol_flattened.sol\":14224:14246  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":14272:14309  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"DEX.sol_flattened.sol\":14087:14096  _balances */\n      swap2\n      swap3\n        /* \"DEX.sol_flattened.sol\":14087:14105  _balances[account] */\n      swap2\n        /* \"DEX.sol_flattened.sol\":14272:14309  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"DEX.sol_flattened.sol\":14272:14309  Transfer(account, address(0), amount) */\n      tag_190\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_147:\n        /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n      0x0100\n        /* \"DEX.sol_flattened.sol\":20962:20979  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"DEX.sol_flattened.sol\":20946:20952  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"DEX.sol_flattened.sol\":20927:20943  address oldOwner */\n      0x00\n      swap1\n        /* \"DEX.sol_flattened.sol\":20994:21034  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"DEX.sol_flattened.sol\":20917:21041  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":20854:21041  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":23225:23340  function _pause() internal virtual whenNotPaused {... */\n    tag_156:\n        /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n      tag_245\n        /* \"DEX.sol_flattened.sol\":22278:22295  _requireNotPaused */\n      tag_246\n        /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n      jump\t// in\n    tag_245:\n        /* \"DEX.sol_flattened.sol\":23284:23291  _paused */\n      0x05\n        /* \"DEX.sol_flattened.sol\":23284:23298  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DEX.sol_flattened.sol\":23294:23298  true */\n      0x01\n        /* \"DEX.sol_flattened.sol\":23284:23298  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"DEX.sol_flattened.sol\":23313:23333  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"DEX.sol_flattened.sol\":23320:23332  _msgSender() */\n      tag_223\n        /* \"DEX.sol_flattened.sol\":4240:4250  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol_flattened.sol\":4161:4257  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"DEX.sol_flattened.sol\":24040:24233  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n    tag_206:\n        /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n      tag_251\n        /* \"DEX.sol_flattened.sol\":22278:22295  _requireNotPaused */\n      tag_246\n        /* \"DEX.sol_flattened.sol\":22278:22297  _requireNotPaused() */\n      jump\t// in\n    tag_251:\n        /* \"DEX.sol_flattened.sol\":13781:14375  {... */\n      pop\n        /* \"DEX.sol_flattened.sol\":13716:14375  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol_flattened.sol\":22984:23090  function _requirePaused() internal view virtual {... */\n    tag_221:\n        /* \"DEX.sol_flattened.sol\":22724:22731  _paused */\n      and(0xff, sload(0x05))\n        /* \"DEX.sol_flattened.sol\":23042:23083  require(paused(), \"Pausable: not paused\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8285:8287   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":23042:23083  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8267:8288   */\n      mstore\n        /* \"#utility.yul\":8324:8326   */\n      0x14\n        /* \"#utility.yul\":8304:8322   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8297:8327   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":8343:8361   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8336:8386   */\n      mstore\n        /* \"#utility.yul\":8403:8421   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":23042:23083  require(paused(), \"Pausable: not paused\") */\n      tag_168\n        /* \"#utility.yul\":8083:8427   */\n      jump\n        /* \"DEX.sol_flattened.sol\":22806:22912  function _requireNotPaused() internal view virtual {... */\n    tag_246:\n        /* \"DEX.sol_flattened.sol\":22724:22731  _paused */\n      and(0xff, sload(0x05))\n        /* \"DEX.sol_flattened.sol\":22875:22884  !paused() */\n      iszero\n        /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8616:8637   */\n      mstore\n        /* \"#utility.yul\":8673:8675   */\n      0x10\n        /* \"#utility.yul\":8653:8671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8646:8676   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":8692:8710   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8685:8731   */\n      mstore\n        /* \"#utility.yul\":8748:8766   */\n      0x64\n      add\n        /* \"DEX.sol_flattened.sol\":22867:22905  require(!paused(), \"Pausable: paused\") */\n      tag_168\n        /* \"#utility.yul\":8432:8772   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_29:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_270:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_267:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_274:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_32:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_276:\n        /* \"#utility.yul\":913:942   */\n      tag_277\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_267\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_42:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_281:\n        /* \"#utility.yul\":1563:1592   */\n      tag_282\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_267\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_283\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_267\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_60:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_67:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_288:\n        /* \"#utility.yul\":2236:2265   */\n      tag_289\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_267\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_94:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_292:\n        /* \"#utility.yul\":2652:2681   */\n      tag_293\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_267\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_294\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_267\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_102:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_296:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_297:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3356   */\n    tag_125:\n        /* \"#utility.yul\":3199:3208   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3220:3230   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3217:3350   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3272:3282   */\n      0x4e487b71\n        /* \"#utility.yul\":3267:3270   */\n      0xe0\n        /* \"#utility.yul\":3263:3283   */\n      shl\n        /* \"#utility.yul\":3260:3261   */\n      0x00\n        /* \"#utility.yul\":3253:3284   */\n      mstore\n        /* \"#utility.yul\":3307:3311   */\n      0x11\n        /* \"#utility.yul\":3304:3305   */\n      0x04\n        /* \"#utility.yul\":3297:3312   */\n      mstore\n        /* \"#utility.yul\":3335:3339   */\n      0x24\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3325:3340   */\n      revert\n\n    auxdata: 0xa2646970667358221220c347efe5a3836a3532c7f801bf8385591dcf1156abb52c8d5551206fe80d6a6864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_881": {
									"entryPoint": null,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_990": {
									"entryPoint": null,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1044": {
									"entryPoint": 465,
									"id": 1044,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_521": {
									"entryPoint": 252,
									"id": 521,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_918": {
									"entryPoint": 499,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_855": {
									"entryPoint": 162,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_906": {
									"entryPoint": null,
									"id": 906,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5437:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2791:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2796:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2956:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2945:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2966:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2975:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2966:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2991:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2999:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2991:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3055:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3100:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3102:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3102:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3102:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3075:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3089:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3085:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3085:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3093:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3081:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3081:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3072:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3069:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3161:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3163:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3176:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3183:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3172:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3172:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3163:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3142:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3152:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3138:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3138:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3135:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3203:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3215:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3221:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3203:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3239:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3255:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3264:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3251:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3239:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3024:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3034:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3021:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3043:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3017:3:1",
																"statements": []
															},
															"src": "3013:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2895:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2902:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2915:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2922:4:1",
														"type": ""
													}
												],
												"src": "2867:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3405:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3414:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3405:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3428:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3373:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:16:1"
															},
															"nodeType": "YulIf",
															"src": "3363:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3476:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3490:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3499:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3490:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3513:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:12:1"
															},
															"nodeType": "YulIf",
															"src": "3452:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3564:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3578:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3578:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3601:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3557:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3632:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3667:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3669:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3669:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3669:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3652:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3662:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3649:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3649:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3646:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3702:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3715:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3725:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3711:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3702:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3740:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3625:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3544:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "3537:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3867:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3880:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3886:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3876:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3867:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3908:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3777:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3783:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3774:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3791:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3801:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3788:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3814:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3820:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3829:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3839:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3826:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3826:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3767:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:77:1"
															},
															"nodeType": "YulIf",
															"src": "3764:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3932:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3974:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3980:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "3955:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3936:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3945:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4036:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4004:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4021:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4017:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4017:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:1"
															},
															"nodeType": "YulIf",
															"src": "3998:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4078:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4065:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3324:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3330:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3343:5:1",
														"type": ""
													}
												],
												"src": "3294:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4183:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4223:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4192:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4183:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4144:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4150:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4163:5:1",
														"type": ""
													}
												],
												"src": "4105:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4312:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4327:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4330:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4312:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4390:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4392:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4392:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4392:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4361:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4354:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4354:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4368:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4375:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4384:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4371:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4371:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4365:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4365:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4351:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4351:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:45:1"
															},
															"nodeType": "YulIf",
															"src": "4341:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4281:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4284:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4290:7:1",
														"type": ""
													}
												],
												"src": "4250:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4597:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4625:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4648:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4659:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4644:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4644:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4664:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4637:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4698:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4683:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4703:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4676:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4746:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4758:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4746:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4574:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4588:4:1",
														"type": ""
													}
												],
												"src": "4423:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4852:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4855:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4848:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4848:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4880:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4882:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4882:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4882:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4872:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4875:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:10:1"
															},
															"nodeType": "YulIf",
															"src": "4866:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4814:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4817:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4823:3:1",
														"type": ""
													}
												],
												"src": "4783:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5014:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5024:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5066:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5077:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5059:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4983:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4994:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5005:4:1",
														"type": ""
													}
												],
												"src": "4913:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5269:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5297:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5279:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5320:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5331:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5316:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5316:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5359:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5370:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5375:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5348:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5426:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5411:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5403:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5246:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5260:4:1",
														"type": ""
													}
												],
												"src": "5095:340:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040805180820182526004808252634d454d4560e01b60208084018290528451808601909552918452908301529060036200004e8382620002e1565b5060046200005d8282620002e1565b50506005805460ff19169055506200007533620000a2565b6200009c33620000886012600a620004c2565b620000969061c350620004da565b620000fc565b6200050a565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001585760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200016660008383620001d1565b80600260008282546200017a9190620004f4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b620001db620001f3565b620001ee8383836001600160e01b038416565b505050565b60055460ff16156200023b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016200014f565b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026857607f821691505b6020821081036200028957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ee57600081815260208120601f850160051c81016020861015620002b85750805b601f850160051c820191505b81811015620002d957828155600101620002c4565b505050505050565b81516001600160401b03811115620002fd57620002fd6200023d565b62000315816200030e845462000253565b846200028f565b602080601f8311600181146200034d5760008415620003345750858301515b600019600386901b1c1916600185901b178555620002d9565b600085815260208120601f198616915b828110156200037e578886015182559484019460019091019084016200035d565b50858210156200039d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000404578160001904821115620003e857620003e8620003ad565b80851615620003f657918102915b93841c9390800290620003c8565b509250929050565b6000826200041d57506001620004bc565b816200042c57506000620004bc565b8160018114620004455760028114620004505762000470565b6001915050620004bc565b60ff841115620004645762000464620003ad565b50506001821b620004bc565b5060208310610133831016604e8410600b841016171562000495575081810a620004bc565b620004a18383620003c3565b8060001904821115620004b857620004b8620003ad565b0290505b92915050565b6000620004d360ff8416836200040c565b9392505050565b8082028115828204841417620004bc57620004bc620003ad565b80820180821115620004bc57620004bc620003ad565b610e5c806200051a6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b4114610269578063a457c2d714610271578063a9059cbb14610284578063dd62ed3e14610297578063f2fde38b146102aa57600080fd5b806370a08231146101f4578063715018a61461021d57806379cc6790146102255780638456cb59146102385780638da5cb5b1461024057600080fd5b806339509351116100f457806339509351146101a65780633f4ba83a146101b957806340c10f19146101c357806342966c68146101d65780635c975abb146101e957600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102bd565b6040516101469190610c8d565b60405180910390f35b61016261015d366004610cf7565b61034f565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610d21565b610369565b60405160128152602001610146565b6101626101b4366004610cf7565b61038d565b6101c16103af565b005b6101c16101d1366004610cf7565b6103c1565b6101c16101e4366004610d5d565b6103d7565b60055460ff16610162565b610176610202366004610d76565b6001600160a01b031660009081526020819052604090205490565b6101c16103e4565b6101c1610233366004610cf7565b6103f6565b6101c161040b565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610146565b61013961041b565b61016261027f366004610cf7565b61042a565b610162610292366004610cf7565b6104aa565b6101766102a5366004610d98565b6104b8565b6101c16102b8366004610d76565b6104e3565b6060600380546102cc90610dcb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610dcb565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b60003361035d818585610559565b60019150505b92915050565b60003361037785828561067e565b6103828585856106f8565b506001949350505050565b60003361035d8185856103a083836104b8565b6103aa9190610e05565b610559565b6103b76108a7565b6103bf610907565b565b6103c96108a7565b6103d38282610959565b5050565b6103e13382610a24565b50565b6103ec6108a7565b6103bf6000610b5a565b61040182338361067e565b6103d38282610a24565b6104136108a7565b6103bf610bb4565b6060600480546102cc90610dcb565b6000338161043882866104b8565b90508381101561049d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103828286868403610559565b60003361035d8185856106f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104eb6108a7565b6001600160a01b0381166105505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610494565b6103e181610b5a565b6001600160a01b0383166105bb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610494565b6001600160a01b03821661061c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610494565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061068a84846104b8565b905060001981146106f257818110156106e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610494565b6106f28484848403610559565b50505050565b6001600160a01b03831661075c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610494565b6001600160a01b0382166107be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610494565b6107c9838383610bf1565b6001600160a01b038316600090815260208190526040902054818110156108415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610494565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106f2565b6005546001600160a01b036101009091041633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610494565b61090f610bfe565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166109af5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610494565b6109bb60008383610bf1565b80600260008282546109cd9190610e05565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610494565b610a9082600083610bf1565b6001600160a01b03821660009081526020819052604090205481811015610b045760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610494565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610671565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610bbc610c47565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861093c3390565b610bf9610c47565b505050565b60055460ff166103bf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610494565b60055460ff16156103bf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610494565b600060208083528351808285015260005b81811015610cba57858101830151858201604001528201610c9e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cf257600080fd5b919050565b60008060408385031215610d0a57600080fd5b610d1383610cdb565b946020939093013593505050565b600080600060608486031215610d3657600080fd5b610d3f84610cdb565b9250610d4d60208501610cdb565b9150604084013590509250925092565b600060208284031215610d6f57600080fd5b5035919050565b600060208284031215610d8857600080fd5b610d9182610cdb565b9392505050565b60008060408385031215610dab57600080fd5b610db483610cdb565b9150610dc260208401610cdb565b90509250929050565b600181811c90821680610ddf57607f821691505b602082108103610dff57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561036357634e487b7160e01b600052601160045260246000fdfea2646970667358221220c347efe5a3836a3532c7f801bf8385591dcf1156abb52c8d5551206fe80d6a6864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x4D454D45 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP1 PUSH1 0x3 PUSH3 0x4E DUP4 DUP3 PUSH3 0x2E1 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x5D DUP3 DUP3 PUSH3 0x2E1 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x75 CALLER PUSH3 0xA2 JUMP JUMPDEST PUSH3 0x9C CALLER PUSH3 0x88 PUSH1 0x12 PUSH1 0xA PUSH3 0x4C2 JUMP JUMPDEST PUSH3 0x96 SWAP1 PUSH2 0xC350 PUSH3 0x4DA JUMP JUMPDEST PUSH3 0xFC JUMP JUMPDEST PUSH3 0x50A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x166 PUSH1 0x0 DUP4 DUP4 PUSH3 0x1D1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x17A SWAP2 SWAP1 PUSH3 0x4F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1DB PUSH3 0x1F3 JUMP JUMPDEST PUSH3 0x1EE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x23B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x14F JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x268 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x289 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2B8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2D9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2FD JUMPI PUSH3 0x2FD PUSH3 0x23D JUMP JUMPDEST PUSH3 0x315 DUP2 PUSH3 0x30E DUP5 SLOAD PUSH3 0x253 JUMP JUMPDEST DUP5 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x34D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x334 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x37E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x35D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x39D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x404 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3E8 JUMPI PUSH3 0x3E8 PUSH3 0x3AD JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3F6 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3C8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x41D JUMPI POP PUSH1 0x1 PUSH3 0x4BC JUMP JUMPDEST DUP2 PUSH3 0x42C JUMPI POP PUSH1 0x0 PUSH3 0x4BC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x445 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x450 JUMPI PUSH3 0x470 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4BC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x464 JUMPI PUSH3 0x464 PUSH3 0x3AD JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x4BC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x495 JUMPI POP DUP2 DUP2 EXP PUSH3 0x4BC JUMP JUMPDEST PUSH3 0x4A1 DUP4 DUP4 PUSH3 0x3C3 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4B8 JUMPI PUSH3 0x4B8 PUSH3 0x3AD JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D3 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x40C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x4BC JUMPI PUSH3 0x4BC PUSH3 0x3AD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x4BC JUMPI PUSH3 0x4BC PUSH3 0x3AD JUMP JUMPDEST PUSH2 0xE5C DUP1 PUSH3 0x51A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x162 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x162 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F8 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x377 DUP6 DUP3 DUP6 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x382 DUP6 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x3A0 DUP4 DUP4 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x907 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x959 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0xA24 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EC PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x0 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x401 DUP3 CALLER DUP4 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x413 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x438 DUP3 DUP7 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP5 DUP5 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x6F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x7C9 DUP4 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x90F PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x0 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0xA90 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBBC PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x93C CALLER SWAP1 JUMP JUMPDEST PUSH2 0xBF9 PUSH2 0xC47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCBA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC9E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD13 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3F DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 POP PUSH2 0xD4D PUSH1 0x20 DUP6 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xCDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH2 0xDC2 PUSH1 0x20 DUP5 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDDF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SELFBALANCE 0xEF 0xE5 LOG3 DUP4 PUSH11 0x3532C7F801BF8385591DCF GT JUMP 0xAB 0xB5 0x2C DUP14 SSTORE MLOAD KECCAK256 PUSH16 0xE80D6A6864736F6C6343000813003300 ",
							"sourceMap": "23642:593:0:-:0;;;23705:96;;;;;;;;;-1:-1:-1;6270:113:0;;;;;;;;;;;;-1:-1:-1;;;6270:113:0;;;;;;;;;;;;;;;;;;;;;;;6336:5;:13;6270:113;6336:5;:13;:::i;:::-;-1:-1:-1;6359:7:0;:17;6369:7;6359;:17;:::i;:::-;-1:-1:-1;;22035:7:0;:15;;-1:-1:-1;;22035:15:0;;;-1:-1:-1;19357:32:0;4240:10;19357:18;:32::i;:::-;23751:43:::1;23757:10;23777:16;7467:2:::0;23777::::1;:16;:::i;:::-;23769:24;::::0;:5:::1;:24;:::i;:::-;23751:5;:43::i;:::-;23642:593:::0;;20854:187;20946:6;;;-1:-1:-1;;;;;20962:17:0;;;20946:6;20962:17;;;-1:-1:-1;;;;;;20962:17:0;;;;;;20994:40;;20946:6;;;;;;;;20994:40;;20927:16;;20994:40;20917:124;20854:187;:::o;12861:535::-;-1:-1:-1;;;;;12944:21:0;;12936:65;;;;-1:-1:-1;;;12936:65:0;;4625:2:1;12936:65:0;;;4607:21:1;4664:2;4644:18;;;4637:30;4703:33;4683:18;;;4676:61;4754:18;;12936:65:0;;;;;;;;;13012:49;13041:1;13045:7;13054:6;13012:20;:49::i;:::-;13088:6;13072:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13240:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;13293:37;5059:25:1;;;13293:37:0;;5032:18:1;13293:37:0;;;;;;;12861:535;;:::o;24040:193::-;22278:19;:17;:19::i;:::-;24182:44:::1;24209:4:::0;24215:2;24219:6;-1:-1:-1;;;;;24182:44:0;;:::i:1;:::-;24040:193:::0;;;:::o;22806:106::-;22724:7;;;;22875:9;22867:38;;;;-1:-1:-1;;;22867:38:0;;5297:2:1;22867:38:0;;;5279:21:1;5336:2;5316:18;;;5309:30;-1:-1:-1;;;5355:18:1;;;5348:46;5411:18;;22867:38:0;5095:340:1;22867:38:0;22806:106::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:1;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:1;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:1;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:1;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:1;;;;;:::o;4105:140::-;4163:5;4192:47;4233:4;4223:8;4219:19;4213:4;4192:47;:::i;:::-;4183:56;4105:140;-1:-1:-1;;;4105:140:1:o;4250:168::-;4323:9;;;4354;;4371:15;;;4365:22;;4351:37;4341:71;;4392:18;;:::i;4783:125::-;4848:9;;;4869:10;;;4866:36;;;4882:18;;:::i;5095:340::-;23642:593:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_638": {
									"entryPoint": 1369,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1044": {
									"entryPoint": 3057,
									"id": 1044,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_593": {
									"entryPoint": 2596,
									"id": 593,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_798": {
									"entryPoint": 2215,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_521": {
									"entryPoint": 2393,
									"id": 521,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_945": {
									"entryPoint": 2996,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_918": {
									"entryPoint": 3143,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_929": {
									"entryPoint": 3070,
									"id": 929,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_681": {
									"entryPoint": 1662,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_855": {
									"entryPoint": 2906,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_464": {
									"entryPoint": 1784,
									"id": 464,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_961": {
									"entryPoint": 2311,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_259": {
									"entryPoint": 1208,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 847,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_744": {
									"entryPoint": 1014,
									"id": 744,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_723": {
									"entryPoint": 983,
									"id": 723,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_387": {
									"entryPoint": 1066,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_346": {
									"entryPoint": 909,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1023": {
									"entryPoint": 961,
									"id": 1023,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_172": {
									"entryPoint": 701,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_784": {
									"entryPoint": null,
									"id": 784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_999": {
									"entryPoint": 1035,
									"id": 999,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_906": {
									"entryPoint": null,
									"id": 906,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_812": {
									"entryPoint": 996,
									"id": 812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_182": {
									"entryPoint": 1051,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_317": {
									"entryPoint": 873,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_835": {
									"entryPoint": 1251,
									"id": 835,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_241": {
									"entryPoint": 1194,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1008": {
									"entryPoint": 943,
									"id": 1008,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8774:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:1"
															},
															"nodeType": "YulIf",
															"src": "2165:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:1",
														"type": ""
													}
												],
												"src": "2085:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:1",
														"type": ""
													}
												],
												"src": "2276:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:1"
															},
															"nodeType": "YulIf",
															"src": "2581:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:1",
														"type": ""
													}
												],
												"src": "2484:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2922:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2924:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:26:1"
															},
															"nodeType": "YulIf",
															"src": "2892:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:38:1"
															},
															"nodeType": "YulIf",
															"src": "2962:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2784:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2793:6:1",
														"type": ""
													}
												],
												"src": "2749:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:174:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3203:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3206:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3199:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3267:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3272:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3263:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3253:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3304:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3307:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3297:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3297:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3335:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3325:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3325:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3325:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3223:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3226:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3220:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:10:1"
															},
															"nodeType": "YulIf",
															"src": "3217:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3165:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3168:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3174:3:1",
														"type": ""
													}
												],
												"src": "3134:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3552:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3636:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3621:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3621:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3641:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3707:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3712:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3729:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3741:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3752:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3729:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3512:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3526:4:1",
														"type": ""
													}
												],
												"src": "3361:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3951:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4042:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4027:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4047:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4102:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4113:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4098:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4118:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4091:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4136:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4159:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4136:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3932:4:1",
														"type": ""
													}
												],
												"src": "3767:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4348:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4365:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4358:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4415:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4388:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4449:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4434:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4454:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4427:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4520:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4525:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4498:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4541:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4553:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4564:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4541:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4325:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4339:4:1",
														"type": ""
													}
												],
												"src": "4174:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4753:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4763:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4843:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4854:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4859:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4925:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4910:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4930:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4903:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4944:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4956:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4967:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4952:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4944:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4730:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4744:4:1",
														"type": ""
													}
												],
												"src": "4579:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5156:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5166:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5207:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5218:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5203:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5203:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5223:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5246:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5257:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5242:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5262:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5235:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5303:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5311:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5303:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5133:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5147:4:1",
														"type": ""
													}
												],
												"src": "4982:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5514:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5531:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5576:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5581:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5554:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5615:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5600:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5620:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5593:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5686:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5671:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5691:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5664:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5708:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5720:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5731:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5708:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5491:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5505:4:1",
														"type": ""
													}
												],
												"src": "5340:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5920:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5937:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5930:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5971:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5982:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5987:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6010:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6021:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6026:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5999:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6092:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6097:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6070:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6070:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6112:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6124:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6112:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5897:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5911:4:1",
														"type": ""
													}
												],
												"src": "5746:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6324:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6341:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6334:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6334:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6391:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6364:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6414:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6425:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6410:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6410:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6430:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6403:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6403:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6496:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6481:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6501:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6474:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6474:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6519:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6531:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6542:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6519:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6301:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6315:4:1",
														"type": ""
													}
												],
												"src": "6150:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6731:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6748:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6741:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6782:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6793:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6778:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6778:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6771:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6821:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6832:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6817:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6837:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6810:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6881:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6893:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6904:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6889:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6881:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6708:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6722:4:1",
														"type": ""
													}
												],
												"src": "6557:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7092:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7109:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7120:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7102:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7154:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7139:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7159:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7132:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7182:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7193:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7178:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7198:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7171:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7241:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7241:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7069:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7083:4:1",
														"type": ""
													}
												],
												"src": "6918:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7452:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7469:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7480:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7462:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7514:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7499:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7519:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7492:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7492:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7553:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7538:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7558:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7531:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7613:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7624:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7629:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7602:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7602:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7602:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7642:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7665:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7642:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7429:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7443:4:1",
														"type": ""
													}
												],
												"src": "7278:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7854:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7871:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7882:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7864:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7864:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7916:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7901:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7921:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7894:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7944:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7955:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7940:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7940:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7960:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7933:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8015:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8026:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8011:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8031:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8045:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8057:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8068:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8053:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8045:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7831:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7845:4:1",
														"type": ""
													}
												],
												"src": "7680:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8257:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8274:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8285:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8267:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8267:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8308:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8319:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8304:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8297:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8297:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8347:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8358:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8363:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8395:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8407:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8418:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8403:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8395:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8234:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8248:4:1",
														"type": ""
													}
												],
												"src": "8083:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8606:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8623:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8634:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8616:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8668:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8653:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8673:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8707:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8692:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8712:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8685:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8740:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8740:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8583:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8597:4:1",
														"type": ""
													}
												],
												"src": "8432:340:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b4114610269578063a457c2d714610271578063a9059cbb14610284578063dd62ed3e14610297578063f2fde38b146102aa57600080fd5b806370a08231146101f4578063715018a61461021d57806379cc6790146102255780638456cb59146102385780638da5cb5b1461024057600080fd5b806339509351116100f457806339509351146101a65780633f4ba83a146101b957806340c10f19146101c357806342966c68146101d65780635c975abb146101e957600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102bd565b6040516101469190610c8d565b60405180910390f35b61016261015d366004610cf7565b61034f565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610d21565b610369565b60405160128152602001610146565b6101626101b4366004610cf7565b61038d565b6101c16103af565b005b6101c16101d1366004610cf7565b6103c1565b6101c16101e4366004610d5d565b6103d7565b60055460ff16610162565b610176610202366004610d76565b6001600160a01b031660009081526020819052604090205490565b6101c16103e4565b6101c1610233366004610cf7565b6103f6565b6101c161040b565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610146565b61013961041b565b61016261027f366004610cf7565b61042a565b610162610292366004610cf7565b6104aa565b6101766102a5366004610d98565b6104b8565b6101c16102b8366004610d76565b6104e3565b6060600380546102cc90610dcb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610dcb565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b60003361035d818585610559565b60019150505b92915050565b60003361037785828561067e565b6103828585856106f8565b506001949350505050565b60003361035d8185856103a083836104b8565b6103aa9190610e05565b610559565b6103b76108a7565b6103bf610907565b565b6103c96108a7565b6103d38282610959565b5050565b6103e13382610a24565b50565b6103ec6108a7565b6103bf6000610b5a565b61040182338361067e565b6103d38282610a24565b6104136108a7565b6103bf610bb4565b6060600480546102cc90610dcb565b6000338161043882866104b8565b90508381101561049d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103828286868403610559565b60003361035d8185856106f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104eb6108a7565b6001600160a01b0381166105505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610494565b6103e181610b5a565b6001600160a01b0383166105bb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610494565b6001600160a01b03821661061c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610494565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061068a84846104b8565b905060001981146106f257818110156106e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610494565b6106f28484848403610559565b50505050565b6001600160a01b03831661075c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610494565b6001600160a01b0382166107be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610494565b6107c9838383610bf1565b6001600160a01b038316600090815260208190526040902054818110156108415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610494565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106f2565b6005546001600160a01b036101009091041633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610494565b61090f610bfe565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166109af5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610494565b6109bb60008383610bf1565b80600260008282546109cd9190610e05565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610494565b610a9082600083610bf1565b6001600160a01b03821660009081526020819052604090205481811015610b045760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610494565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610671565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610bbc610c47565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861093c3390565b610bf9610c47565b505050565b60055460ff166103bf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610494565b60055460ff16156103bf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610494565b600060208083528351808285015260005b81811015610cba57858101830151858201604001528201610c9e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cf257600080fd5b919050565b60008060408385031215610d0a57600080fd5b610d1383610cdb565b946020939093013593505050565b600080600060608486031215610d3657600080fd5b610d3f84610cdb565b9250610d4d60208501610cdb565b9150604084013590509250925092565b600060208284031215610d6f57600080fd5b5035919050565b600060208284031215610d8857600080fd5b610d9182610cdb565b9392505050565b60008060408385031215610dab57600080fd5b610db483610cdb565b9150610dc260208401610cdb565b90509250929050565b600181811c90821680610ddf57607f821691505b602082108103610dff57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561036357634e487b7160e01b600052601160045260246000fdfea2646970667358221220c347efe5a3836a3532c7f801bf8385591dcf1156abb52c8d5551206fe80d6a6864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x162 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x162 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F8 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x377 DUP6 DUP3 DUP6 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x382 DUP6 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x3A0 DUP4 DUP4 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x907 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x959 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0xA24 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EC PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x0 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x401 DUP3 CALLER DUP4 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x413 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x438 DUP3 DUP7 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP5 DUP5 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x6F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x7C9 DUP4 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x90F PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x0 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0xA90 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBBC PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x93C CALLER SWAP1 JUMP JUMPDEST PUSH2 0xBF9 PUSH2 0xC47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCBA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC9E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD13 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3F DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 POP PUSH2 0xD4D PUSH1 0x20 DUP6 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xCDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH2 0xDC2 PUSH1 0x20 DUP5 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDDF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SELFBALANCE 0xEF 0xE5 LOG3 DUP4 PUSH11 0x3532C7F801BF8385591DCF GT JUMP 0xAB 0xB5 0x2C DUP14 SSTORE MLOAD KECCAK256 PUSH16 0xE80D6A6864736F6C6343000813003300 ",
							"sourceMap": "23642:593:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6448:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8725:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;8725:197:0;1004:187:1;7536:106:0;7623:12;;7536:106;;;1342:25:1;;;1330:2;1315:18;7536:106:0;1196:177:1;9484:286:0;;;;;;:::i;:::-;;:::i;7385:91::-;;;7467:2;1853:36:1;;1841:2;1826:18;7385:91:0;1711:184:1;10165:234:0;;;;;;:::i;:::-;;:::i;23872:63::-;;;:::i;:::-;;23941:93;;;;;;:::i;:::-;;:::i;17870:89::-;;;;;;:::i;:::-;;:::i;22654:84::-;22724:7;;;;22654:84;;7700:125;;;;;;:::i;:::-;-1:-1:-1;;;;;7800:18:0;7774:7;7800:18;;;;;;;;;;;;7700:125;20252:101;;;:::i;18265:161::-;;;;;;:::i;:::-;;:::i;23807:59::-;;;:::i;19622:85::-;19694:6;;;;;-1:-1:-1;;;;;19694:6:0;19622:85;;-1:-1:-1;;;;;2440:32:1;;;2422:51;;2410:2;2395:18;19622:85:0;2276:203:1;6659:102:0;;;:::i;10886:427::-;;;;;;:::i;:::-;;:::i;8021:189::-;;;;;;:::i;:::-;;:::i;8268:149::-;;;;;;:::i;:::-;;:::i;20502:198::-;;;;;;:::i;:::-;;:::i;6448:98::-;6502:13;6534:5;6527:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6448:98;:::o;8725:197::-;8808:4;4240:10;8862:32;4240:10;8878:7;8887:6;8862:8;:32::i;:::-;8911:4;8904:11;;;8725:197;;;;;:::o;9484:286::-;9611:4;4240:10;9667:38;9683:4;4240:10;9698:6;9667:15;:38::i;:::-;9715:27;9725:4;9731:2;9735:6;9715:9;:27::i;:::-;-1:-1:-1;9759:4:0;;9484:286;-1:-1:-1;;;;9484:286:0:o;10165:234::-;10253:4;4240:10;10307:64;4240:10;10323:7;10360:10;10332:25;4240:10;10323:7;10332:9;:25::i;:::-;:38;;;;:::i;:::-;10307:8;:64::i;23872:63::-;19515:13;:11;:13::i;:::-;23918:10:::1;:8;:10::i;:::-;23872:63::o:0;23941:93::-;19515:13;:11;:13::i;:::-;24010:17:::1;24016:2;24020:6;24010:5;:17::i;:::-;23941:93:::0;;:::o;17870:89::-;17925:27;4240:10;17945:6;17925:5;:27::i;:::-;17870:89;:::o;20252:101::-;19515:13;:11;:13::i;:::-;20316:30:::1;20343:1;20316:18;:30::i;18265:161::-:0;18341:46;18357:7;4240:10;18380:6;18341:15;:46::i;:::-;18397:22;18403:7;18412:6;18397:5;:22::i;23807:59::-;19515:13;:11;:13::i;:::-;23851:8:::1;:6;:8::i;6659:102::-:0;6715:13;6747:7;6740:14;;;;;:::i;10886:427::-;10979:4;4240:10;10979:4;11060:25;4240:10;11077:7;11060:9;:25::i;:::-;11033:52;;11123:15;11103:16;:35;;11095:85;;;;-1:-1:-1;;;11095:85:0;;3563:2:1;11095:85:0;;;3545:21:1;3602:2;3582:18;;;3575:30;3641:34;3621:18;;;3614:62;-1:-1:-1;;;3692:18:1;;;3685:35;3737:19;;11095:85:0;;;;;;;;;11214:60;11223:5;11230:7;11258:15;11239:16;:34;11214:8;:60::i;8021:189::-;8100:4;4240:10;8154:28;4240:10;8171:2;8175:6;8154:9;:28::i;8268:149::-;-1:-1:-1;;;;;8383:18:0;;;8357:7;8383:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8268:149::o;20502:198::-;19515:13;:11;:13::i;:::-;-1:-1:-1;;;;;20590:22:0;::::1;20582:73;;;::::0;-1:-1:-1;;;20582:73:0;;3969:2:1;20582:73:0::1;::::0;::::1;3951:21:1::0;4008:2;3988:18;;;3981:30;4047:34;4027:18;;;4020:62;-1:-1:-1;;;4098:18:1;;;4091:36;4144:19;;20582:73:0::1;3767:402:1::0;20582:73:0::1;20665:28;20684:8;20665:18;:28::i;14798:370::-:0;-1:-1:-1;;;;;14929:19:0;;14921:68;;;;-1:-1:-1;;;14921:68:0;;4376:2:1;14921:68:0;;;4358:21:1;4415:2;4395:18;;;4388:30;4454:34;4434:18;;;4427:62;-1:-1:-1;;;4505:18:1;;;4498:34;4549:19;;14921:68:0;4174:400:1;14921:68:0;-1:-1:-1;;;;;15007:21:0;;14999:68;;;;-1:-1:-1;;;14999:68:0;;4781:2:1;14999:68:0;;;4763:21:1;4820:2;4800:18;;;4793:30;4859:34;4839:18;;;4832:62;-1:-1:-1;;;4910:18:1;;;4903:32;4952:19;;14999:68:0;4579:398:1;14999:68:0;-1:-1:-1;;;;;15078:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15129:32;;1342:25:1;;;15129:32:0;;1315:18:1;15129:32:0;;;;;;;;14798:370;;;:::o;15449:441::-;15579:24;15606:25;15616:5;15623:7;15606:9;:25::i;:::-;15579:52;;-1:-1:-1;;15645:16:0;:37;15641:243;;15726:6;15706:16;:26;;15698:68;;;;-1:-1:-1;;;15698:68:0;;5184:2:1;15698:68:0;;;5166:21:1;5223:2;5203:18;;;5196:30;5262:31;5242:18;;;5235:59;5311:18;;15698:68:0;4982:353:1;15698:68:0;15808:51;15817:5;15824:7;15852:6;15833:16;:25;15808:8;:51::i;:::-;15569:321;15449:441;;;:::o;11767:818::-;-1:-1:-1;;;;;11893:18:0;;11885:68;;;;-1:-1:-1;;;11885:68:0;;5542:2:1;11885:68:0;;;5524:21:1;5581:2;5561:18;;;5554:30;5620:34;5600:18;;;5593:62;-1:-1:-1;;;5671:18:1;;;5664:35;5716:19;;11885:68:0;5340:401:1;11885:68:0;-1:-1:-1;;;;;11971:16:0;;11963:64;;;;-1:-1:-1;;;11963:64:0;;5948:2:1;11963:64:0;;;5930:21:1;5987:2;5967:18;;;5960:30;6026:34;6006:18;;;5999:62;-1:-1:-1;;;6077:18:1;;;6070:33;6120:19;;11963:64:0;5746:399:1;11963:64:0;12038:38;12059:4;12065:2;12069:6;12038:20;:38::i;:::-;-1:-1:-1;;;;;12109:15:0;;12087:19;12109:15;;;;;;;;;;;12142:21;;;;12134:72;;;;-1:-1:-1;;;12134:72:0;;6352:2:1;12134:72:0;;;6334:21:1;6391:2;6371:18;;;6364:30;6430:34;6410:18;;;6403:62;-1:-1:-1;;;6481:18:1;;;6474:36;6527:19;;12134:72:0;6150:402:1;12134:72:0;-1:-1:-1;;;;;12240:15:0;;;:9;:15;;;;;;;;;;;12258:20;;;12240:38;;12455:13;;;;;;;;;;:23;;;;;;12504:26;;1342:25:1;;;12455:13:0;;12504:26;;1315:18:1;12504:26:0;;;;;;;12541:37;13716:659;19780:130;19694:6;;-1:-1:-1;;;;;19694:6:0;;;;;4240:10;19843:23;19835:68;;;;-1:-1:-1;;;19835:68:0;;6759:2:1;19835:68:0;;;6741:21:1;;;6778:18;;;6771:30;6837:34;6817:18;;;6810:62;6889:18;;19835:68:0;6557:356:1;23472:117:0;22525:16;:14;:16::i;:::-;23530:7:::1;:15:::0;;-1:-1:-1;;23530:15:0::1;::::0;;23560:22:::1;4240:10:::0;23569:12:::1;23560:22;::::0;-1:-1:-1;;;;;2440:32:1;;;2422:51;;2410:2;2395:18;23560:22:0::1;;;;;;;23472:117::o:0;12861:535::-;-1:-1:-1;;;;;12944:21:0;;12936:65;;;;-1:-1:-1;;;12936:65:0;;7120:2:1;12936:65:0;;;7102:21:1;7159:2;7139:18;;;7132:30;7198:33;7178:18;;;7171:61;7249:18;;12936:65:0;6918:355:1;12936:65:0;13012:49;13041:1;13045:7;13054:6;13012:20;:49::i;:::-;13088:6;13072:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13240:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;13293:37;1342:25:1;;;13293:37:0;;1315:18:1;13293:37:0;;;;;;;23941:93;;:::o;13716:659::-;-1:-1:-1;;;;;13799:21:0;;13791:67;;;;-1:-1:-1;;;13791:67:0;;7480:2:1;13791:67:0;;;7462:21:1;7519:2;7499:18;;;7492:30;7558:34;7538:18;;;7531:62;-1:-1:-1;;;7609:18:1;;;7602:31;7650:19;;13791:67:0;7278:397:1;13791:67:0;13869:49;13890:7;13907:1;13911:6;13869:20;:49::i;:::-;-1:-1:-1;;;;;13954:18:0;;13929:22;13954:18;;;;;;;;;;;13990:24;;;;13982:71;;;;-1:-1:-1;;;13982:71:0;;7882:2:1;13982:71:0;;;7864:21:1;7921:2;7901:18;;;7894:30;7960:34;7940:18;;;7933:62;-1:-1:-1;;;8011:18:1;;;8004:32;8053:19;;13982:71:0;7680:398:1;13982:71:0;-1:-1:-1;;;;;14087:18:0;;:9;:18;;;;;;;;;;;14108:23;;;14087:44;;14224:12;:22;;;;;;;14272:37;1342:25:1;;;14087:9:0;;:18;14272:37;;1315:18:1;14272:37:0;1196:177:1;20854:187:0;20946:6;;;-1:-1:-1;;;;;20962:17:0;;;20946:6;20962:17;;;-1:-1:-1;;;;;;20962:17:0;;;;;;20994:40;;20946:6;;;;;;;;20994:40;;20927:16;;20994:40;20917:124;20854:187;:::o;23225:115::-;22278:19;:17;:19::i;:::-;23284:7:::1;:14:::0;;-1:-1:-1;;23284:14:0::1;23294:4;23284:14;::::0;;23313:20:::1;23320:12;4240:10:::0;;4161:96;24040:193;22278:19;:17;:19::i;:::-;13781:594;13716:659;;:::o;22984:106::-;22724:7;;;;23042:41;;;;-1:-1:-1;;;23042:41:0;;8285:2:1;23042:41:0;;;8267:21:1;8324:2;8304:18;;;8297:30;-1:-1:-1;;;8343:18:1;;;8336:50;8403:18;;23042:41:0;8083:344:1;22806:106:0;22724:7;;;;22875:9;22867:38;;;;-1:-1:-1;;;22867:38:0;;8634:2:1;22867:38:0;;;8616:21:1;8673:2;8653:18;;;8646:30;-1:-1:-1;;;8692:18:1;;;8685:46;8748:18;;22867:38:0;8432:340:1;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:1;;1900:180;-1:-1:-1;1900:180:1:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:1:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "735200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24652",
								"balanceOf(address)": "2563",
								"burn(uint256)": "53038",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "289",
								"decreaseAllowance(address,uint256)": "26995",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2441",
								"pause()": "infinite",
								"paused()": "2415",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "53305",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28479",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23642,
									"end": 24235,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23705,
									"end": 23801,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D454D45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6341,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6270,
									"end": 6383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6341,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6336,
									"end": 6349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6336,
									"end": 6349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6359,
									"end": 6366,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6369,
									"end": 6376,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6366,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6359,
									"end": 6376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6359,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 22035,
									"end": 22042,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22035,
									"end": 22050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19357,
									"end": 19389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 4240,
									"end": 4250,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19375,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 19357,
									"end": 19389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19389,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 19357,
									"end": 19389,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23751,
									"end": 23794,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23757,
									"end": 23767,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 23777,
									"end": 23793,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7467,
									"end": 7469,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23777,
									"end": 23779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 23777,
									"end": 23793,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 23777,
									"end": 23793,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23777,
									"end": 23793,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23777,
									"end": 23793,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23769,
									"end": 23793,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 23769,
									"end": 23793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23769,
									"end": 23774,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "C350"
								},
								{
									"begin": 23769,
									"end": 23793,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 23769,
									"end": 23793,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23769,
									"end": 23793,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 23769,
									"end": 23793,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23751,
									"end": 23756,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23751,
									"end": 23794,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23751,
									"end": 23794,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23751,
									"end": 23794,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20854,
									"end": 21041,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 20854,
									"end": 21041,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 20962,
									"end": 20979,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20927,
									"end": 20943,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20927,
									"end": 20943,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20994,
									"end": 21034,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 20917,
									"end": 21041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20854,
									"end": 21041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20854,
									"end": 21041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12861,
									"end": 13396,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12861,
									"end": 13396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12944,
									"end": 12965,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12944,
									"end": 12965,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 4627,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4607,
									"end": 4628,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4666,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4637,
									"end": 4667,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4703,
									"end": 4736,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4676,
									"end": 4737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4772,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4754,
									"end": 4772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 12936,
									"end": 13001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13012,
									"end": 13061,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 13041,
									"end": 13042,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13045,
									"end": 13052,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13054,
									"end": 13060,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13012,
									"end": 13032,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 13012,
									"end": 13061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13012,
									"end": 13061,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 13012,
									"end": 13061,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13088,
									"end": 13094,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13084,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13072,
									"end": 13084,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 13072,
									"end": 13094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13072,
									"end": 13094,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13258,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13268,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13268,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13240,
									"end": 13268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5032,
									"end": 5050,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13293,
									"end": 13330,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12861,
									"end": 13396,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12861,
									"end": 13396,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12861,
									"end": 13396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24040,
									"end": 24233,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 24040,
									"end": 24233,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22278,
									"end": 22297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 22278,
									"end": 22295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 22278,
									"end": 22297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22278,
									"end": 22297,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 22278,
									"end": 22297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24182,
									"end": 24226,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 24209,
									"end": 24213,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24217,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24219,
									"end": 24225,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 24182,
									"end": 24226,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 24182,
									"end": 24226,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24182,
									"end": 24226,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24182,
									"end": 24226,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 24182,
									"end": 24226,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24040,
									"end": 24233,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24040,
									"end": 24233,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24040,
									"end": 24233,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24040,
									"end": 24233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22806,
									"end": 22912,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 22806,
									"end": 22912,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22724,
									"end": 22731,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 22724,
									"end": 22731,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22724,
									"end": 22731,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 22724,
									"end": 22731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22875,
									"end": 22884,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5297,
									"end": 5299,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5279,
									"end": 5300,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5336,
									"end": 5338,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5309,
									"end": 5339,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5348,
									"end": 5394,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5411,
									"end": 5429,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 5411,
									"end": 5429,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 22867,
									"end": 22905,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22806,
									"end": 22912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2796,
									"end": 2806,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2787,
									"end": 2807,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2784,
									"end": 2785,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2777,
									"end": 2808,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2827,
									"end": 2831,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2817,
									"end": 2832,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2851,
									"end": 2855,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 2856,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2999,
									"end": 3004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3024,
									"end": 3032,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3042,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3093,
									"end": 3097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3085,
									"end": 3091,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3081,
									"end": 3098,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3075,
									"end": 3079,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3099,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3102,
									"end": 3120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3142,
									"end": 3150,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3138,
									"end": 3160,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3373,
									"end": 3381,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3414,
									"end": 3415,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3499,
									"end": 3500,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3544,
									"end": 3548,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3562,
									"end": 3563,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3630,
									"end": 3631,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3588,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3662,
									"end": 3665,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3652,
									"end": 3660,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3649,
									"end": 3666,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3669,
									"end": 3687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3841,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3829,
									"end": 3837,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3826,
									"end": 3842,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3820,
									"end": 3823,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3811,
									"end": 3824,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3807,
									"end": 3843,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3803,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 3791,
									"end": 3799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3788,
									"end": 3804,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 3777,
									"end": 3781,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3786,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 3805,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3844,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3980,
									"end": 3988,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3974,
									"end": 3978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3955,
									"end": 3989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4025,
									"end": 4031,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4021,
									"end": 4022,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4017,
									"end": 4023,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4013,
									"end": 4032,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4004,
									"end": 4011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4001,
									"end": 4033,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4036,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4233,
									"end": 4237,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4223,
									"end": 4231,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4219,
									"end": 4238,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 4192,
									"end": 4239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4183,
									"end": 4239,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4105,
									"end": 4245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4351,
									"end": 4388,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4392,
									"end": 4410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4908,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 4783,
									"end": 4908,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4882,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4882,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4882,
									"end": 4900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23642,
									"end": 24235,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c347efe5a3836a3532c7f801bf8385591dcf1156abb52c8d5551206fe80d6a6864736f6c63430008130033",
									".code": [
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23642,
											"end": 24235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6448,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6448,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8725,
											"end": 8922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8725,
											"end": 8922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7635,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7623,
											"end": 7635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9484,
											"end": 9770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9484,
											"end": 9770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10165,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10165,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23872,
											"end": 23935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23941,
											"end": 24034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23941,
											"end": 24034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17870,
											"end": 17959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17870,
											"end": 17959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22654,
											"end": 22738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7700,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7825,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20252,
											"end": 20353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18265,
											"end": 18426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18265,
											"end": 18426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23866,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23807,
											"end": 23866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23807,
											"end": 23866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23807,
											"end": 23866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19622,
											"end": 19707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6659,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10886,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10886,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8021,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8021,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8268,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 8268,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 20502,
											"end": 20700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 20502,
											"end": 20700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6515,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6534,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6527,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6527,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8862,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 8885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8862,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8862,
											"end": 8894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8862,
											"end": 8894,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8862,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8904,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8904,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8904,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9683,
											"end": 9687,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9704,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 9667,
											"end": 9705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9725,
											"end": 9729,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9735,
											"end": 9741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9715,
											"end": 9742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9770,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9484,
											"end": 9770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10165,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10253,
											"end": 10257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10332,
											"end": 10357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10357,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10332,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10332,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10332,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10307,
											"end": 10371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23872,
											"end": 23935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23918,
											"end": 23926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23918,
											"end": 23928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23918,
											"end": 23928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24016,
											"end": 24018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24020,
											"end": 24026,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24010,
											"end": 24027,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24010,
											"end": 24027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17925,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17925,
											"end": 17952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17925,
											"end": 17952,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 17925,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17870,
											"end": 17959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20252,
											"end": 20353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20316,
											"end": 20346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20343,
											"end": 20344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20316,
											"end": 20334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20316,
											"end": 20346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18265,
											"end": 18426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18341,
											"end": 18387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18357,
											"end": 18364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18380,
											"end": 18386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18341,
											"end": 18356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 18341,
											"end": 18387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18341,
											"end": 18387,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18341,
											"end": 18387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18397,
											"end": 18419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18403,
											"end": 18410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18412,
											"end": 18418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18397,
											"end": 18402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 18397,
											"end": 18419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23866,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23807,
											"end": 23866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23851,
											"end": 23859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23851,
											"end": 23857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23851,
											"end": 23859,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6659,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6715,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6747,
											"end": 6754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6740,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10886,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10979,
											"end": 10983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10979,
											"end": 10983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11084,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 11060,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11085,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 11060,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11095,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11223,
											"end": 11228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11237,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11273,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11214,
											"end": 11274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8021,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8100,
											"end": 8104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8175,
											"end": 8181,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 8154,
											"end": 8182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 8268,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 20502,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 19515,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19515,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 19515,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20590,
											"end": 20612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20582,
											"end": 20655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3767,
											"end": 4169,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20582,
											"end": 20655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20665,
											"end": 20693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 20684,
											"end": 20692,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20665,
											"end": 20683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20665,
											"end": 20693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14929,
											"end": 14948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4568,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4549,
											"end": 4568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4174,
											"end": 4574,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14921,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4822,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 4893,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4952,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4579,
											"end": 4977,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 14999,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15114,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15114,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15161,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 15168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15579,
											"end": 15603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 15616,
											"end": 15621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15623,
											"end": 15630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15606,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15606,
											"end": 15631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15579,
											"end": 15631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15579,
											"end": 15631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15645,
											"end": 15661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15645,
											"end": 15682,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15641,
											"end": 15884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15726,
											"end": 15732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5166,
											"end": 5187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5225,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5293,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4982,
											"end": 5335,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15698,
											"end": 15766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15817,
											"end": 15822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15824,
											"end": 15831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15852,
											"end": 15858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15833,
											"end": 15849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15833,
											"end": 15858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15808,
											"end": 15859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15859,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15808,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11767,
											"end": 12585,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11767,
											"end": 12585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5524,
											"end": 5545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5583,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5340,
											"end": 5741,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11885,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11971,
											"end": 11987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11971,
											"end": 11987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5930,
											"end": 5951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 5990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6060,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6120,
											"end": 6139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5746,
											"end": 6145,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11963,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12038,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12059,
											"end": 12063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12069,
											"end": 12075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12038,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12038,
											"end": 12076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12038,
											"end": 12076,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12038,
											"end": 12076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12087,
											"end": 12106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6464,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6150,
											"end": 6552,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12134,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12278,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12468,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12530,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12541,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13716,
											"end": 14375,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19780,
											"end": 19910,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19780,
											"end": 19910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19694,
											"end": 19700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19843,
											"end": 19866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6801,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19835,
											"end": 19903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6557,
											"end": 6913,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23472,
											"end": 23589,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23472,
											"end": 23589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 22525,
											"end": 22539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 22525,
											"end": 22541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22541,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 22525,
											"end": 22541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23530,
											"end": 23545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23545,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23569,
											"end": 23581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 23569,
											"end": 23581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23560,
											"end": 23582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23560,
											"end": 23582,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 23472,
											"end": 23589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 13396,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12861,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12944,
											"end": 12965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12944,
											"end": 12965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7120,
											"end": 7122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7161,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7132,
											"end": 7162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7231,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7171,
											"end": 7232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6918,
											"end": 7273,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12936,
											"end": 13001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13012,
											"end": 13061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13041,
											"end": 13042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13052,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13012,
											"end": 13032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13012,
											"end": 13061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13012,
											"end": 13061,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13012,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13084,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13072,
											"end": 13084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13072,
											"end": 13094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13268,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13268,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 24034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13716,
											"end": 14375,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13716,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13799,
											"end": 13820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13799,
											"end": 13820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7462,
											"end": 7483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7278,
											"end": 7675,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 13791,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13869,
											"end": 13918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 13890,
											"end": 13897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13907,
											"end": 13908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13911,
											"end": 13917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13869,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13869,
											"end": 13918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13869,
											"end": 13918,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 13869,
											"end": 13918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13929,
											"end": 13951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13990,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13990,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13990,
											"end": 14014,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13990,
											"end": 14014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 7884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7933,
											"end": 7995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7680,
											"end": 8078,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13982,
											"end": 14053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14108,
											"end": 14131,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14108,
											"end": 14131,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14108,
											"end": 14131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14131,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14224,
											"end": 14236,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14272,
											"end": 14309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14096,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14272,
											"end": 14309,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14272,
											"end": 14309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20854,
											"end": 21041,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20854,
											"end": 21041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20979,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20927,
											"end": 20943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20927,
											"end": 20943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21034,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20917,
											"end": 21041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 21041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 21041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23340,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23225,
											"end": 23340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 22278,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 22278,
											"end": 22297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23284,
											"end": 23298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23294,
											"end": 23298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23284,
											"end": 23298,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23313,
											"end": 23333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 23320,
											"end": 23332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4257,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24040,
											"end": 24233,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 24040,
											"end": 24233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 22278,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 22278,
											"end": 22297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 14375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13716,
											"end": 14375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13716,
											"end": 14375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13716,
											"end": 14375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23090,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 22984,
											"end": 23090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23042,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8083,
											"end": 8427,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22806,
											"end": 22912,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 22806,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22724,
											"end": 22731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8675,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8685,
											"end": 8731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22867,
											"end": 22905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8432,
											"end": 8772,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3263,
											"end": 3283,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3311,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3339,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3340,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"DEX.sol_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"MEME\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "DEX.sol_flattened.sol:MEME",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "DEX.sol_flattened.sol:MEME",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "DEX.sol_flattened.sol:MEME",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "DEX.sol_flattened.sol:MEME",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "DEX.sol_flattened.sol:MEME",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 872,
								"contract": "DEX.sol_flattened.sol:MEME",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 751,
								"contract": "DEX.sol_flattened.sol:MEME",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 751,
								"contract": "DEX.sol_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol_flattened.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DEX.sol_flattened.sol\":{\"keccak256\":\"0x087efce09940030279c2913d813b77daa740413c849d665adf9fc521edbfd76d\",\"urls\":[\"bzz-raw://ab3c2319eadcb6994792998b40bf90ffe3bcdcb1f40d962f667ca8e6236662d1\",\"dweb:/ipfs/QmdMLcpzhVLXLyawrWei26oYAMncvYu2MycqoC3BrkvJAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 872,
								"contract": "DEX.sol_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> DEX.sol_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "DEX.sol_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"DEX.sol_flattened.sol": {
				"ast": {
					"absolutePath": "DEX.sol_flattened.sol",
					"exportedSymbols": {
						"Context": [
							121
						],
						"DEX": [
							1942
						],
						"ERC20": [
							704
						],
						"ERC20Burnable": [
							745
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"MEME": [
							1045
						],
						"Ownable": [
							856
						],
						"Pausable": [
							962
						]
					},
					"id": 1943,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "133:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "158:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "239:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "252:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "421:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "430:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "468:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "452:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "415:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "493:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "652:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "661:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "709:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:63:0"
									},
									"src": "646:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "730:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "810:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:0"
									},
									"scope": 77,
									"src": "801:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "862:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "966:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "998:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:9:0"
									},
									"scope": 77,
									"src": "939:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1013:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1229:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1246:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1238:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1258:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1250:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1284:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1284:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:6:0"
									},
									"scope": 77,
									"src": "1220:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1296:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1574:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1592:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1584:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:9:0"
									},
									"scope": 77,
									"src": "1565:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1654:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2310:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2326:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2318:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2343:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2335:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2369:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:6:0"
									},
									"scope": 77,
									"src": "2301:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2381:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2682:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2712:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2704:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2784:6:0"
									},
									"scope": 77,
									"src": "2673:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1943,
							"src": "229:2564:0",
							"usedErrors": []
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2950:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3121:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3121:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3121:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "2976:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3103:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3134:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3202:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3232:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3232:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:15:0"
									},
									"scope": 100,
									"src": "3193:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3253:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3323:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3329:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3355:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:15:0"
									},
									"scope": 100,
									"src": "3314:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3376:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3455:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3463:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3489:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:7:0"
									},
									"scope": 100,
									"src": "3446:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1943,
							"src": "3093:405:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3607:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3632:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "4147:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4223:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4240:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4244:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4240:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4233:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4170:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4180:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4214:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4213:9:0"
									},
									"scope": 121,
									"src": "4161:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4330:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4347:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4351:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4347:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4340:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4272:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4280:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4314:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4314:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4313:16:0"
									},
									"scope": 121,
									"src": "4263:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1943,
							"src": "4129:235:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4496:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nameLocations": [
											"5713:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5713:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5713:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nameLocations": [
											"5722:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5722:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5722:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nameLocations": [
											"5730:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5730:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5730:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4524:1170:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 704,
							"linearizedBaseContracts": [
								704,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nameLocation": "5704:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5787:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5751:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5759:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5751:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5770:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5859:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5803:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5811:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5803:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 137,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5830:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5822:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5841:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5893:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5877:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5877:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5927:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5912:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5912:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5953:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5938:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5938:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6326:57:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6336:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6344:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6336:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6336:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6369:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6359:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6359:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5967:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6296:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6282:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6317:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6303:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6303:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6281:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6326:0:0"
									},
									"scope": 704,
									"src": "6270:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6517:29:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6534:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6527:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6389:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6457:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6484:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6461:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6502:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6502:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6501:15:0"
									},
									"scope": 704,
									"src": "6448:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6730:31:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6740:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6552:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6668:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6697:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6715:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:15:0"
									},
									"scope": 704,
									"src": "6659:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7450:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7467:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7460:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6767:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7394:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7425:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7402:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7443:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7443:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7442:7:0"
									},
									"scope": 704,
									"src": "7385:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7606:36:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7623:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7616:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7482:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7545:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7579:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7556:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7596:9:0"
									},
									"scope": 704,
									"src": "7536:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7783:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7800:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7800:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7793:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7648:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7709:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7756:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7727:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7718:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7773:9:0"
									},
									"scope": 704,
									"src": "7700:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "8106:104:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8124:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "8116:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8116:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 229,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "8132:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8132:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8116:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "8164:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "8171:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "8175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8154:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8154:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "8154:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8199:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 239,
												"nodeType": "Return",
												"src": "8192:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7831:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8030:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8082:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8047:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8039:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8059:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8051:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8038:28:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8100:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8100:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8099:6:0"
									},
									"scope": 704,
									"src": "8021:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "8366:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 252,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8383:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 254,
														"indexExpression": {
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "8395:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8383:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 256,
													"indexExpression": {
														"id": 255,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "8402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8383:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 251,
												"id": 257,
												"nodeType": "Return",
												"src": "8376:34:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "8216:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8277:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8339:8:0"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8295:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8287:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8310:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8302:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8286:32:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8357:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8356:9:0"
									},
									"scope": 704,
									"src": "8268:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "8814:108:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "8824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 270,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 272,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "8840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8871:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "8887:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "8862:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8862:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "8862:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8911:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 269,
												"id": 282,
												"nodeType": "Return",
												"src": "8904:11:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "8423:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8734:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8790:8:0"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8750:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8742:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8741:33:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8807:6:0"
									},
									"scope": 704,
									"src": "8725:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "9617:153:0",
										"statements": [
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9635:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "9627:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 297,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9627:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 299,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "9645:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9645:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9627:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9683:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "9689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "9698:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9667:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9667:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "9667:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 309,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "9731:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "9735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 308,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "9715:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9715:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "9715:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9759:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 296,
												"id": 315,
												"nodeType": "Return",
												"src": "9752:11:0"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8928:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9493:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9593:8:0"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9523:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9515:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9545:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9537:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9505:72:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9611:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9611:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9610:6:0"
									},
									"scope": 704,
									"src": "9484:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "10259:140:0",
										"statements": [
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10277:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "10269:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 327,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10269:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 329,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "10285:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10285:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10269:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "10316:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 334,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "10323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 336,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "10342:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 337,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "10349:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 335,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10332:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10332:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 339,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "10360:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10332:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10307:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10307:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "10307:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 326,
												"id": 344,
												"nodeType": "Return",
												"src": "10381:11:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "9776:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10174:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10200:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10192:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10217:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10209:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:37:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10253:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10253:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:6:0"
									},
									"scope": 704,
									"src": "10165:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "10985:328:0",
										"statements": [
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11003:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "10995:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 356,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10995:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 358,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "11011:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11011:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10995:28:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11041:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "11033:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11033:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"arguments": [
														{
															"id": 364,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "11077:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 363,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "11060:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11060:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11033:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "11103:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 370,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "11123:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11103:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11140:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11095:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "11095:85:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "11190:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 376,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "11223:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "11230:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 378,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "11239:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 379,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "11258:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11239:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 375,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "11214:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "11214:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 355,
												"id": 385,
												"nodeType": "Return",
												"src": "11295:11:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "10405:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10895:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "10938:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10930:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10912:42:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10978:6:0"
									},
									"scope": 704,
									"src": "10886:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "11875:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 398,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "11893:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11909:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11901:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11901:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11901:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11893:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11913:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11885:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "11885:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "11971:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11985:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11977:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11977:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11977:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11971:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11989:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11963:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "11963:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12065:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12069:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "12038:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12038:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "12038:38:0"
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12095:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "12087:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"baseExpression": {
														"id": 425,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "12109:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 427,
													"indexExpression": {
														"id": 426,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "12119:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12109:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12087:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "12142:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 431,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "12157:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12142:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12165:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12134:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "12134:72:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "12216:273:0",
												"statements": [
													{
														"expression": {
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 436,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12240:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 438,
																"indexExpression": {
																	"id": 437,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "12250:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12240:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 439,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "12258:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 440,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "12272:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12258:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12240:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 443,
														"nodeType": "ExpressionStatement",
														"src": "12240:38:0"
													},
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 444,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12455:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"id": 445,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "12465:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12455:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "12472:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12455:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "12455:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12513:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12519:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12523:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12504:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12504:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "12499:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 458,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12567:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12571:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "12541:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12541:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "12541:37:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "11319:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11776:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11803:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11795:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11825:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11817:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11845:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11837:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11785:72:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11875:0:0"
									},
									"scope": 704,
									"src": "11767:818:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "12926:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "12944:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12963:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12955:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 474,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12955:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12955:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12944:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12967:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12936:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "12936:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13041:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13033:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13033:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13033:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13054:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "13012:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13012:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "13012:49:0"
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13072:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "13088:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13072:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "13072:22:0"
											},
											{
												"id": 501,
												"nodeType": "UncheckedBlock",
												"src": "13104:175:0",
												"statements": [
													{
														"expression": {
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 495,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "13240:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"id": 496,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "13250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13240:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 498,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "13262:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13240:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 500,
														"nodeType": "ExpressionStatement",
														"src": "13240:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13310:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13302:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 503,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13302:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13302:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13314:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13293:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13293:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "EmitStatement",
												"src": "13288:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13369:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13361:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13361:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13361:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13382:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "13341:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13341:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "13341:48:0"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "12591:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12870:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "12876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "12893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12875:33:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12926:0:0"
									},
									"scope": 704,
									"src": "12861:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "13781:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "13799:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13818:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13810:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 531,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13810:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13810:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13799:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13822:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13791:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "13791:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "13890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13899:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13899:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13899:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13911:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "13869:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13869:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "13869:49:0"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13937:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "13929:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"baseExpression": {
														"id": 550,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13954:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "13964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13954:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13929:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 555,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "13990:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 556,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "14008:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13990:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14016:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13982:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13982:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "13982:71:0"
											},
											{
												"id": 573,
												"nodeType": "UncheckedBlock",
												"src": "14063:194:0",
												"statements": [
													{
														"expression": {
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 561,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "14087:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 563,
																"indexExpression": {
																	"id": 562,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "14097:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14087:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 564,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "14108:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 565,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "14125:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14108:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14087:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 568,
														"nodeType": "ExpressionStatement",
														"src": "14087:44:0"
													},
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "14224:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 570,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "14240:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14224:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "14224:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "14281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14298:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14290:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14290:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14290:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14302:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14272:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14272:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "EmitStatement",
												"src": "14267:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "14340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14357:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 585,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14349:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14349:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14361:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 583,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "14320:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14320:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "14320:48:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "13402:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13725:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13739:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "13731:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13756:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "13748:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13730:33:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13781:0:0"
									},
									"scope": 704,
									"src": "13716:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "14911:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 604,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "14929:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 605,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14938:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14938:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14929:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14950:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14921:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "14921:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "15007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15007:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15030:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14999:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "14999:68:0"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 623,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "15078:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 626,
															"indexExpression": {
																"id": 624,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "15090:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15078:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 625,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "15097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15078:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 628,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "15108:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15078:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "15078:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "15138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "15145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "15154:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "15129:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15129:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "EmitStatement",
												"src": "15124:37:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "14381:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14807:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14833:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14825:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14856:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14881:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14873:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14815:78:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14911:0:0"
									},
									"scope": 704,
									"src": "14798:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "15569:321:0",
										"statements": [
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "15587:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "15579:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "15616:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 650,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "15606:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15606:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15579:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 655,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "15645:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15670:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 657,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15670:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 656,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15665:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15665:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15679:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15665:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15645:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "15641:243:0",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "15684:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 663,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "15706:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 664,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "15726:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15706:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15734:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 662,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15698:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15698:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 668,
															"nodeType": "ExpressionStatement",
															"src": "15698:68:0"
														},
														{
															"id": 677,
															"nodeType": "UncheckedBlock",
															"src": "15780:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 670,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "15817:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 671,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "15824:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 672,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "15833:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 673,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 645,
																					"src": "15852:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15833:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 669,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "15808:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15808:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "15808:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "15174:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "15458:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15491:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15483:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15514:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15506:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15539:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15531:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15473:78:0"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15569:0:0"
									},
									"scope": 704,
									"src": "15449:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "16593:2:0",
										"statements": []
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "15896:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16483:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16521:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16513:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16543:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16535:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16563:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16555:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16503:72:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16593:0:0"
									},
									"scope": 704,
									"src": "16474:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "17301:2:0",
										"statements": []
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "16601:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17192:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17251:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17243:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17211:72:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17301:0:0"
									},
									"scope": 704,
									"src": "17183:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1943,
							"src": "5695:11610:0",
							"usedErrors": []
						},
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17475:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 707,
										"name": "Context",
										"nameLocations": [
											"17746:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "17746:7:0"
									},
									"id": 708,
									"nodeType": "InheritanceSpecifier",
									"src": "17746:7:0"
								},
								{
									"baseName": {
										"id": 709,
										"name": "ERC20",
										"nameLocations": [
											"17755:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 704,
										"src": "17755:5:0"
									},
									"id": 710,
									"nodeType": "InheritanceSpecifier",
									"src": "17755:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 706,
								"nodeType": "StructuredDocumentation",
								"src": "17502:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 745,
							"linearizedBaseContracts": [
								745,
								704,
								100,
								77,
								121
							],
							"name": "ERC20Burnable",
							"nameLocation": "17729:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "17915:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 717,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "17931:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17931:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "17945:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 716,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "17925:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17925:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "17925:27:0"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "17767:98:0",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "17879:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17892:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "17884:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17883:16:0"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17915:0:0"
									},
									"scope": 745,
									"src": "17870:89:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "18331:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 732,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "18357:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 733,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "18366:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18366:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 735,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "18380:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 731,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "18341:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18341:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "18341:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 739,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "18403:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "18412:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "18397:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18397:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "18397:22:0"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "17965:295:0",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "18274:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18291:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "18283:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18308:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "18300:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18282:33:0"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18331:0:0"
									},
									"scope": 745,
									"src": "18265:161:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1943,
							"src": "17711:717:0",
							"usedErrors": []
						},
						{
							"id": 746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18554:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 748,
										"name": "Context",
										"nameLocations": [
											"19104:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "19104:7:0"
									},
									"id": 749,
									"nodeType": "InheritanceSpecifier",
									"src": "19104:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 747,
								"nodeType": "StructuredDocumentation",
								"src": "18580:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856,
								121
							],
							"name": "Ownable",
							"nameLocation": "19093:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 751,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19134:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "19118:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 750,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19118:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 757,
									"name": "OwnershipTransferred",
									"nameLocation": "19153:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19190:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "19174:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19221:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "19205:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19173:57:0"
									},
									"src": "19147:84:0"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "19347:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 762,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "19376:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19376:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 761,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "19357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19357:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "19357:32:0"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "19237:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 767,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19344:2:0"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19347:0:0"
									},
									"scope": 856,
									"src": "19333:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "19505:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "19515:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19515:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "19515:13:0"
											},
											{
												"id": 773,
												"nodeType": "PlaceholderStatement",
												"src": "19538:1:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "19402:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 775,
									"name": "onlyOwner",
									"nameLocation": "19493:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19502:2:0"
									},
									"src": "19484:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "19677:30:0",
										"statements": [
											{
												"expression": {
													"id": 781,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 751,
													"src": "19694:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "19687:13:0"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "19552:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "19631:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19636:2:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "19668:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19667:9:0"
									},
									"scope": 856,
									"src": "19622:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "19825:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 789,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "19843:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19843:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 791,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "19854:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19854:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19843:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19868:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19835:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "19835:68:0"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "19713:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "19789:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19800:2:0"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19825:0:0"
									},
									"scope": 856,
									"src": "19780:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "20306:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20335:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 805,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20335:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20335:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 804,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "20316:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20316:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "20316:30:0"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "19916:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 802,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 801,
												"name": "onlyOwner",
												"nameLocations": [
													"20296:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 775,
												"src": "20296:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20296:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20261:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20278:2:0"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20306:0:0"
									},
									"scope": 856,
									"src": "20252:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "20572:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 821,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "20590:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20610:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20602:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 822,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20602:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20602:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20590:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20614:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20582:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "20582:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "20684:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "20665:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20665:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "20665:28:0"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "20359:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 817,
												"name": "onlyOwner",
												"nameLocations": [
													"20562:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 775,
												"src": "20562:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20562:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "20511:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "20537:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "20529:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20528:18:0"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20572:0:0"
									},
									"scope": 856,
									"src": "20502:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "20917:124:0",
										"statements": [
											{
												"assignments": [
													842
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "20935:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "20927:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 841,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20927:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"id": 843,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 751,
													"src": "20946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20927:25:0"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "20962:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 846,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "20971:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20962:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "20962:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 850,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "21015:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "21025:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 849,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "20994:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20994:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "EmitStatement",
												"src": "20989:45:0"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "20706:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "20863:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "20890:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "20882:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20881:18:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20917:0:0"
									},
									"scope": 856,
									"src": "20854:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1943,
							"src": "19075:1968:0",
							"usedErrors": []
						},
						{
							"id": 857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21175:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 859,
										"name": "Context",
										"nameLocations": [
											"21671:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "21671:7:0"
									},
									"id": 860,
									"nodeType": "InheritanceSpecifier",
									"src": "21671:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 858,
								"nodeType": "StructuredDocumentation",
								"src": "21201:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 962,
							"linearizedBaseContracts": [
								962,
								121
							],
							"name": "Pausable",
							"nameLocation": "21659:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "21685:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 865,
									"name": "Paused",
									"nameLocation": "21769:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21784:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "21776:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21775:17:0"
									},
									"src": "21763:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "21799:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 870,
									"name": "Unpaused",
									"nameLocation": "21880:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "21889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21888:17:0"
									},
									"src": "21874:32:0"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "21925:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 962,
									"src": "21912:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 871,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "21912:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "22025:32:0",
										"statements": [
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "22035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22045:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22035:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "22035:15:0"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "21939:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 881,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22022:2:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22025:0:0"
									},
									"scope": 962,
									"src": "22011:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "22268:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 884,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "22278:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22278:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "22278:19:0"
											},
											{
												"id": 887,
												"nodeType": "PlaceholderStatement",
												"src": "22307:1:0"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "22063:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 889,
									"name": "whenNotPaused",
									"nameLocation": "22252:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22265:2:0"
									},
									"src": "22243:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "22515:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 892,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "22525:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22525:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "22525:16:0"
											},
											{
												"id": 895,
												"nodeType": "PlaceholderStatement",
												"src": "22551:1:0"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "22321:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 897,
									"name": "whenPaused",
									"nameLocation": "22502:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22512:2:0"
									},
									"src": "22493:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "22707:31:0",
										"statements": [
											{
												"expression": {
													"id": 903,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "22724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 902,
												"id": 904,
												"nodeType": "Return",
												"src": "22717:14:0"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "22565:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "22663:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22669:2:0"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "22701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 900,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22700:6:0"
									},
									"scope": 962,
									"src": "22654:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "22857:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "22875:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 911,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "22876:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22876:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22886:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22867:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22867:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "22867:38:0"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "22744:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "22815:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22832:2:0"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22857:0:0"
									},
									"scope": 962,
									"src": "22806:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "23032:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 923,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "23050:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23050:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23060:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23042:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "23042:41:0"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "22918:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "22993:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23007:2:0"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23032:0:0"
									},
									"scope": 962,
									"src": "22984:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "23274:66:0",
										"statements": [
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 935,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "23284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23294:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "23284:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "23284:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 940,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "23320:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23320:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 939,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "23313:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23313:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "23308:25:0"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "23096:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 933,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 932,
												"name": "whenNotPaused",
												"nameLocations": [
													"23260:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "23260:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23260:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "23234:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23240:2:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23274:0:0"
									},
									"scope": 962,
									"src": "23225:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "23520:69:0",
										"statements": [
											{
												"expression": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 951,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "23530:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23540:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "23530:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "23530:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 956,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "23569:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23569:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 955,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "23560:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23560:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "EmitStatement",
												"src": "23555:27:0"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "23346:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 949,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 948,
												"name": "whenPaused",
												"nameLocations": [
													"23509:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 897,
												"src": "23509:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23509:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "23481:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23489:2:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23520:0:0"
									},
									"scope": 962,
									"src": "23472:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1943,
							"src": "21641:1950:0",
							"usedErrors": []
						},
						{
							"id": 963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "23613:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 964,
										"name": "ERC20",
										"nameLocations": [
											"23659:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 704,
										"src": "23659:5:0"
									},
									"id": 965,
									"nodeType": "InheritanceSpecifier",
									"src": "23659:5:0"
								},
								{
									"baseName": {
										"id": 966,
										"name": "ERC20Burnable",
										"nameLocations": [
											"23666:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 745,
										"src": "23666:13:0"
									},
									"id": 967,
									"nodeType": "InheritanceSpecifier",
									"src": "23666:13:0"
								},
								{
									"baseName": {
										"id": 968,
										"name": "Pausable",
										"nameLocations": [
											"23681:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 962,
										"src": "23681:8:0"
									},
									"id": 969,
									"nodeType": "InheritanceSpecifier",
									"src": "23681:8:0"
								},
								{
									"baseName": {
										"id": 970,
										"name": "Ownable",
										"nameLocations": [
											"23691:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "23691:7:0"
									},
									"id": 971,
									"nodeType": "InheritanceSpecifier",
									"src": "23691:7:0"
								}
							],
							"canonicalName": "MEME",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1045,
							"linearizedBaseContracts": [
								1045,
								856,
								962,
								745,
								704,
								100,
								77,
								121
							],
							"name": "MEME",
							"nameLocation": "23651:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "23741:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 979,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23757:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23761:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23757:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3530303030",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23769:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50000_by_1",
																	"typeString": "int_const 50000"
																},
																"value": "50000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23777:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 983,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "23783:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23783:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "23777:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23769:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "23751:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23751:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "23751:43:0"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d454d45",
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												},
												{
													"hexValue": "4d454d45",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												}
											],
											"id": 976,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 973,
												"name": "ERC20",
												"nameLocations": [
													"23719:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 704,
												"src": "23719:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23719:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23716:2:0"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23741:0:0"
									},
									"scope": 1045,
									"src": "23705:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "23841:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 995,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "23851:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23851:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "23851:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 992,
												"name": "onlyOwner",
												"nameLocations": [
													"23831:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 775,
												"src": "23831:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23831:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "23816:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23821:2:0"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23841:0:0"
									},
									"scope": 1045,
									"src": "23807:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "23908:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "23918:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23918:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "23918:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1001,
												"name": "onlyOwner",
												"nameLocations": [
													"23898:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 775,
												"src": "23898:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23898:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "23881:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23888:2:0"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23908:0:0"
									},
									"scope": 1045,
									"src": "23872:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "24000:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "24016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24020:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "24010:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24010:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "24010:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "onlyOwner",
												"nameLocations": [
													"23990:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 775,
												"src": "23990:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23990:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "23950:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23963:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "23955:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "23967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23954:28:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24000:0:0"
									},
									"scope": 1045,
									"src": "23941:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										692
									],
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "24172:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "24209:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "24215:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "24219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1035,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "24182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MEME_$1045_$",
																"typeString": "type(contract super MEME)"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24188:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 692,
														"src": "24182:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24182:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "24182:44:0"
											}
										]
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1032,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1031,
												"name": "whenNotPaused",
												"nameLocations": [
													"24137:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "24137:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24137:13:0"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "24049:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1033,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24159:8:0"
									},
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24078:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "24070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24092:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "24084:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "24096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24069:42:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24172:0:0"
									},
									"scope": 1045,
									"src": "24040:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1943,
							"src": "23642:593:0",
							"usedErrors": []
						},
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "24256:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "Pausable",
										"nameLocations": [
											"24302:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 962,
										"src": "24302:8:0"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "24302:8:0"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "Ownable",
										"nameLocations": [
											"24312:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "24312:7:0"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "24312:7:0"
								}
							],
							"canonicalName": "DEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1942,
							"linearizedBaseContracts": [
								1942,
								856,
								962,
								121
							],
							"name": "DEX",
							"nameLocation": "24295:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DEX.Stack_Struct",
									"id": 1057,
									"members": [
										{
											"constant": false,
											"id": 1052,
											"mutability": "mutable",
											"name": "meme_amount",
											"nameLocation": "24364:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 1057,
											"src": "24356:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1051,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "24356:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1054,
											"mutability": "mutable",
											"name": "eth_amount",
											"nameLocation": "24393:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1057,
											"src": "24385:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1053,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "24385:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1056,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "24421:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 1057,
											"src": "24413:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1055,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "24413:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stack_Struct",
									"nameLocation": "24333:12:0",
									"nodeType": "StructDefinition",
									"scope": 1942,
									"src": "24326:106:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1060,
									"mutability": "mutable",
									"name": "meme",
									"nameLocation": "24443:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "24437:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$704",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1059,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1058,
											"name": "ERC20",
											"nameLocations": [
												"24437:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 704,
											"src": "24437:5:0"
										},
										"referencedDeclaration": 704,
										"src": "24437:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$704",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed",
									"id": 1068,
									"name": "Buy",
									"nameLocation": "24460:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "24464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "24494:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "24486:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "24515:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "24507:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24463:63:0"
									},
									"src": "24454:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a",
									"id": 1076,
									"name": "Sell",
									"nameLocation": "24538:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24559:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "24543:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "24573:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "24565:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "24594:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "24586:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24542:63:0"
									},
									"src": "24532:74:0"
								},
								{
									"anonymous": false,
									"eventSelector": "5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6",
									"id": 1084,
									"name": "Stack",
									"nameLocation": "24617:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24639:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "24623:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "24653:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "24645:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "24674:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "24666:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24622:63:0"
									},
									"src": "24611:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4",
									"id": 1092,
									"name": "UnStack",
									"nameLocation": "24697:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24730:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "24714:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "24752:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "24744:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "24781:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "24773:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24704:93:0"
									},
									"src": "24691:107:0"
								},
								{
									"constant": false,
									"id": 1098,
									"mutability": "mutable",
									"name": "Stacked",
									"nameLocation": "24848:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "24804:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DEX.Stack_Struct[])"
									},
									"typeName": {
										"id": 1097,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1093,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24812:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24804:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DEX.Stack_Struct[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1095,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1094,
													"name": "Stack_Struct",
													"nameLocations": [
														"24823:12:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1057,
													"src": "24823:12:0"
												},
												"referencedDeclaration": 1057,
												"src": "24823:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage_ptr",
													"typeString": "struct DEX.Stack_Struct"
												}
											},
											"id": 1096,
											"nodeType": "ArrayTypeName",
											"src": "24823:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr",
												"typeString": "struct DEX.Stack_Struct[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2ad9d559",
									"id": 1102,
									"mutability": "mutable",
									"name": "dailyTax",
									"nameLocation": "24897:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "24862:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1101,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1099,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24870:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24862:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1100,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24881:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c74f05d",
									"id": 1104,
									"mutability": "mutable",
									"name": "stackingRate",
									"nameLocation": "24927:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "24912:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24912:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b82c27f",
									"id": 1106,
									"mutability": "mutable",
									"name": "_k",
									"nameLocation": "24961:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "24946:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24946:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29809703",
									"id": 1108,
									"mutability": "mutable",
									"name": "_x",
									"nameLocation": "24984:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "24969:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24969:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "28726bda",
									"id": 1110,
									"mutability": "mutable",
									"name": "_y",
									"nameLocation": "25007:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "24992:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1109,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24992:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3b5dc3b",
									"id": 1113,
									"mutability": "mutable",
									"name": "precision",
									"nameLocation": "25031:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "25016:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25016:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130653138",
										"id": 1112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25043:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "771a3a1d",
									"id": 1121,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "25070:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "25055:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25055:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1120,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "33",
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25081:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1116,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "25085:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25081:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1118,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "25080:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "3130",
											"id": 1119,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "25098:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"src": "25080:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "25133:73:0",
										"statements": [
											{
												"expression": {
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1126,
														"name": "meme",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "25143:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$704",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1128,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "25155:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1127,
															"name": "MEME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "25150:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MEME_$1045_$",
																"typeString": "type(contract MEME)"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25150:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MEME_$1045",
															"typeString": "contract MEME"
														}
													},
													"src": "25143:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$704",
														"typeString": "contract ERC20"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "25143:17:0"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "25127:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "25119:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25118:14:0"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25133:0:0"
									},
									"scope": 1942,
									"src": "25107:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "25246:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1138,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "25256:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25256:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "25256:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1135,
												"name": "onlyOwner",
												"nameLocations": [
													"25236:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 775,
												"src": "25236:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25236:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "25221:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25226:2:0"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25246:0:0"
									},
									"scope": 1942,
									"src": "25212:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "25313:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1147,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "25323:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25323:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "25323:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1144,
												"name": "onlyOwner",
												"nameLocations": [
													"25303:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 775,
												"src": "25303:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25303:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "25286:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25293:2:0"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25313:0:0"
									},
									"scope": 1942,
									"src": "25277:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "25375:29:0",
										"statements": [
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1154,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "25385:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1155,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "25390:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1156,
															"name": "_y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "25395:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25385:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "25385:12:0"
											}
										]
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateK",
									"nameLocation": "25355:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25363:2:0"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25375:0:0"
									},
									"scope": 1942,
									"src": "25346:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "25475:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1168,
														"name": "Stacked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "25492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
														}
													},
													"id": 1171,
													"indexExpression": {
														"expression": {
															"id": 1169,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "25500:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25504:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "25500:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25492:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
														"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1172,
												"nodeType": "Return",
												"src": "25485:26:0"
											}
										]
									},
									"functionSelector": "e8bca8b8",
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStacks",
									"nameLocation": "25419:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25428:2:0"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "25452:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DEX.Stack_Struct[]"
												},
												"typeName": {
													"baseType": {
														"id": 1164,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1163,
															"name": "Stack_Struct",
															"nameLocations": [
																"25452:12:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1057,
															"src": "25452:12:0"
														},
														"referencedDeclaration": 1057,
														"src": "25452:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage_ptr",
															"typeString": "struct DEX.Stack_Struct"
														}
													},
													"id": 1165,
													"nodeType": "ArrayTypeName",
													"src": "25452:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr",
														"typeString": "struct DEX.Stack_Struct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25451:23:0"
									},
									"scope": 1942,
									"src": "25410:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "25575:279:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1180,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "25593:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25607:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25593:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64206d6f7265204d454d45",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25610:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e",
																"typeString": "literal_string \"Send more MEME\""
															},
															"value": "Send more MEME"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e",
																"typeString": "literal_string \"Send more MEME\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25585:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "25585:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1187,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "25645:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25649:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "25645:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25657:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25645:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64206d6f726520455448",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25660:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8",
																"typeString": "literal_string \"Send more ETH\""
															},
															"value": "Send more ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8",
																"typeString": "literal_string \"Send more ETH\""
															}
														],
														"id": 1186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25637:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "25637:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1195,
																"name": "stackingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "25707:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1196,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "25724:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "25728:5:0",
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "25724:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1198,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1113,
																				"src": "25736:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25724:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1200,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25723:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1201,
																	"name": "meme_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "25749:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25723:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25707:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461636b696e672052617465206e6f74206d6574",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25774:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a",
																"typeString": "literal_string \"Stacking Rate not met\""
															},
															"value": "Stacking Rate not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a",
																"typeString": "literal_string \"Stacking Rate not met\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25686:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "25686:121:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1208,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "25824:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "25837:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25841:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "25837:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1207,
														"name": "_stack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "25817:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25817:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "25817:30:0"
											}
										]
									},
									"functionSelector": "dc9031c4",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stack",
									"nameLocation": "25533:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "25547:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "25539:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25538:21:0"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25575:0:0"
									},
									"scope": 1942,
									"src": "25524:330:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "25899:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1220,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "25917:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25926:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25917:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e6465782063616e2774206265206c657373207468656e2030",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25929:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e",
																"typeString": "literal_string \"Index can't be less then 0\""
															},
															"value": "Index can't be less then 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e",
																"typeString": "literal_string \"Index can't be less then 0\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25909:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25909:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "25909:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1227,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "25977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1226,
														"name": "_unstack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "25968:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25968:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "25968:15:0"
											}
										]
									},
									"functionSelector": "200061df",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstack",
									"nameLocation": "25869:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "25885:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25877:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25876:15:0"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25899:0:0"
									},
									"scope": 1942,
									"src": "25860:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "26062:427:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1241,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26090:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26094:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26090:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1245,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26110:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$1942",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$1942",
																		"typeString": "contract DEX"
																	}
																],
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26102:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1243,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26102:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26102:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "26117:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1238,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "26072:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$704",
																"typeString": "contract ERC20"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26077:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "26072:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26072:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "26072:57:0"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "26139:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1251,
														"name": "meme_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "26145:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26139:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "26139:17:0"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1254,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "26166:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1255,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "26172:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26166:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "26166:16:0"
											},
											{
												"assignments": [
													1260
												],
												"declarations": [
													{
														"constant": false,
														"id": 1260,
														"mutability": "mutable",
														"name": "ss",
														"nameLocation": "26213:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "26193:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
															"typeString": "struct DEX.Stack_Struct"
														},
														"typeName": {
															"id": 1259,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1258,
																"name": "Stack_Struct",
																"nameLocations": [
																	"26193:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1057,
																"src": "26193:12:0"
															},
															"referencedDeclaration": 1057,
															"src": "26193:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage_ptr",
																"typeString": "struct DEX.Stack_Struct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"arguments": [
														{
															"id": 1262,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "26244:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1263,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "26269:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1264,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "26293:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26299:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "26293:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "Stack_Struct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "26218:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stack_Struct_$1057_storage_ptr_$",
															"typeString": "type(struct DEX.Stack_Struct storage pointer)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26218:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
														"typeString": "struct DEX.Stack_Struct memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26193:125:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1273,
															"name": "ss",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "26353:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1268,
																"name": "Stacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "26328:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																}
															},
															"id": 1271,
															"indexExpression": {
																"expression": {
																	"id": 1269,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "26336:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26340:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "26336:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26328:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
																"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26348:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "26328:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr_$_t_struct$_Stack_Struct_$1057_storage_$returns$__$attached_to$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DEX.Stack_Struct storage ref[] storage pointer,struct DEX.Stack_Struct storage ref)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26328:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "26328:28:0"
											},
											{
												"expression": {
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "stackingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "26367:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1277,
																				"name": "_y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1110,
																				"src": "26384:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1278,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1113,
																				"src": "26389:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26384:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1280,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26383:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1281,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "26402:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26383:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1283,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "26382:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26367:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "26367:38:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1286,
														"name": "_updateK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "26416:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26416:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "26416:10:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1290,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26451:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26447:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "26459:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26472:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26476:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "26472:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "Stack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "26441:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26441:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "EmitStatement",
												"src": "26436:46:0"
											}
										]
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stack",
									"nameLocation": "26005:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "26020:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "26012:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "26041:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "26033:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26011:41:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26062:0:0"
									},
									"scope": 1942,
									"src": "25996:493:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "26537:970:0",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "ss",
														"nameLocation": "26567:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "26547:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
															"typeString": "struct DEX.Stack_Struct"
														},
														"typeName": {
															"id": 1304,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1303,
																"name": "Stack_Struct",
																"nameLocations": [
																	"26547:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1057,
																"src": "26547:12:0"
															},
															"referencedDeclaration": 1057,
															"src": "26547:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage_ptr",
																"typeString": "struct DEX.Stack_Struct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1306,
															"name": "Stacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "26572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
															}
														},
														"id": 1309,
														"indexExpression": {
															"expression": {
																"id": 1307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26580:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26584:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26580:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26572:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
															"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
														}
													},
													"id": 1311,
													"indexExpression": {
														"id": 1310,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "26592:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26572:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage",
														"typeString": "struct DEX.Stack_Struct storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26547:51:0"
											},
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "26616:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "26608:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1315,
														"name": "_distributeTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "26622:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26622:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26608:30:0"
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "meme_to_return",
														"nameLocation": "26657:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "26649:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"expression": {
														"id": 1320,
														"name": "ss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "26674:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
															"typeString": "struct DEX.Stack_Struct memory"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26677:11:0",
													"memberName": "meme_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1052,
													"src": "26674:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26649:39:0"
											},
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "eth_to_return",
														"nameLocation": "26706:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "26698:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26698:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1325,
															"name": "ss",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "26722:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26725:10:0",
														"memberName": "eth_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "26722:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1327,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "26738:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26722:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26698:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1335,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "26796:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DEX_$1942",
																					"typeString": "contract DEX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DEX_$1942",
																					"typeString": "contract DEX"
																				}
																			],
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26788:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1333,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "26788:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26788:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1331,
																		"name": "meme",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "26773:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$704",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26778:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 216,
																	"src": "26773:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26773:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1338,
																"name": "meme_to_return",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "26806:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26773:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b206261636b20536f6f6e21",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26834:77:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\""
															},
															"value": "Sorry Currently this contract doesn't have Meme to return, Check back Soon!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\""
															}
														],
														"id": 1330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26752:169:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "26752:169:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1346,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26960:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1942",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1942",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26952:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1344,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26952:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26952:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26966:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "26952:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1349,
																"name": "eth_to_return",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "26977:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26952:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f65736e277420686176652045746820746f2072657475726e2c20436865636b206261636b20536f6f6e21",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27004:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\""
															},
															"value": "Sorry Currently this contract doesn't have Eth to return, Check back Soon!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26931:159:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "26931:159:0"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1354,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "27101:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1355,
														"name": "meme_to_return",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "27107:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27101:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "27101:20:0"
											},
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1358,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "27131:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1359,
														"name": "eth_to_return",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "27137:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27131:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "27131:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1365,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27175:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27179:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27175:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1367,
															"name": "meme_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "27187:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1362,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "27161:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$704",
																"typeString": "contract ERC20"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27166:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "27161:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27161:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "27161:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "eth_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "27241:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1372,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27220:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27224:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27220:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27212:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1370,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27212:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27212:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27232:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "27212:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27212:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "27212:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1379,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "27270:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27276:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1396,
													"nodeType": "Block",
													"src": "27326:61:0",
													"statements": [
														{
															"expression": {
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1387,
																	"name": "stackingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "27340:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1388,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "27356:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1389,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "27361:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27356:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1391,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "27355:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1392,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "27374:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27355:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27340:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1395,
															"nodeType": "ExpressionStatement",
															"src": "27340:36:0"
														}
													]
												},
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "27266:121:0",
												"trueBody": {
													"id": 1386,
													"nodeType": "Block",
													"src": "27279:41:0",
													"statements": [
														{
															"expression": {
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1382,
																	"name": "stackingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "27293:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "27293:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1385,
															"nodeType": "ExpressionStatement",
															"src": "27293:16:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "27408:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_removeArr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "27397:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27397:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "27397:17:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1402,
														"name": "_updateK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "27425:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27425:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "27425:10:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27458:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27462:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27458:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1408,
															"name": "meme_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "27470:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1409,
															"name": "eth_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "27486:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1405,
														"name": "UnStack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "27450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27450:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "EmitStatement",
												"src": "27445:55:0"
											}
										]
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unstack",
									"nameLocation": "26504:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "26521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "26513:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26512:15:0"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26537:0:0"
									},
									"scope": 1942,
									"src": "26495:1012:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "27557:268:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1419,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "27575:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1420,
																		"name": "Stacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "27583:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																		}
																	},
																	"id": 1423,
																	"indexExpression": {
																		"expression": {
																			"id": 1421,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "27591:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "27595:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "27591:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27583:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27603:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "27583:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27575:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f6620626f756e6473",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27611:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															},
															"value": "Index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															}
														],
														"id": 1418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27567:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27567:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "27567:66:0"
											},
											{
												"body": {
													"id": 1461,
													"nodeType": "Block",
													"src": "27708:76:0",
													"statements": [
														{
															"expression": {
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1445,
																			"name": "Stacked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "27722:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																			}
																		},
																		"id": 1449,
																		"indexExpression": {
																			"expression": {
																				"id": 1446,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "27730:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27734:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "27730:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27722:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
																			"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 1450,
																	"indexExpression": {
																		"id": 1448,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "27742:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27722:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1451,
																			"name": "Stacked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "27747:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																			}
																		},
																		"id": 1454,
																		"indexExpression": {
																			"expression": {
																				"id": 1452,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "27755:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27759:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "27755:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27747:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
																			"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 1458,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1455,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "27767:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27771:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27767:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27747:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref"
																	}
																},
																"src": "27722:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref"
																}
															},
															"id": 1460,
															"nodeType": "ExpressionStatement",
															"src": "27722:51:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1433,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "27667:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1434,
																	"name": "Stacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "27671:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																	}
																},
																"id": 1437,
																"indexExpression": {
																	"expression": {
																		"id": 1435,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27679:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27683:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27679:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27671:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27691:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "27671:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27700:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "27671:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27667:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1462,
												"initializationExpression": {
													"assignments": [
														1430
													],
													"declarations": [
														{
															"constant": false,
															"id": 1430,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "27656:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1462,
															"src": "27648:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1429,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27648:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1432,
													"initialValue": {
														"id": 1431,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "27660:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27648:17:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "27703:3:0",
														"subExpression": {
															"id": 1442,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "27703:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1444,
													"nodeType": "ExpressionStatement",
													"src": "27703:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27643:141:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1463,
																"name": "Stacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "27793:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																}
															},
															"id": 1466,
															"indexExpression": {
																"expression": {
																	"id": 1464,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "27801:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27805:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "27801:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27793:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
																"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27813:3:0",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "27793:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DEX.Stack_Struct storage ref[] storage pointer)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27793:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "27793:25:0"
											}
										]
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeArr",
									"nameLocation": "27522:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "27541:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "27533:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27532:15:0"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27557:0:0"
									},
									"scope": 1942,
									"src": "27513:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "27889:970:0",
										"statements": [
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "taxShare",
														"nameLocation": "27907:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "27899:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1479,
												"initialValue": {
													"hexValue": "30",
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27918:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27899:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1480,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "27933:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1485,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1481,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "27942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27948:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "27942:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27960:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "27942:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27933:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27970:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27933:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1597,
												"nodeType": "IfStatement",
												"src": "27929:899:0",
												"trueBody": {
													"id": 1596,
													"nodeType": "Block",
													"src": "27973:855:0",
													"statements": [
														{
															"assignments": [
																1492
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1492,
																	"mutability": "mutable",
																	"name": "stacks",
																	"nameLocation": "28010:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1596,
																	"src": "27987:29:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr",
																		"typeString": "struct DEX.Stack_Struct[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1490,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1489,
																				"name": "Stack_Struct",
																				"nameLocations": [
																					"27987:12:0"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1057,
																				"src": "27987:12:0"
																			},
																			"referencedDeclaration": 1057,
																			"src": "27987:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage_ptr",
																				"typeString": "struct DEX.Stack_Struct"
																			}
																		},
																		"id": 1491,
																		"nodeType": "ArrayTypeName",
																		"src": "27987:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr",
																			"typeString": "struct DEX.Stack_Struct[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1497,
															"initialValue": {
																"baseExpression": {
																	"id": 1493,
																	"name": "Stacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "28019:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																	}
																},
																"id": 1496,
																"indexExpression": {
																	"expression": {
																		"id": 1494,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "28027:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28031:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "28027:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28019:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27987:51:0"
														},
														{
															"assignments": [
																1499
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1499,
																	"mutability": "mutable",
																	"name": "numStacks",
																	"nameLocation": "28060:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1596,
																	"src": "28052:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1498,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28052:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1502,
															"initialValue": {
																"expression": {
																	"id": 1500,
																	"name": "stacks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "28072:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr",
																		"typeString": "struct DEX.Stack_Struct storage ref[] storage pointer"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28079:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "28072:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28052:33:0"
														},
														{
															"assignments": [
																1504
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1504,
																	"mutability": "mutable",
																	"name": "totalStackTime",
																	"nameLocation": "28107:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1596,
																	"src": "28099:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1503,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28099:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1506,
															"initialValue": {
																"hexValue": "30",
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28124:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28099:26:0"
														},
														{
															"body": {
																"id": 1533,
																"nodeType": "Block",
																"src": "28179:130:0",
																"statements": [
																	{
																		"assignments": [
																			1519
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1519,
																				"mutability": "mutable",
																				"name": "ss",
																				"nameLocation": "28217:2:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1533,
																				"src": "28197:22:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																					"typeString": "struct DEX.Stack_Struct"
																				},
																				"typeName": {
																					"id": 1518,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1517,
																						"name": "Stack_Struct",
																						"nameLocations": [
																							"28197:12:0"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1057,
																						"src": "28197:12:0"
																					},
																					"referencedDeclaration": 1057,
																					"src": "28197:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage_ptr",
																						"typeString": "struct DEX.Stack_Struct"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1523,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1520,
																				"name": "stacks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "28222:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr",
																					"typeString": "struct DEX.Stack_Struct storage ref[] storage pointer"
																				}
																			},
																			"id": 1522,
																			"indexExpression": {
																				"id": 1521,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1508,
																				"src": "28229:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28222:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage",
																				"typeString": "struct DEX.Stack_Struct storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "28197:34:0"
																	},
																	{
																		"expression": {
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1524,
																				"name": "totalStackTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1504,
																				"src": "28249:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1525,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "28268:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1526,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "28274:9:0",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "28268:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"id": 1527,
																								"name": "ss",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1519,
																								"src": "28286:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																									"typeString": "struct DEX.Stack_Struct memory"
																								}
																							},
																							"id": 1528,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "28289:4:0",
																							"memberName": "time",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1056,
																							"src": "28286:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28268:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1530,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28267:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28249:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1532,
																		"nodeType": "ExpressionStatement",
																		"src": "28249:45:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1511,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "28159:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1512,
																	"name": "numStacks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "28163:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28159:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1534,
															"initializationExpression": {
																"assignments": [
																	1508
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1508,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "28152:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1534,
																		"src": "28144:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1507,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "28144:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1510,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28156:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "28144:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "28174:3:0",
																	"subExpression": {
																		"id": 1514,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "28174:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1516,
																"nodeType": "ExpressionStatement",
																"src": "28174:3:0"
															},
															"nodeType": "ForStatement",
															"src": "28139:170:0"
														},
														{
															"body": {
																"id": 1594,
																"nodeType": "Block",
																"src": "28362:456:0",
																"statements": [
																	{
																		"assignments": [
																			1547
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1547,
																				"mutability": "mutable",
																				"name": "ss",
																				"nameLocation": "28400:2:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1594,
																				"src": "28380:22:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																					"typeString": "struct DEX.Stack_Struct"
																				},
																				"typeName": {
																					"id": 1546,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1545,
																						"name": "Stack_Struct",
																						"nameLocations": [
																							"28380:12:0"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1057,
																						"src": "28380:12:0"
																					},
																					"referencedDeclaration": 1057,
																					"src": "28380:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage_ptr",
																						"typeString": "struct DEX.Stack_Struct"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1551,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1548,
																				"name": "stacks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "28405:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$1057_storage_$dyn_storage_ptr",
																					"typeString": "struct DEX.Stack_Struct storage ref[] storage pointer"
																				}
																			},
																			"id": 1550,
																			"indexExpression": {
																				"id": 1549,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1536,
																				"src": "28412:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28405:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stack_Struct_$1057_storage",
																				"typeString": "struct DEX.Stack_Struct storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "28380:34:0"
																	},
																	{
																		"assignments": [
																			1553
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1553,
																				"mutability": "mutable",
																				"name": "poolShare",
																				"nameLocation": "28440:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1594,
																				"src": "28432:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1552,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "28432:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1562,
																		"initialValue": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1557,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1554,
																										"name": "ss",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1547,
																										"src": "28454:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																											"typeString": "struct DEX.Stack_Struct memory"
																										}
																									},
																									"id": 1555,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "28457:11:0",
																									"memberName": "meme_amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1052,
																									"src": "28454:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 1556,
																									"name": "precision",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1113,
																									"src": "28471:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "28454:26:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1558,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "28453:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 1559,
																						"name": "_x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "28484:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "28453:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1561,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "28452:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "28432:55:0"
																	},
																	{
																		"assignments": [
																			1564
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1564,
																				"mutability": "mutable",
																				"name": "stackTime",
																				"nameLocation": "28513:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1594,
																				"src": "28505:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1563,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "28505:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1571,
																		"initialValue": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1565,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "28526:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1566,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "28532:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "28526:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 1567,
																							"name": "ss",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1547,
																							"src": "28544:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stack_Struct_$1057_memory_ptr",
																								"typeString": "struct DEX.Stack_Struct memory"
																							}
																						},
																						"id": 1568,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "28547:4:0",
																						"memberName": "time",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1056,
																						"src": "28544:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "28526:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1570,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "28525:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "28505:47:0"
																	},
																	{
																		"assignments": [
																			1573
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1573,
																				"mutability": "mutable",
																				"name": "stackWeight",
																				"nameLocation": "28578:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1594,
																				"src": "28570:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1572,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "28570:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1577,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1574,
																				"name": "stackTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1564,
																				"src": "28592:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1575,
																				"name": "totalStackTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1504,
																				"src": "28604:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28592:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "28570:48:0"
																	},
																	{
																		"expression": {
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1578,
																				"name": "taxShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1477,
																				"src": "28636:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1588,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1586,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1579,
																									"name": "poolShare",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1553,
																									"src": "28669:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"baseExpression": {
																										"id": 1580,
																										"name": "dailyTax",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1102,
																										"src": "28705:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1585,
																									"indexExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1584,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1581,
																												"name": "block",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967292,
																												"src": "28714:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_block",
																													"typeString": "block"
																												}
																											},
																											"id": 1582,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "28720:9:0",
																											"memberName": "timestamp",
																											"nodeType": "MemberAccess",
																											"src": "28714:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "/",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 1583,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "28732:6:0",
																											"subdenomination": "days",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_86400_by_1",
																												"typeString": "int_const 86400"
																											},
																											"value": "1"
																										},
																										"src": "28714:24:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "28705:34:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "28669:70:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1587,
																								"name": "stackWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1573,
																								"src": "28766:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "28669:108:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1589,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28668:110:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1590,
																					"name": "_k",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1106,
																					"src": "28801:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28668:135:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28636:167:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1593,
																		"nodeType": "ExpressionStatement",
																		"src": "28636:167:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1539,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "28342:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1540,
																	"name": "numStacks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "28346:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28342:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1595,
															"initializationExpression": {
																"assignments": [
																	1536
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1536,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "28335:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1595,
																		"src": "28327:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1535,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "28327:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1538,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28339:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "28327:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "28357:3:0",
																	"subExpression": {
																		"id": 1542,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "28357:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1544,
																"nodeType": "ExpressionStatement",
																"src": "28357:3:0"
															},
															"nodeType": "ForStatement",
															"src": "28322:496:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1598,
													"name": "taxShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1477,
													"src": "28844:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1475,
												"id": 1599,
												"nodeType": "Return",
												"src": "28837:15:0"
											}
										]
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeTax",
									"nameLocation": "27840:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27854:2:0"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "27880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27879:9:0"
									},
									"scope": 1942,
									"src": "27831:1028:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "28938:562:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1609,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "28956:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28961:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28964:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28948:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "28948:39:0"
											},
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "dx",
														"nameLocation": "29005:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "28997:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1615,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28997:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"initialValue": {
													"hexValue": "30",
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29010:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28997:14:0"
											},
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "dy",
														"nameLocation": "29029:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "29021:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1622,
												"initialValue": {
													"hexValue": "30",
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29034:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29021:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1623,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "29049:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1643,
													"nodeType": "Block",
													"src": "29114:51:0",
													"statements": [
														{
															"expression": {
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1635,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "29128:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1636,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "29133:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1637,
																			"name": "_y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "29138:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1639,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "29143:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29133:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29128:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1642,
															"nodeType": "ExpressionStatement",
															"src": "29128:26:0"
														}
													]
												},
												"id": 1644,
												"nodeType": "IfStatement",
												"src": "29045:120:0",
												"trueBody": {
													"id": 1634,
													"nodeType": "Block",
													"src": "29058:50:0",
													"statements": [
														{
															"expression": {
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1626,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "29072:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1627,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "29077:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29082:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "29077:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1630,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "29086:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29077:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29072:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1633,
															"nodeType": "ExpressionStatement",
															"src": "29072:25:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "29178:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "29229:37:0",
													"statements": [
														{
															"expression": {
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1655,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "29243:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1656,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "29248:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1657,
																		"name": "dx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1616,
																		"src": "29253:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29248:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29243:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "29243:12:0"
														}
													]
												},
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "29174:92:0",
												"trueBody": {
													"id": 1654,
													"nodeType": "Block",
													"src": "29187:36:0",
													"statements": [
														{
															"expression": {
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1648,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "29201:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1649,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "29206:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29211:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "29206:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29201:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1653,
															"nodeType": "ExpressionStatement",
															"src": "29201:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "eth_price_without_tax",
														"nameLocation": "29283:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "29275:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29275:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1668,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1665,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "29307:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1666,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "29312:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29275:39:0"
											},
											{
												"assignments": [
													1670
												],
												"declarations": [
													{
														"constant": false,
														"id": 1670,
														"mutability": "mutable",
														"name": "eth_tax",
														"nameLocation": "29332:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "29324:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1677,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1671,
																	"name": "eth_price_without_tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "29343:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1672,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "29367:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29343:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1674,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29342:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1675,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "29378:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29342:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29324:63:0"
											},
											{
												"assignments": [
													1679
												],
												"declarations": [
													{
														"constant": false,
														"id": 1679,
														"mutability": "mutable",
														"name": "eth_price_with_tax",
														"nameLocation": "29406:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "29398:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1683,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1680,
														"name": "eth_price_without_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "29427:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1681,
														"name": "eth_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "29451:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29427:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29398:60:0"
											},
											{
												"expression": {
													"id": 1684,
													"name": "eth_price_with_tax",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1679,
													"src": "29475:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1685,
												"nodeType": "Return",
												"src": "29468:25:0"
											}
										]
									},
									"functionSelector": "5c572ed0",
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemePrice",
									"nameLocation": "28874:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "28895:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "28887:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28886:21:0"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "28929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28928:9:0"
									},
									"scope": 1942,
									"src": "28865:635:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "29577:568:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1695,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "29595:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29600:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29603:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29587:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "29587:39:0"
											},
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "dx",
														"nameLocation": "29644:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "29636:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29636:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"hexValue": "30",
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29649:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29636:14:0"
											},
											{
												"assignments": [
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "dy",
														"nameLocation": "29668:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "29660:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"hexValue": "30",
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29673:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29660:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1709,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "29688:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29694:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1729,
													"nodeType": "Block",
													"src": "29752:50:0",
													"statements": [
														{
															"expression": {
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1721,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "29766:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1722,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "29771:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1723,
																			"name": "_x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "29776:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1725,
																		"name": "eth_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "29781:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29771:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29766:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1728,
															"nodeType": "ExpressionStatement",
															"src": "29766:25:0"
														}
													]
												},
												"id": 1730,
												"nodeType": "IfStatement",
												"src": "29684:118:0",
												"trueBody": {
													"id": 1720,
													"nodeType": "Block",
													"src": "29697:49:0",
													"statements": [
														{
															"expression": {
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1712,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "29711:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1713,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "29716:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29721:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "29716:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1716,
																		"name": "eth_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "29725:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29716:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29711:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1719,
															"nodeType": "ExpressionStatement",
															"src": "29711:24:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1731,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "29815:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29821:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1747,
													"nodeType": "Block",
													"src": "29866:37:0",
													"statements": [
														{
															"expression": {
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1741,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "29880:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1742,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "29885:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1743,
																		"name": "dy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "29890:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29885:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29880:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1746,
															"nodeType": "ExpressionStatement",
															"src": "29880:12:0"
														}
													]
												},
												"id": 1748,
												"nodeType": "IfStatement",
												"src": "29811:92:0",
												"trueBody": {
													"id": 1740,
													"nodeType": "Block",
													"src": "29824:36:0",
													"statements": [
														{
															"expression": {
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1734,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "29838:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1735,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "29843:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29848:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "29843:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29838:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1739,
															"nodeType": "ExpressionStatement",
															"src": "29838:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													1750
												],
												"declarations": [
													{
														"constant": false,
														"id": 1750,
														"mutability": "mutable",
														"name": "meme_price_without_tax",
														"nameLocation": "29920:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "29912:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1754,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1751,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "29945:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1752,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "29950:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29912:40:0"
											},
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "meme_tax",
														"nameLocation": "29970:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "29962:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1757,
																	"name": "meme_price_without_tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "29982:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1758,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "30007:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29982:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1760,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29981:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1761,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "30018:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29981:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29962:65:0"
											},
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "meme_price_with_tax",
														"nameLocation": "30046:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "30038:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1766,
														"name": "meme_price_without_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "30068:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1767,
														"name": "meme_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "30093:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30068:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30038:63:0"
											},
											{
												"expression": {
													"id": 1770,
													"name": "meme_price_with_tax",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1765,
													"src": "30119:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1771,
												"nodeType": "Return",
												"src": "30112:26:0"
											}
										]
									},
									"functionSelector": "1a753fed",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHPrice",
									"nameLocation": "29515:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "29535:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "29527:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29526:20:0"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "29568:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29567:9:0"
									},
									"scope": 1942,
									"src": "29506:639:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "30200:515:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1779,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "30218:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30232:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30218:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d65204d656d65",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30235:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															},
															"value": "Send Some Meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															}
														],
														"id": 1778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30210:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "30210:42:0"
											},
											{
												"assignments": [
													1786
												],
												"declarations": [
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "meme_price",
														"nameLocation": "30270:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "30262:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1785,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"arguments": [
														{
															"id": 1788,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "30296:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1787,
														"name": "getMemePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "30283:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30283:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30262:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1792,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "30326:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1793,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "30340:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30344:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "30340:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30326:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64204d6f726520455448",
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30351:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															},
															"value": "Send More ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															}
														],
														"id": 1791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30318:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "30318:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1802,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30392:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30396:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30392:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1804,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "30404:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1799,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "30378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$704",
																"typeString": "contract ERC20"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30383:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "30378:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30378:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "30378:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1813,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "30455:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30459:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "30455:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1815,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "30467:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30455:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1809,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "30434:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30438:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "30434:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30426:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30426:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30426:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30446:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "30426:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30426:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "30426:52:0"
											},
											{
												"expression": {
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1819,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "30489:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1824,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1820,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "30498:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30504:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "30498:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30516:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "30498:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30489:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1825,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "30540:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1826,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "30555:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1827,
																					"name": "taxRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "30567:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30555:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1829,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30554:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30540:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1831,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "30539:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1832,
															"name": "precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "30591:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "30539:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30489:111:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "30489:111:0"
											},
											{
												"expression": {
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1836,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "30611:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1837,
														"name": "meme_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "30617:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30611:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "30611:17:0"
											},
											{
												"expression": {
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1840,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "30638:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1841,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "30644:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1842,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "30649:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30644:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1844,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "30643:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30638:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "30638:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1848,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30672:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30676:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30672:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1850,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "30684:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1851,
															"name": "meme_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "30697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1847,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "30668:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30668:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "EmitStatement",
												"src": "30663:45:0"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "30160:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "30172:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "30164:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30163:21:0"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30200:0:0"
									},
									"scope": 1942,
									"src": "30151:564:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "30762:540:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "30780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30780:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d6520455448",
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30796:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															},
															"value": "Send Some ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															}
														],
														"id": 1860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30772:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "30772:40:0"
											},
											{
												"assignments": [
													1868
												],
												"declarations": [
													{
														"constant": false,
														"id": 1868,
														"mutability": "mutable",
														"name": "eth_price",
														"nameLocation": "30830:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1940,
														"src": "30822:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1867,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1872,
												"initialValue": {
													"arguments": [
														{
															"id": 1870,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "30854:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1869,
														"name": "getETHPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "30842:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30842:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30822:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1874,
																"name": "eth_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "30884:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1877,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30912:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30916:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30912:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1875,
																		"name": "meme",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "30897:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$704",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30902:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 216,
																	"src": "30897:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30897:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30884:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520656e6f756768206d656d65",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30925:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															},
															"value": "You don't have enough meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															}
														],
														"id": 1873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30876:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30876:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "30876:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30982:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30986:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30982:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1891,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31002:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$1942",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$1942",
																		"typeString": "contract DEX"
																	}
																],
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30994:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1889,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30994:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30994:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1893,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "31009:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1884,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "30964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$704",
																"typeString": "contract ERC20"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30969:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "30964:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30964:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "30964:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1902,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "31058:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1898,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31037:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31041:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31037:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31029:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1896,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31029:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31029:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31049:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "31029:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31029:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "31029:40:0"
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1905,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "31080:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1910,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1906,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "31089:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31095:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "31089:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31107:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "31089:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31080:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1911,
																		"name": "eth_price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "31131:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1912,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "31144:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1913,
																					"name": "taxRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "31156:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31144:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1915,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31143:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "31131:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1917,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "31130:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1918,
															"name": "precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "31180:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "31130:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31080:109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "31080:109:0"
											},
											{
												"expression": {
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "31200:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1923,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "31206:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31200:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "31200:16:0"
											},
											{
												"expression": {
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1926,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "31226:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1927,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "31232:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1928,
																	"name": "_y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "31237:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1930,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31231:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31226:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "31226:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1934,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31261:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31265:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31261:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1936,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "31273:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1937,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "31284:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "Sell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "31256:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31256:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "EmitStatement",
												"src": "31251:44:0"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nameLocation": "30730:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "30743:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "30735:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30734:20:0"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30762:0:0"
									},
									"scope": 1942,
									"src": "30721:581:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1943,
							"src": "24286:7451:0",
							"usedErrors": []
						}
					],
					"src": "133:35071:0"
				},
				"id": 0
			}
		}
	}
}